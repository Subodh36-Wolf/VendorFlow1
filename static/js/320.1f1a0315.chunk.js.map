{"version":3,"file":"static/js/320.1f1a0315.chunk.js","mappings":"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","sources":["components/Admin/DailyTodoList.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc, query, where, orderBy, writeBatch } from 'firebase/firestore';\nimport { db } from '../../firebase';\nimport { useNotification } from './NotificationSystem';\nimport { \n  FiPlus, FiEdit2, FiTrash2, FiCheck, FiClock, FiCalendar, \n  FiFlag, FiUser, FiFilter, FiRefreshCw, FiCheckCircle, FiList,\n  FiTarget, FiTrendingUp, FiActivity, FiSearch, FiX, FiArrowUp, FiArrowDown,\n  FiPlay, FiPause, FiRotateCcw, FiBarChart2, FiSettings, FiChevronRight\n} from 'react-icons/fi';\n\nexport default function IndustrialTaskManager() {\n  const { showSuccess, showError } = useNotification();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [editingTask, setEditingTask] = useState(null);\n  const [filter, setFilter] = useState('all');\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [activeSequence, setActiveSequence] = useState(null);\n  const [currentStepIndex, setCurrentStepIndex] = useState(0);\n  \n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    priority: 'medium',\n    assignedTo: '',\n    dueDate: new Date().toISOString().split('T')[0],\n    category: 'production',\n    sequence: [{ step: '', completed: false }],\n    estimatedTime: 0,\n    department: 'manufacturing',\n    equipment: '',\n    safetyNotes: ''\n  });\n\n  useEffect(() => {\n    fetchTasks();\n  }, [selectedDate]);\n\n  const fetchTasks = async () => {\n    try {\n      setLoading(true);\n      const startOfDay = new Date(selectedDate);\n      startOfDay.setHours(0, 0, 0, 0);\n      \n      const endOfDay = new Date(selectedDate);\n      endOfDay.setHours(23, 59, 59, 999);\n\n      const tasksQuery = query(\n        collection(db, 'industrialTasks'),\n        where('dueDate', '>=', startOfDay),\n        where('dueDate', '<=', endOfDay),\n        orderBy('dueDate', 'asc')\n      );\n      \n      const tasksSnapshot = await getDocs(tasksQuery);\n      const tasksData = [];\n      tasksSnapshot.forEach((doc) => {\n        tasksData.push({ id: doc.id, ...doc.data() });\n      });\n\n      // Secondary sort by priority on client to avoid composite index\n      const prioWeight = { high: 3, medium: 2, low: 1 };\n      tasksData.sort((a, b) => {\n        const da = a.dueDate?.toDate ? a.dueDate.toDate() : new Date(a.dueDate);\n        const db = b.dueDate?.toDate ? b.dueDate.toDate() : new Date(b.dueDate);\n        if (da.getTime() !== db.getTime()) return da - db;\n        const pa = prioWeight[a.priority] || 0;\n        const pb = prioWeight[b.priority] || 0;\n        return pb - pa; // high before low\n      });\n\n      setTasks(tasksData);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n      showError('Failed to load tasks');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!formData.title.trim()) {\n      showError('Please enter a title');\n      return;\n    }\n\n    try {\n      const taskData = {\n        ...formData,\n        dueDate: new Date(formData.dueDate),\n        completed: false,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n        progress: 0,\n        status: 'pending'\n      };\n\n      if (editingTask) {\n        await updateDoc(doc(db, 'industrialTasks', editingTask.id), {\n          ...taskData,\n          createdAt: editingTask.createdAt\n        });\n        showSuccess('Task updated successfully');\n      } else {\n        await addDoc(collection(db, 'industrialTasks'), taskData);\n        showSuccess('Task added successfully');\n      }\n      \n      resetForm();\n      fetchTasks();\n    } catch (error) {\n      console.error('Error saving task:', error);\n      showError('Failed to save task');\n    }\n  };\n\n  const toggleComplete = async (taskId, completed) => {\n    try {\n      await updateDoc(doc(db, 'industrialTasks', taskId), {\n        completed: !completed,\n        updatedAt: new Date(),\n        status: !completed ? 'completed' : 'pending'\n      });\n      \n      setTasks(prev => prev.map(task => \n        task.id === taskId ? { ...task, completed: !completed, status: !completed ? 'completed' : 'pending' } : task\n      ));\n      \n      showSuccess(`Task marked as ${!completed ? 'completed' : 'pending'}`);\n    } catch (error) {\n      console.error('Error updating task:', error);\n      showError('Failed to update task');\n    }\n  };\n\n  const updateProgress = async (taskId, progress) => {\n    try {\n      await updateDoc(doc(db, 'industrialTasks', taskId), {\n        progress,\n        updatedAt: new Date(),\n        status: progress === 100 ? 'completed' : 'in-progress'\n      });\n      \n      setTasks(prev => prev.map(task => \n        task.id === taskId ? { ...task, progress, status: progress === 100 ? 'completed' : 'in-progress' } : task\n      ));\n      \n      showSuccess(`Progress updated to ${progress}%`);\n    } catch (error) {\n      console.error('Error updating progress:', error);\n      showError('Failed to update progress');\n    }\n  };\n\n  const deleteTask = async (taskId) => {\n    if (window.confirm('Are you sure you want to delete this task?')) {\n      try {\n        await deleteDoc(doc(db, 'industrialTasks', taskId));\n        setTasks(prev => prev.filter(task => task.id !== taskId));\n        showSuccess('Task deleted successfully');\n      } catch (error) {\n        console.error('Error deleting task:', error);\n        showError('Failed to delete task');\n      }\n    }\n  };\n\n  const editTask = (task) => {\n    setFormData({\n      title: task.title,\n      description: task.description || '',\n      priority: task.priority,\n      assignedTo: task.assignedTo || '',\n      dueDate: task.dueDate?.toDate?.()?.toISOString().split('T')[0] || selectedDate,\n      category: task.category || 'production',\n      sequence: task.sequence || [{ step: '', completed: false }],\n      estimatedTime: task.estimatedTime || 0,\n      department: task.department || 'manufacturing',\n      equipment: task.equipment || '',\n      safetyNotes: task.safetyNotes || ''\n    });\n    setEditingTask(task);\n    setShowAddForm(true);\n  };\n\n  const resetForm = () => {\n    setFormData({\n      title: '',\n      description: '',\n      priority: 'medium',\n      assignedTo: '',\n      dueDate: selectedDate,\n      category: 'production',\n      sequence: [{ step: '', completed: false }],\n      estimatedTime: 0,\n      department: 'manufacturing',\n      equipment: '',\n      safetyNotes: ''\n    });\n    setShowAddForm(false);\n    setEditingTask(null);\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSequenceChange = (index, field, value) => {\n    const updatedSequence = [...formData.sequence];\n    updatedSequence[index][field] = value;\n    setFormData(prev => ({\n      ...prev,\n      sequence: updatedSequence\n    }));\n  };\n\n  const addSequenceStep = () => {\n    setFormData(prev => ({\n      ...prev,\n      sequence: [...prev.sequence, { step: '', completed: false }]\n    }));\n  };\n\n  const removeSequenceStep = (index) => {\n    if (formData.sequence.length > 1) {\n      const updatedSequence = [...formData.sequence];\n      updatedSequence.splice(index, 1);\n      setFormData(prev => ({\n        ...prev,\n        sequence: updatedSequence\n      }));\n    }\n  };\n\n  const moveSequenceStep = (index, direction) => {\n    if ((direction === 'up' && index === 0) || \n        (direction === 'down' && index === formData.sequence.length - 1)) {\n      return;\n    }\n    \n    const updatedSequence = [...formData.sequence];\n    const targetIndex = direction === 'up' ? index - 1 : index + 1;\n    [updatedSequence[index], updatedSequence[targetIndex]] = \n    [updatedSequence[targetIndex], updatedSequence[index]];\n    \n    setFormData(prev => ({\n      ...prev,\n      sequence: updatedSequence\n    }));\n  };\n\n  const startSequence = (task) => {\n    setActiveSequence(task);\n    setCurrentStepIndex(0);\n  };\n\n  const completeStep = async (taskId, stepIndex) => {\n    try {\n      const task = tasks.find(t => t.id === taskId);\n      const updatedSequence = [...task.sequence];\n      updatedSequence[stepIndex].completed = true;\n      \n      const progress = Math.round(((stepIndex + 1) / task.sequence.length) * 100);\n      \n      const batch = writeBatch(db);\n      const taskRef = doc(db, 'industrialTasks', taskId);\n      \n      batch.update(taskRef, {\n        sequence: updatedSequence,\n        progress,\n        updatedAt: new Date(),\n        status: progress === 100 ? 'completed' : 'in-progress'\n      });\n      \n      await batch.commit();\n      \n      setTasks(prev => prev.map(t => \n        t.id === taskId ? { \n          ...t, \n          sequence: updatedSequence, \n          progress,\n          status: progress === 100 ? 'completed' : 'in-progress'\n        } : t\n      ));\n      \n      if (stepIndex < task.sequence.length - 1) {\n        setCurrentStepIndex(stepIndex + 1);\n      } else {\n        setActiveSequence(null);\n        showSuccess('Sequence completed!');\n      }\n    } catch (error) {\n      console.error('Error completing step:', error);\n      showError('Failed to complete step');\n    }\n  };\n\n  const getPriorityColor = (priority) => {\n    switch (priority) {\n      case 'high':\n        return 'bg-red-100 text-red-800 border-red-300';\n      case 'medium':\n        return 'bg-yellow-100 text-yellow-800 border-yellow-300';\n      case 'low':\n        return 'bg-green-100 text-green-800 border-green-300';\n      default:\n        return 'bg-gray-100 text-gray-800 border-gray-300';\n    }\n  };\n\n  const getCategoryColor = (category) => {\n    switch (category) {\n      case 'production':\n        return 'bg-blue-100 text-blue-800 border-blue-300';\n      case 'maintenance':\n        return 'bg-purple-100 text-purple-800 border-purple-300';\n      case 'safety':\n        return 'bg-red-100 text-red-800 border-red-300';\n      case 'quality':\n        return 'bg-indigo-100 text-indigo-800 border-indigo-300';\n      case 'logistics':\n        return 'bg-orange-100 text-orange-800 border-orange-300';\n      default:\n        return 'bg-gray-100 text-gray-800 border-gray-300';\n    }\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'completed':\n        return 'bg-green-100 text-green-800 border-green-300';\n      case 'in-progress':\n        return 'bg-blue-100 text-blue-800 border-blue-300';\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-800 border-yellow-300';\n      case 'on-hold':\n        return 'bg-red-100 text-red-800 border-red-300';\n      default:\n        return 'bg-gray-100 text-gray-800 border-gray-300';\n    }\n  };\n\n  const getDepartmentColor = (department) => {\n    switch (department) {\n      case 'manufacturing':\n        return 'bg-blue-50 text-blue-700';\n      case 'assembly':\n        return 'bg-green-50 text-green-700';\n      case 'packaging':\n        return 'bg-yellow-50 text-yellow-700';\n      case 'shipping':\n        return 'bg-orange-50 text-orange-700';\n      case 'quality-control':\n        return 'bg-purple-50 text-purple-700';\n      default:\n        return 'bg-gray-50 text-gray-700';\n    }\n  };\n\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'completed') return task.completed;\n    if (filter === 'pending') return !task.completed;\n    if (filter === 'in-progress') return task.status === 'in-progress';\n    return true;\n  });\n\n  const stats = {\n    total: tasks.length,\n    completed: tasks.filter(t => t.completed).length,\n    pending: tasks.filter(t => !t.completed).length,\n    inProgress: tasks.filter(t => t.status === 'in-progress').length,\n    highPriority: tasks.filter(t => t.priority === 'high' && !t.completed).length\n  };\n\n  return (\n    <div className=\"space-y-6 bg-gray-50 min-h-screen p-4\">\n      {/* Header */}\n      <div className=\"bg-white p-6 rounded-lg shadow border border-gray-200\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"w-12 h-12 bg-gradient-to-br from-blue-600 to-blue-800 rounded-lg flex items-center justify-center\">\n              <FiList className=\"text-white\" size={24} />\n            </div>\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">Industrial Task Manager</h1>\n              <p className=\"text-gray-600\">Manage production tasks and workflows</p>\n            </div>\n          </div>\n          <div className=\"flex space-x-3\">\n            <button\n              onClick={fetchTasks}\n              className=\"inline-flex items-center px-4 py-2 bg-gray-600 text-white font-medium rounded-md hover:bg-gray-700 transition-colors\"\n            >\n              <FiRefreshCw className=\"mr-2\" size={16} />\n              Refresh\n            </button>\n            <button\n              onClick={() => setShowAddForm(true)}\n              className=\"inline-flex items-center px-4 py-2 bg-blue-600 text-white font-medium rounded-md hover:bg-blue-700 transition-colors\"\n            >\n              <FiPlus className=\"mr-2\" size={16} />\n              New Task\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Stats Overview */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\n        <div className=\"bg-white p-4 rounded-lg shadow border border-gray-200\">\n          <div className=\"flex items-center\">\n            <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center mr-3\">\n              <FiTarget className=\"text-blue-600\" size={20} />\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-600\">Total Tasks</p>\n              <p className=\"text-xl font-bold text-gray-900\">{stats.total}</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white p-4 rounded-lg shadow border border-gray-200\">\n          <div className=\"flex items-center\">\n            <div className=\"w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center mr-3\">\n              <FiCheckCircle className=\"text-green-600\" size={20} />\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-600\">Completed</p>\n              <p className=\"text-xl font-bold text-gray-900\">{stats.completed}</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white p-4 rounded-lg shadow border border-gray-200\">\n          <div className=\"flex items-center\">\n            <div className=\"w-10 h-10 bg-yellow-100 rounded-lg flex items-center justify-center mr-3\">\n              <FiClock className=\"text-yellow-600\" size={20} />\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-600\">In Progress</p>\n              <p className=\"text-xl font-bold text-gray-900\">{stats.inProgress}</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white p-4 rounded-lg shadow border border-gray-200\">\n          <div className=\"flex items-center\">\n            <div className=\"w-10 h-10 bg-red-100 rounded-lg flex items-center justify-center mr-3\">\n              <FiFlag className=\"text-red-600\" size={20} />\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-600\">High Priority</p>\n              <p className=\"text-xl font-bold text-gray-900\">{stats.highPriority}</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white p-4 rounded-lg shadow border border-gray-200\">\n          <div className=\"flex items-center\">\n            <div className=\"w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center mr-3\">\n              <FiCalendar className=\"text-purple-600\" size={20} />\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-600\">Date</p>\n              <input\n                type=\"date\"\n                value={selectedDate}\n                onChange={(e) => setSelectedDate(e.target.value)}\n                className=\"text-sm font-medium text-gray-900 bg-transparent border-none p-0\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"bg-white p-4 rounded-lg shadow border border-gray-200\">\n        <div className=\"flex flex-wrap items-center gap-2\">\n          <span className=\"text-sm font-medium text-gray-700\">Filter:</span>\n          {['all', 'pending', 'in-progress', 'completed'].map((filterType) => (\n            <button\n              key={filterType}\n              onClick={() => setFilter(filterType)}\n              className={`px-3 py-1 rounded-md text-sm font-medium transition-colors ${\n                filter === filterType\n                  ? 'bg-blue-600 text-white'\n                  : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n              }`}\n            >\n              {filterType.charAt(0).toUpperCase() + filterType.slice(1)}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Task List */}\n      <div className=\"bg-white rounded-lg shadow border border-gray-200\">\n        <div className=\"p-4 border-b border-gray-200\">\n          <h2 className=\"text-lg font-semibold text-gray-900\">\n            Tasks for {new Date(selectedDate).toLocaleDateString()}\n          </h2>\n        </div>\n        \n        <div className=\"p-4\">\n          {loading ? (\n            <div className=\"flex justify-center items-center h-32\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-blue-500\"></div>\n            </div>\n          ) : filteredTasks.length > 0 ? (\n            <div className=\"space-y-4\">\n              {filteredTasks.map((task) => (\n                <div\n                  key={task.id}\n                  className={`p-4 border rounded-lg ${\n                    task.completed ? 'bg-gray-50 border-gray-200' : 'bg-white border-gray-300'\n                  }`}\n                >\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <h3 className={`font-medium ${task.completed ? 'text-gray-500 line-through' : 'text-gray-900'}`}>\n                          {task.title}\n                        </h3>\n                        <div className=\"flex items-center space-x-2\">\n                          <span className={`inline-flex items-center px-2 py-1 rounded-md text-xs font-medium ${getPriorityColor(task.priority)}`}>\n                            <FiFlag className=\"mr-1\" size={10} />\n                            {task.priority}\n                          </span>\n                          <span className={`inline-flex items-center px-2 py-1 rounded-md text-xs font-medium ${getStatusColor(task.status)}`}>\n                            {task.status}\n                          </span>\n                        </div>\n                      </div>\n                      \n                      {task.description && (\n                        <p className={`text-sm mb-3 ${task.completed ? 'text-gray-400' : 'text-gray-600'}`}>\n                          {task.description}\n                        </p>\n                      )}\n                      \n                      <div className=\"flex items-center flex-wrap gap-2 mb-3\">\n                        <span className={`inline-flex items-center px-2 py-1 rounded-md text-xs font-medium ${getCategoryColor(task.category)}`}>\n                          {task.category}\n                        </span>\n                        <span className={`inline-flex items-center px-2 py-1 rounded-md text-xs font-medium ${getDepartmentColor(task.department)}`}>\n                          {task.department}\n                        </span>\n                        {task.assignedTo && (\n                          <span className=\"inline-flex items-center px-2 py-1 bg-blue-100 text-blue-700 rounded-md text-xs font-medium\">\n                            <FiUser className=\"mr-1\" size={10} />\n                            {task.assignedTo}\n                          </span>\n                        )}\n                        {task.equipment && (\n                          <span className=\"inline-flex items-center px-2 py-1 bg-gray-100 text-gray-700 rounded-md text-xs font-medium\">\n                            🛠️ {task.equipment}\n                          </span>\n                        )}\n                        {task.estimatedTime > 0 && (\n                          <span className=\"inline-flex items-center px-2 py-1 bg-gray-100 text-gray-700 rounded-md text-xs font-medium\">\n                            <FiClock className=\"mr-1\" size={10} />\n                            {task.estimatedTime} min\n                          </span>\n                        )}\n                      </div>\n                      \n                      {/* Progress Bar */}\n                      <div className=\"mb-3\">\n                        <div className=\"flex justify-between text-xs text-gray-600 mb-1\">\n                          <span>Progress</span>\n                          <span>{task.progress}%</span>\n                        </div>\n                        <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                          <div \n                            className=\"bg-blue-600 h-2 rounded-full\" \n                            style={{ width: `${task.progress}%` }}\n                          ></div>\n                        </div>\n                      </div>\n                      \n                      {/* Sequence Steps */}\n                      {task.sequence && task.sequence.length > 0 && (\n                        <div className=\"mb-3\">\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <span className=\"text-sm font-medium text-gray-700\">Sequence Steps</span>\n                            {!task.completed && (\n                              <button\n                                onClick={() => startSequence(task)}\n                                className=\"inline-flex items-center px-2 py-1 bg-blue-100 text-blue-700 rounded-md text-xs font-medium hover:bg-blue-200 transition-colors\"\n                              >\n                                <FiPlay className=\"mr-1\" size={10} />\n                                Start Sequence\n                              </button>\n                            )}\n                          </div>\n                          <div className=\"space-y-1\">\n                            {task.sequence.map((step, index) => (\n                              <div key={index} className=\"flex items-center\">\n                                <div className={`w-5 h-5 rounded-full flex items-center justify-center mr-2 ${\n                                  step.completed ? 'bg-green-500' : 'bg-gray-300'\n                                }`}>\n                                  {step.completed ? (\n                                    <FiCheck className=\"text-white\" size={12} />\n                                  ) : (\n                                    <span className=\"text-xs text-white\">{index + 1}</span>\n                                  )}\n                                </div>\n                                <span className={`text-sm ${step.completed ? 'text-gray-500 line-through' : 'text-gray-700'}`}>\n                                  {step.step}\n                                </span>\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n                      \n                      {task.safetyNotes && (\n                        <div className=\"mb-3 p-2 bg-yellow-50 border border-yellow-200 rounded-md\">\n                          <p className=\"text-xs text-yellow-800\">\n                            <span className=\"font-medium\">Safety Notes:</span> {task.safetyNotes}\n                          </p>\n                        </div>\n                      )}\n                    </div>\n                    \n                    <div className=\"flex items-center space-x-2 ml-4\">\n                      {!task.completed && (\n                        <button\n                          onClick={() => editTask(task)}\n                          className=\"p-2 text-gray-400 hover:text-blue-600 hover:bg-blue-50 rounded-md transition-colors\"\n                          title=\"Edit Task\"\n                        >\n                          <FiEdit2 size={16} />\n                        </button>\n                      )}\n                      <button\n                        onClick={() => deleteTask(task.id)}\n                        className=\"p-2 text-gray-400 hover:text-red-600 hover:bg-red-50 rounded-md transition-colors\"\n                        title=\"Delete Task\"\n                      >\n                        <FiTrash2 size={16} />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-8\">\n              <div className=\"w-16 h-16 bg-gray-200 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                <FiList className=\"text-gray-500\" size={24} />\n              </div>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No tasks for this date</h3>\n              <p className=\"text-sm text-gray-500 mb-4\">Create a new task to get started</p>\n              <button\n                onClick={() => setShowAddForm(true)}\n                className=\"inline-flex items-center px-4 py-2 bg-blue-600 text-white font-medium rounded-md hover:bg-blue-700 transition-colors\"\n              >\n                <FiPlus className=\"mr-2\" size={16} />\n                Add Task\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Sequence Runner Modal */}\n      {activeSequence && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-lg shadow-lg p-6 w-full max-w-md\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Execute Sequence</h3>\n              <button\n                onClick={() => setActiveSequence(null)}\n                className=\"text-gray-400 hover:text-gray-600\"\n              >\n                <FiX size={20} />\n              </button>\n            </div>\n            \n            <div className=\"mb-4\">\n              <h4 className=\"font-medium text-gray-900 mb-2\">{activeSequence.title}</h4>\n              <p className=\"text-sm text-gray-600\">{currentStepIndex + 1} of {activeSequence.sequence.length} steps</p>\n            </div>\n            \n            <div className=\"mb-6\">\n              <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n                <p className=\"text-sm font-medium text-blue-800\">\n                  Step {currentStepIndex + 1}: {activeSequence.sequence[currentStepIndex].step}\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex justify-between\">\n              <button\n                onClick={() => setActiveSequence(null)}\n                className=\"px-4 py-2 text-gray-700 bg-gray-200 font-medium rounded-md hover:bg-gray-300 transition-colors\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={() => completeStep(activeSequence.id, currentStepIndex)}\n                className=\"px-4 py-2 bg-blue-600 text-white font-medium rounded-md hover:bg-blue-700 transition-colors\"\n              >\n                {currentStepIndex < activeSequence.sequence.length - 1 ? 'Next Step' : 'Complete Sequence'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Add/Edit Form Modal */}\n      {(showAddForm || editingTask) && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-lg shadow-lg p-6 w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <h3 className=\"text-xl font-semibold text-gray-900\">\n                {editingTask ? 'Edit Task' : 'Add New Task'}\n              </h3>\n              <button\n                onClick={resetForm}\n                className=\"text-gray-400 hover:text-gray-600\"\n              >\n                <FiX size={24} />\n              </button>\n            </div>\n            \n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Title *\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"title\"\n                    value={formData.title}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                    placeholder=\"Enter task title\"\n                    required\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Category\n                  </label>\n                  <select\n                    name=\"category\"\n                    value={formData.category}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  >\n                    <option value=\"production\">Production</option>\n                    <option value=\"maintenance\">Maintenance</option>\n                    <option value=\"safety\">Safety</option>\n                    <option value=\"quality\">Quality Control</option>\n                    <option value=\"logistics\">Logistics</option>\n                  </select>\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Description\n                </label>\n                <textarea\n                  name=\"description\"\n                  value={formData.description}\n                  onChange={handleInputChange}\n                  rows={3}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  placeholder=\"Enter task description\"\n                />\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Priority\n                  </label>\n                  <select\n                    name=\"priority\"\n                    value={formData.priority}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  >\n                    <option value=\"low\">Low</option>\n                    <option value=\"medium\">Medium</option>\n                    <option value=\"high\">High</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Department\n                  </label>\n                  <select\n                    name=\"department\"\n                    value={formData.department}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  >\n                    <option value=\"manufacturing\">Manufacturing</option>\n                    <option value=\"assembly\">Assembly</option>\n                    <option value=\"packaging\">Packaging</option>\n                    <option value=\"shipping\">Shipping</option>\n                    <option value=\"quality-control\">Quality Control</option>\n                  </select>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Assigned To\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"assignedTo\"\n                    value={formData.assignedTo}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                    placeholder=\"Assign to operator\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Due Date\n                  </label>\n                  <input\n                    type=\"date\"\n                    name=\"dueDate\"\n                    value={formData.dueDate}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Equipment\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"equipment\"\n                    value={formData.equipment}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                    placeholder=\"Machine or tool required\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Estimated Time (minutes)\n                  </label>\n                  <input\n                    type=\"number\"\n                    name=\"estimatedTime\"\n                    value={formData.estimatedTime}\n                    onChange={handleInputChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                    min=\"0\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Safety Notes\n                </label>\n                <textarea\n                  name=\"safetyNotes\"\n                  value={formData.safetyNotes}\n                  onChange={handleInputChange}\n                  rows={2}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  placeholder=\"Important safety precautions\"\n                />\n              </div>\n\n              <div>\n                <div className=\"flex items-center justify-between mb-2\">\n                  <label className=\"block text-sm font-medium text-gray-700\">\n                    Sequence Steps\n                  </label>\n                  <button\n                    type=\"button\"\n                    onClick={addSequenceStep}\n                    className=\"text-sm text-blue-600 hover:text-blue-800\"\n                  >\n                    + Add Step\n                  </button>\n                </div>\n                \n                <div className=\"space-y-2\">\n                  {formData.sequence.map((step, index) => (\n                    <div key={index} className=\"flex items-center space-x-2\">\n                      <span className=\"text-sm text-gray-600 w-6\">{index + 1}.</span>\n                      <input\n                        type=\"text\"\n                        value={step.step}\n                        onChange={(e) => handleSequenceChange(index, 'step', e.target.value)}\n                        className=\"flex-1 px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                        placeholder=\"Describe this step\"\n                      />\n                      <button\n                        type=\"button\"\n                        onClick={() => moveSequenceStep(index, 'up')}\n                        disabled={index === 0}\n                        className={`p-2 rounded-md ${index === 0 ? 'text-gray-300' : 'text-gray-600 hover:bg-gray-100'}`}\n                      >\n                        <FiArrowUp size={16} />\n                      </button>\n                      <button\n                        type=\"button\"\n                        onClick={() => moveSequenceStep(index, 'down')}\n                        disabled={index === formData.sequence.length - 1}\n                        className={`p-2 rounded-md ${index === formData.sequence.length - 1 ? 'text-gray-300' : 'text-gray-600 hover:bg-gray-100'}`}\n                      >\n                        <FiArrowDown size={16} />\n                      </button>\n                      <button\n                        type=\"button\"\n                        onClick={() => removeSequenceStep(index)}\n                        disabled={formData.sequence.length === 1}\n                        className={`p-2 rounded-md ${formData.sequence.length === 1 ? 'text-gray-300' : 'text-red-600 hover:bg-red-100'}`}\n                      >\n                        <FiX size={16} />\n                      </button>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"flex justify-end space-x-3 pt-4 border-t border-gray-200\">\n                <button\n                  type=\"button\"\n                  onClick={resetForm}\n                  className=\"px-4 py-2 text-gray-700 bg-gray-200 font-medium rounded-md hover:bg-gray-300 transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"px-4 py-2 bg-blue-600 text-white font-medium rounded-md hover:bg-blue-700 transition-colors\"\n                >\n                  {editingTask ? 'Update' : 'Add'} Task\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":["IndustrialTaskManager","showSuccess","showError","useNotification","tasks","setTasks","useState","loading","setLoading","showAddForm","setShowAddForm","editingTask","setEditingTask","filter","setFilter","selectedDate","setSelectedDate","Date","toISOString","split","activeSequence","setActiveSequence","currentStepIndex","setCurrentStepIndex","formData","setFormData","title","description","priority","assignedTo","dueDate","category","sequence","step","completed","estimatedTime","department","equipment","safetyNotes","useEffect","fetchTasks","async","startOfDay","setHours","endOfDay","tasksQuery","query","collection","db","where","orderBy","tasksSnapshot","getDocs","tasksData","forEach","doc","push","id","data","prioWeight","high","medium","low","sort","a","b","_a$dueDate","_b$dueDate","da","toDate","getTime","pa","error","console","resetForm","handleInputChange","e","name","value","target","prev","moveSequenceStep","index","direction","length","updatedSequence","targetIndex","getPriorityColor","getCategoryColor","getStatusColor","status","getDepartmentColor","filteredTasks","task","stats","total","t","pending","inProgress","highPriority","_jsxs","className","children","_jsx","FiList","size","onClick","FiRefreshCw","FiPlus","FiTarget","FiCheckCircle","FiClock","FiFlag","FiCalendar","type","onChange","map","filterType","charAt","toUpperCase","slice","toLocaleDateString","FiUser","progress","style","width","startSequence","FiPlay","FiCheck","_task$dueDate","_task$dueDate$toDate","_task$dueDate$toDate$","call","editTask","FiEdit2","window","confirm","deleteDoc","taskId","deleteTask","FiTrash2","FiX","stepIndex","find","Math","round","batch","writeBatch","taskRef","update","updatedAt","commit","completeStep","onSubmit","preventDefault","trim","taskData","createdAt","updateDoc","addDoc","placeholder","required","rows","min","addSequenceStep","handleSequenceChange","field","disabled","FiArrowUp","FiArrowDown","splice","removeSequenceStep"],"sourceRoot":""}