{"version":3,"file":"static/js/135.eaec60bd.chunk.js","mappings":"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","sources":["components/Admin/POPrintPreview.jsx","services/purchaseOrderService.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { FiDownload } from 'react-icons/fi';\nimport { db } from '../../firebase';\nimport { doc, getDoc } from 'firebase/firestore';\n\n// Shared operations list used across PO screens\nconst operations = [\n  { value: 'HBL', label: 'HBL (Horizontal Boring & Lathe)' },\n  { value: 'VTL', label: 'VTL (Vertical Turning Lathe)' },\n  { value: 'Drilling', label: 'Drilling' },\n  { value: 'VMC', label: 'VMC (Vertical Machining Center)' }\n];\n\nexport default function POPrintPreview({ poData, vendor, vendorId, onClose, autoPrint = false }) {\n  const [resolvedVendor, setResolvedVendor] = useState(vendor || null);\n\n  useEffect(() => {\n    let ignore = false;\n    const fetchVendor = async () => {\n      if (!vendor && vendorId) {\n        try {\n          const snap = await getDoc(doc(db, 'vendors', vendorId));\n          if (!ignore && snap.exists()) setResolvedVendor({ id: snap.id, ...snap.data() });\n        } catch (_) {}\n      }\n    };\n    fetchVendor();\n    return () => { ignore = true; };\n  }, [vendor, vendorId]);\n\n  const formatCurrency = (amount) => {\n    return new Intl.NumberFormat('en-IN', {\n      maximumFractionDigits: 2,\n      minimumFractionDigits: 2,\n    }).format(Number(amount || 0));\n  };\n\n  const numberToWords = (num) => {\n    const ones = ['', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine'];\n    const teens = ['Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];\n    const tens = ['', 'Ten', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];\n    if (num === 0) return 'Zero';\n    let words = '';\n    if (Math.floor(num / 10000000) > 0) { words += numberToWords(Math.floor(num / 10000000)) + ' Crore '; num %= 10000000; }\n    if (Math.floor(num / 100000) > 0) { words += numberToWords(Math.floor(num / 100000)) + ' Lakh '; num %= 100000; }\n    if (Math.floor(num / 1000) > 0) { words += numberToWords(Math.floor(num / 1000)) + ' Thousand '; num %= 1000; }\n    if (Math.floor(num / 100) > 0) { words += numberToWords(Math.floor(num / 100)) + ' Hundred '; num %= 100; }\n    if (num > 0) {\n      if (words !== '') words += 'and ';\n      if (num < 10) words += ones[num];\n      else if (num < 20) words += teens[num - 10];\n      else { words += tens[Math.floor(num / 10)]; if (num % 10 > 0) words += ' ' + ones[num % 10]; }\n    }\n    return words.trim();\n  };\n\n  const amountInWords = useMemo(() => {\n    const n = Math.floor(parseFloat(poData?.finalAmount || 0));\n    const paise = Math.round(((parseFloat(poData?.finalAmount || 0) % 1) || 0) * 100);\n    return (\n      numberToWords(n) + ' Rupees' + (paise ? ` and ${paise} Paise` : '')\n    );\n  }, [poData?.finalAmount]);\n\n  const handlePrint = () => window.print();\n\n  useEffect(() => {\n    if (autoPrint) {\n      // small timeout allows the DOM to render before printing\n      const t = setTimeout(() => window.print(), 100);\n      return () => clearTimeout(t);\n    }\n  }, [autoPrint]);\n\n  const opsText = useMemo(() => {\n    const ops = Array.isArray(poData?.operations) ? poData.operations : (poData?.operation ? [poData.operation] : []);\n    return ops.map(v => operations.find(o => o.value === v)?.label || v).join(', ');\n  }, [poData]);\n\n  const formatDate = (val) => {\n    try {\n      if (!val) return null;\n      let d = val;\n      if (typeof val?.toDate === 'function') d = val.toDate();\n      else if (typeof val === 'string') d = new Date(val);\n      return d.toLocaleDateString('en-IN', { day: '2-digit', month: 'short', year: 'numeric' });\n    } catch (_) {\n      return null;\n    }\n  };\n\n  return (\n    <div className=\"print-overlay fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4\">\n      <div className=\"bg-white rounded-lg max-w-5xl w-full max-h-[90vh] overflow-y-auto\">\n        <style>{`\n          @media print {\n            @page { size: A4 portrait; margin: 10mm 15mm 15mm 15mm; }\n            body { -webkit-print-color-adjust: exact; print-color-adjust: exact; background: white !important; }\n            * { background: transparent !important; box-shadow: none !important; text-shadow: none !important; }\n            body * { visibility: hidden !important; }\n            .print-overlay, .print-overlay * { visibility: visible !important; }\n            .print-overlay { position: static !important; inset: auto !important; padding: 0 !important; background: transparent !important; overflow: visible !important; }\n            html, body { overflow: visible !important; height: auto !important; width: 210mm !important; margin: 0 !important; padding: 0 !important; }\n            #po-preview { width: 100% !important; margin: 0 !important; padding: 0 !important; }\n            .no-print { display: none !important; }\n            .print-a4 { box-shadow: none !important; margin: 0 !important; padding: 0 !important; }\n            .page-break { page-break-after: always; }\n          }\n          .print-a4 { max-width: 210mm; margin: 18px auto; background: white; font-family: 'Helvetica','Arial',sans-serif; line-height: 1.35; color: #000; font-size: 12px; }\n          .company-header { border-bottom: 2px solid #2c5282; padding-bottom: 10px; margin-bottom: 15px; }\n          .po-title { background: #2c5282; color: white; padding: 8px 15px; font-weight: bold; font-size: 16px; text-align: center; border-radius: 4px; margin: 10px 0; }\n          .section-title { font-size: 13px; font-weight: bold; padding-bottom: 4px; margin-bottom: 8px; border-bottom: 1px solid #ccc; text-transform: uppercase; color: #2c5282; }\n          .table { width: 100%; border-collapse: collapse; margin: 10px 0; }\n          .table th { background: #f0f4f8; border: 1px solid #ccc; padding: 6px 8px; font-size: 11px; font-weight: bold; text-align: left; }\n          .table td { border: 1px solid #ccc; padding: 6px 8px; font-size: 11px; vertical-align: top; }\n          .table-footer td { font-weight: bold; background: #f8f9fa; }\n          .signature-area { margin-top: 40px; border-top: 1px dashed #ccc; padding-top: 15px; }\n          .terms-box { border: 1px solid #ccc; padding: 10px; margin: 10px 0; background: #f9f9f9; font-size: 11px; }\n          .amount-in-words { padding: 8px; background: #f0f4f8; border: 1px solid #ccc; margin: 10px 0; font-style: italic; }\n          .footer { margin-top: 30px; font-size: 10px; text-align: center; color: #666; }\n        `}</style>\n\n        <div className=\"p-4 border-b border-gray-200 flex justify-between items-center no-print\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">Print Purchase Order</h2>\n          <div className=\"flex space-x-2\">\n            <button onClick={handlePrint} className=\"inline-flex items-center px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700\">\n              <FiDownload className=\"mr-2\" size={16} /> Print / Save PDF\n            </button>\n            <button onClick={onClose} className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50\">Close</button>\n          </div>\n        </div>\n\n        <div className=\"print-a4 p-10\" id=\"po-preview\">\n          <div className=\"company-header\">\n            <div className=\"flex justify-between items-start\">\n              <div>\n                <div className=\"text-xl font-bold\">THORAT VALVES PVT. LTD.</div>\n                <div className=\"text-sm\">607, Shaniwar Peth, Satara - 415002</div>\n                <div className=\"text-sm\">Phone: +91-2162-270262 • Email: thoratvalves@gmail.com</div>\n                <div className=\"text-sm\">GSTIN: 27AAACT0000Z1Z5</div>\n              </div>\n              <div className=\"text-right\">\n                <div className=\"text-sm\">PO Reference: {poData?.poNumber || `PO${new Date().getFullYear()}${String(new Date().getMonth()+1).padStart(2,'0')}${String(new Date().getDate()).padStart(2,'0')}`}</div>\n                <div className=\"text-sm\">Date: {formatDate(poData?.createdAt) || formatDate(new Date())}</div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"po-title\">PURCHASE ORDER</div>\n\n          <div className=\"grid grid-cols-2 gap-8 mb-6\">\n            <div>\n              <table className=\"details-table\">\n                <tbody>\n                  <tr><td className=\"font-bold pr-4\">PO Number:</td><td>{poData?.poNumber || '-'}</td></tr>\n                  <tr><td className=\"font-bold\">PO Date:</td><td>{new Date().toLocaleDateString('en-IN', { day: '2-digit', month: 'short', year: 'numeric' })}</td></tr>\n                  <tr><td className=\"font-bold\">Operation(s):</td><td>{opsText || 'Not Specified'}</td></tr>\n                </tbody>\n              </table>\n            </div>\n            <div>\n              <table className=\"details-table\">\n                <tbody>\n                  <tr><td className=\"font-bold pr-4\">Delivery By:</td><td>{formatDate(poData?.deliveryDate) || 'TBD'}</td></tr>\n                  <tr><td className=\"font-bold\">Payment Terms:</td><td>{poData?.paymentTerms || '-'} Days</td></tr>\n                  <tr><td className=\"font-bold\">State of Supply:</td><td>{poData?.stateOfSupply || '-'}</td></tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          <div className=\"mb-6\">\n            <div className=\"section-title\">VENDOR DETAILS</div>\n            {resolvedVendor ? (\n              <div className=\"grid grid-cols-2 gap-8\">\n                <div>\n                  <div className=\"font-bold\">{resolvedVendor.name}</div>\n                  <div className=\"whitespace-pre-line\">{resolvedVendor.address || 'Address not specified'}</div>\n                  <div>GSTIN: {resolvedVendor.gstin || 'Not provided'}</div>\n                </div>\n                <div>\n                  <div><span className=\"font-bold\">Contact:</span> {resolvedVendor.contactPerson || 'Not specified'}</div>\n                  <div><span className=\"font-bold\">Phone:</span> {resolvedVendor.phone || 'Not provided'}</div>\n                  <div><span className=\"font-bold\">Email:</span> {resolvedVendor.email || 'Not provided'}</div>\n                </div>\n              </div>\n            ) : (\n              <div>Vendor details not available</div>\n            )}\n          </div>\n\n          <div className=\"mb-6\">\n            <div className=\"section-title\">ITEMS / SERVICES</div>\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th style={{width: '5%'}}>Sr No.</th>\n                  <th style={{width: '35%'}}>Description</th>\n                  <th style={{width: '10%'}}>Operation</th>\n                  <th style={{width: '8%'}}>Qty</th>\n                  <th style={{width: '8%'}}>Unit</th>\n                  <th style={{width: '12%'}}>Rate (₹)</th>\n                  <th style={{width: '14%'}}>Amount (₹)</th>\n                </tr>\n              </thead>\n              <tbody>\n                {(poData?.items || []).map((item, index) => (\n                  <tr key={index}>\n                    <td className=\"text-center\">{index + 1}</td>\n                    <td>\n                      <div className=\"font-medium\">{item.description}</div>\n                      {item.specifications && (\n                        <div className=\"text-xs mt-1 text-gray-600\">{item.specifications}</div>\n                      )}\n                    </td>\n                    <td>{item.operation ? (operations.find(o => o.value === item.operation)?.label || item.operation) : '-'}</td>\n                    <td className=\"text-center\">{item.quantity}</td>\n                    <td className=\"text-center\">{item.unit}</td>\n                    <td className=\"text-right\">{formatCurrency(parseFloat(item.unitPrice || 0))}</td>\n                    <td className=\"text-right\">{formatCurrency(parseFloat(item.amount || 0))}</td>\n                  </tr>\n                ))}\n              </tbody>\n              <tfoot className=\"table-footer\">\n                <tr>\n                  <td colSpan=\"5\" className=\"text-right font-bold\">Subtotal:</td>\n                  <td colSpan=\"2\" className=\"text-right\">{formatCurrency(parseFloat(poData?.totalAmount || 0))}</td>\n                </tr>\n                {parseFloat(poData?.discountAmount) > 0 && (\n                  <tr>\n                    <td colSpan=\"5\" className=\"text-right font-bold\">Discount:</td>\n                    <td colSpan=\"2\" className=\"text-right\">-{formatCurrency(parseFloat(poData?.discountAmount || 0))}</td>\n                  </tr>\n                )}\n                {parseFloat(poData?.taxAmount) > 0 && (\n                  <tr>\n                    <td colSpan=\"5\" className=\"text-right font-bold\">GST ({poData?.taxRate}%):</td>\n                    <td colSpan=\"2\" className=\"text-right\">{formatCurrency(parseFloat(poData?.taxAmount || 0))}</td>\n                  </tr>\n                )}\n                {poData?.roundOffEnabled && (\n                  <tr>\n                    <td colSpan=\"5\" className=\"text-right font-bold\">Round Off:</td>\n                    <td colSpan=\"2\" className=\"text-right\">{formatCurrency(parseFloat(poData?.roundOffValue || 0))}</td>\n                  </tr>\n                )}\n                <tr>\n                  <td colSpan=\"5\" className=\"text-right font-bold\">TOTAL (₹):</td>\n                  <td colSpan=\"2\" className=\"text-right font-bold\">{formatCurrency(parseFloat(poData?.finalAmount || 0))}</td>\n                </tr>\n              </tfoot>\n            </table>\n          </div>\n\n          <div className=\"amount-in-words\">\n            <span className=\"font-bold\">Amount in Words: </span>\n            {amountInWords} Only\n          </div>\n\n          {poData?.terms && (\n            <div className=\"mb-6\">\n              <div className=\"section-title\">TERMS AND CONDITIONS</div>\n              <div className=\"terms-box\">\n                <div className=\"whitespace-pre-line\">{poData.terms}</div>\n              </div>\n            </div>\n          )}\n\n          {poData?.description && (\n            <div className=\"mb-6\">\n              <div className=\"section-title\">SPECIAL INSTRUCTIONS / WORK DESCRIPTION</div>\n              <div className=\"p-3 border border-gray-300\">\n                {poData.description}\n              </div>\n            </div>\n          )}\n\n          <div className=\"signature-area\">\n            <div className=\"grid grid-cols-2 gap-8\">\n              <div>\n                <div className=\"font-bold mb-2\">For THORAT VALVES PVT. LTD.</div>\n                <div className=\"h-16 border-b border-gray-400\"></div>\n                <div className=\"text-sm mt-1\">Authorized Signatory</div>\n                <div className=\"text-sm\">Prepared By: (D.R. Naik)</div>\n              </div>\n              <div>\n                <div className=\"font-bold mb-2\">VENDOR ACCEPTANCE</div>\n                <div className=\"h-16 border-b border-gray-400\"></div>\n                <div className=\"text-sm mt-1\">Authorized Signatory</div>\n                <div className=\"text-sm\">Date: __________________________</div>\n                <div className=\"text-sm\">Company Seal</div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"footer\">\n            <div>This is a computer generated document and does not require a physical signature</div>\n            <div>Page 1 of 1</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { collection, addDoc, getDocs, getDoc, updateDoc, deleteDoc, doc, serverTimestamp, query, orderBy, where, writeBatch } from 'firebase/firestore';\nimport { db } from '../firebase';\n\nconst PO_COLLECTION = 'purchaseOrders';\nconst ACTIVITY_COLLECTION = 'poActivity';\n\nexport function normalizePOForSave(raw) {\n    const items = Array.isArray(raw.items) ? raw.items : [];\n    // Normalize operations: accept either `operations` array or single `operation` string\n    const normalizedOperations = Array.isArray(raw.operations)\n        ? raw.operations.filter(Boolean)\n        : (raw.operation ? [String(raw.operation)] : []);\n\n    const safeItems = items.map((it) => {\n        const quantity = Number(it.quantity) || 0;\n        const unitPrice = Number(it.unitPrice ?? it.rate) || 0;\n        return {\n            description: String(it.description || '').trim(),\n            quantity,\n            unitPrice,\n            amount: Number(it.amount ?? (quantity * unitPrice)).toFixed ? Number((quantity * unitPrice).toFixed(2)) : (quantity * unitPrice),\n            unit: String(it.unit || 'pcs'),\n            specifications: String(it.specifications || ''),\n            deliveryDate: it.deliveryDate || '',\n            itemId: it.itemId || null,\n            // Per-item operation (optional)\n            operation: it.operation || null,\n        };\n    });\n\n    const subtotal = safeItems.reduce((sum, it) => sum + (Number(it.amount) || 0), 0);\n    const discountAmount = Number(raw.discountAmount || 0);\n    const afterDiscount = subtotal - discountAmount;\n    const taxRate = Number(raw.taxRate || 0);\n    const taxAmount = (afterDiscount * taxRate) / 100;\n    let finalAmount = afterDiscount + taxAmount;\n\n    // Handle optional round-off like Delivery Challan form\n    const roundOffEnabled = Boolean(raw.roundOffEnabled);\n    let roundOffValue = Number(raw.roundOffValue || 0);\n    if (roundOffEnabled) {\n        const rounded = Math.round(finalAmount);\n        roundOffValue = Number((rounded - finalAmount).toFixed(2));\n        finalAmount = rounded;\n    }\n\n    // Initialize per-operation status maps\n    const operationsStatus = normalizedOperations.reduce((acc, op) => {\n        acc[String(op)] = (raw.operationsStatus && raw.operationsStatus[op]) || 'pending';\n        return acc;\n    }, {});\n    const operationsMeta = normalizedOperations.reduce((acc, op) => {\n        const meta = (raw.operationsMeta && raw.operationsMeta[op]) || {};\n        acc[String(op)] = {\n            status: operationsStatus[String(op)] || 'pending',\n            notes: meta.notes || '',\n            updatedAt: meta.updatedAt || null,\n            updatedBy: meta.updatedBy || null,\n            startedAt: meta.startedAt || null,\n            completedAt: meta.completedAt || null,\n        };\n        return acc;\n    }, {});\n\n    return {\n        vendorId: String(raw.vendorId || '').trim(),\n        // Keep legacy single operation for backward compatibility (first operation if any)\n        operation: normalizedOperations[0] ? String(normalizedOperations[0]).trim() : '',\n        // New multi-operations field\n        operations: normalizedOperations,\n        // New per-operation status fields\n        operationsStatus,\n        operationsMeta,\n        description: String(raw.description || ''),\n        deliveryDate: raw.deliveryDate ? (raw.deliveryDate instanceof Date ? raw.deliveryDate : new Date(raw.deliveryDate)) : null,\n        priority: raw.priority || 'medium',\n        status: raw.status || 'pending',\n        paymentTerms: String(raw.paymentTerms ?? '30'),\n        shippingAddress: String(raw.shippingAddress || ''),\n        billingAddress: String(raw.billingAddress || ''),\n        currency: raw.currency || 'INR',\n        invoiceDate: raw.invoiceDate || null,\n        dueDate: raw.dueDate || null,\n        stateOfSupply: String(raw.stateOfSupply || ''),\n        taxRate,\n        discountAmount,\n        items: safeItems,\n        totalAmount: Number(subtotal.toFixed(2)),\n        taxAmount: Number(taxAmount.toFixed(2)),\n        finalAmount: Number(finalAmount.toFixed(2)),\n        roundOffEnabled,\n        roundOffValue,\n        specifications: String(raw.specifications || ''),\n        qualityRequirements: String(raw.qualityRequirements || ''),\n        expectedDeliveryDays: Number(raw.expectedDeliveryDays || 0) || 0,\n        warrantPeriod: String(raw.warrantPeriod || ''),\n        terms: String(raw.terms || ''),\n        poNumber: raw.poNumber || null,\n    };\n}\n\nexport function mapPOFromDoc(docSnap) {\n    const d = docSnap.data() || {};\n    return { id: docSnap.id, ...d };\n}\n\nasync function logActivity(poId, action, details) {\n\ttry {\n\t\tawait addDoc(collection(db, ACTIVITY_COLLECTION), { poId, action, details: details || {}, timestamp: serverTimestamp() });\n\t} catch (_) {}\n}\n\nexport async function getPOsOrdered() {\n\tconst q = query(collection(db, PO_COLLECTION), orderBy('createdAt', 'desc'));\n\tconst snap = await getDocs(q);\n\treturn snap.docs.map(mapPOFromDoc);\n}\n\nexport async function getPOById(id) {\n\tconst snap = await getDoc(doc(db, PO_COLLECTION, id));\n\tif (!snap.exists()) return null;\n\treturn mapPOFromDoc(snap);\n}\n\nexport async function createPO(raw) {\n\tconst data = normalizePOForSave(raw);\n\tconst now = serverTimestamp();\n\tconst ref = await addDoc(collection(db, PO_COLLECTION), { ...data, createdAt: now, updatedAt: now });\n\tawait logActivity(ref.id, 'create', { vendorId: data.vendorId, amount: data.finalAmount });\n\treturn { id: ref.id, ...data };\n}\n\nexport async function updatePO(id, raw) {\n\tconst data = normalizePOForSave(raw);\n\tawait updateDoc(doc(db, PO_COLLECTION, id), { ...data, updatedAt: serverTimestamp() });\n\tawait logActivity(id, 'update', { status: data.status });\n}\n\nexport async function deletePO(id) {\n\tawait deleteDoc(doc(db, PO_COLLECTION, id));\n\tawait logActivity(id, 'delete');\n}\n\nexport async function bulkUpdatePOs(ids, fields) {\n\tconst batch = writeBatch(db);\n\tids.forEach((id) => batch.update(doc(db, PO_COLLECTION, id), { ...fields, updatedAt: serverTimestamp() }));\n\tawait batch.commit();\n\tfor (const id of ids) logActivity(id, 'bulk_update', { fields });\n}\n\nexport async function bulkDeletePOs(ids) {\n\tconst batch = writeBatch(db);\n\tids.forEach((id) => batch.delete(doc(db, PO_COLLECTION, id)));\n\tawait batch.commit();\n\tfor (const id of ids) logActivity(id, 'bulk_delete');\n}\n"],"names":["operations","value","label","POPrintPreview","_ref","poData","vendor","vendorId","onClose","autoPrint","resolvedVendor","setResolvedVendor","useState","useEffect","ignore","async","snap","getDoc","doc","db","exists","id","data","_","fetchVendor","formatCurrency","amount","Intl","NumberFormat","maximumFractionDigits","minimumFractionDigits","format","Number","numberToWords","num","ones","teens","tens","words","Math","floor","trim","amountInWords","useMemo","n","parseFloat","finalAmount","paise","round","t","setTimeout","window","print","clearTimeout","opsText","Array","isArray","operation","map","v","_operations$find","find","o","join","formatDate","val","d","toDate","Date","toLocaleDateString","day","month","year","_jsx","className","children","_jsxs","onClick","handlePrint","FiDownload","size","poNumber","getFullYear","String","getMonth","padStart","getDate","createdAt","deliveryDate","paymentTerms","stateOfSupply","name","address","gstin","contactPerson","phone","email","style","width","items","item","index","_operations$find2","description","specifications","quantity","unit","unitPrice","colSpan","totalAmount","discountAmount","taxAmount","taxRate","roundOffEnabled","roundOffValue","terms","PO_COLLECTION","ACTIVITY_COLLECTION","normalizePOForSave","raw","_raw$paymentTerms","normalizedOperations","filter","Boolean","safeItems","it","_it$unitPrice","_it$amount","rate","toFixed","itemId","subtotal","reduce","sum","afterDiscount","rounded","operationsStatus","acc","op","operationsMeta","meta","status","notes","updatedAt","updatedBy","startedAt","completedAt","priority","shippingAddress","billingAddress","currency","invoiceDate","dueDate","qualityRequirements","expectedDeliveryDays","warrantPeriod","mapPOFromDoc","docSnap","logActivity","poId","action","details","addDoc","collection","timestamp","serverTimestamp","getPOById","createPO","now","ref","updatePO","updateDoc","deletePO","deleteDoc","bulkUpdatePOs","ids","fields","batch","writeBatch","forEach","update","commit","bulkDeletePOs","delete"],"sourceRoot":""}