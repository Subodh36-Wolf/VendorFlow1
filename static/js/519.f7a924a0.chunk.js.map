{"version":3,"file":"static/js/519.f7a924a0.chunk.js","mappings":"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","sources":["components/Admin/VendorPerformance.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { doc, getDoc, updateDoc, collection, getDocs, query, where, addDoc, orderBy, limit } from 'firebase/firestore';\nimport { db } from '../../firebase';\nimport { useNotification } from './NotificationSystem';\nimport { \n  FiArrowLeft, FiStar, FiTrendingUp, FiTrendingDown, FiBarChart2, \n  FiCalendar, FiDollarSign, FiCheckCircle, FiClock, FiAlertTriangle,\n  FiFileText, FiUser, FiEdit2, FiSave, FiX, FiPlus, FiActivity,\n  FiTarget, FiAward, FiRefreshCw\n} from 'react-icons/fi';\n\nexport default function VendorPerformance() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const { showSuccess, showError } = useNotification();\n  \n  const [vendor, setVendor] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [performanceData, setPerformanceData] = useState({});\n  const [ratings, setRatings] = useState([]);\n  const [performanceTrend, setPerformanceTrend] = useState([]);\n  const [recentActivity, setRecentActivity] = useState([]);\n  const [newRating, setNewRating] = useState({\n    category: '',\n    rating: 5,\n    comment: '',\n    ratedBy: ''\n  });\n  const [showAddRating, setShowAddRating] = useState(false);\n  const [editingRating, setEditingRating] = useState(null);\n  const [selectedTimeframe, setSelectedTimeframe] = useState('3months');\n\n  const performanceCategories = [\n    { key: 'quality', label: 'Quality of Work', icon: FiCheckCircle },\n    { key: 'timeliness', label: 'Timeliness', icon: FiClock },\n    { key: 'communication', label: 'Communication', icon: FiUser },\n    { key: 'pricing', label: 'Pricing Competitiveness', icon: FiDollarSign },\n    { key: 'reliability', label: 'Reliability', icon: FiTrendingUp },\n    { key: 'innovation', label: 'Innovation', icon: FiBarChart2 }\n  ];\n\n  useEffect(() => {\n    if (id) {\n      fetchVendorPerformance();\n    }\n  }, [id]);\n\n  const fetchVendorPerformance = async () => {\n    try {\n      setLoading(true);\n      \n      // Fetch vendor details\n      const vendorDoc = await getDoc(doc(db, 'vendors', id));\n      if (!vendorDoc.exists()) {\n        showError('Vendor not found');\n        navigate('/admin/vendors');\n        return;\n      }\n      \n      const vendorData = { id: vendorDoc.id, ...vendorDoc.data() };\n      setVendor(vendorData);\n\n      // Fetch performance ratings\n      const ratingsQuery = query(collection(db, 'vendorRatings'), where('vendorId', '==', id));\n      const ratingsSnapshot = await getDocs(ratingsQuery);\n      const ratingsData = ratingsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setRatings(ratingsData);\n\n      // Calculate performance metrics\n      const posQuery = query(collection(db, 'purchaseOrders'), where('vendorId', '==', id));\n      const posSnapshot = await getDocs(posQuery);\n      const pos = posSnapshot.docs.map(doc => doc.data());\n\n      const jobsQuery = query(collection(db, 'jobAssignments'), where('vendorId', '==', id));\n      const jobsSnapshot = await getDocs(jobsQuery);\n      const jobs = jobsSnapshot.docs.map(doc => doc.data());\n\n      // Calculate performance data\n      const totalPOs = pos.length;\n      const completedPOs = pos.filter(po => po.status === 'completed').length;\n      const pendingPOs = pos.filter(po => po.status === 'pending').length;\n      const cancelledPOs = pos.filter(po => po.status === 'cancelled').length;\n      \n      const onTimePOs = pos.filter(po => {\n        if (po.status === 'completed' && po.deliveryDate && po.completedAt) {\n          return po.completedAt.toDate() <= po.deliveryDate.toDate();\n        }\n        return false;\n      }).length;\n\n      const totalSpend = pos.reduce((sum, po) => sum + (parseFloat(po.totalAmount) || 0), 0);\n      const avgOrderValue = totalPOs > 0 ? totalSpend / totalPOs : 0;\n\n      // Calculate monthly performance trend\n      const monthlyData = {};\n      pos.forEach(po => {\n        if (po.createdAt) {\n          const month = po.createdAt.toDate().toISOString().slice(0, 7); // YYYY-MM format\n          if (!monthlyData[month]) {\n            monthlyData[month] = { orders: 0, spend: 0, completed: 0 };\n          }\n          monthlyData[month].orders++;\n          monthlyData[month].spend += parseFloat(po.totalAmount) || 0;\n          if (po.status === 'completed') monthlyData[month].completed++;\n        }\n      });\n\n      const trendData = Object.entries(monthlyData)\n        .sort(([a], [b]) => a.localeCompare(b))\n        .slice(-6) // Last 6 months\n        .map(([month, data]) => ({\n          month,\n          orders: data.orders,\n          spend: data.spend,\n          completionRate: data.orders > 0 ? (data.completed / data.orders) * 100 : 0\n        }));\n\n      // Recent activity\n      const activity = [\n        ...pos.slice(-5).map(po => ({\n          type: 'PO',\n          title: `Purchase Order #${po.poNumber || 'N/A'}`,\n          status: po.status,\n          date: po.createdAt?.toDate(),\n          amount: po.totalAmount\n        })),\n        ...jobs.slice(-5).map(job => ({\n          type: 'Job',\n          title: job.title || 'Job Assignment',\n          status: job.status,\n          date: job.createdAt?.toDate(),\n          amount: job.budget\n        }))\n      ].sort((a, b) => (b.date || 0) - (a.date || 0)).slice(0, 10);\n\n      // Calculate category averages\n      const categoryAverages = {};\n      performanceCategories.forEach(category => {\n        const categoryRatings = ratingsData.filter(rating => rating.category === category.key);\n        const avgRating = categoryRatings.length > 0 \n          ? categoryRatings.reduce((sum, rating) => sum + rating.rating, 0) / categoryRatings.length \n          : 0;\n        categoryAverages[category.key] = avgRating;\n      });\n\n      const overallRating = Object.values(categoryAverages).reduce((sum, rating) => sum + rating, 0) / performanceCategories.length;\n\n      setPerformanceData({\n        totalPOs,\n        completedPOs,\n        pendingPOs,\n        cancelledPOs,\n        onTimePOs,\n        totalSpend,\n        avgOrderValue,\n        completionRate: totalPOs > 0 ? (completedPOs / totalPOs) * 100 : 0,\n        onTimeRate: completedPOs > 0 ? (onTimePOs / completedPOs) * 100 : 0,\n        categoryAverages,\n        overallRating,\n        totalJobs: jobs.length,\n        completedJobs: jobs.filter(job => job.status === 'completed').length,\n        pendingJobs: jobs.filter(job => job.status === 'pending').length,\n        avgJobValue: jobs.length > 0 ? jobs.reduce((sum, job) => sum + (parseFloat(job.budget) || 0), 0) / jobs.length : 0\n      });\n\n      setPerformanceTrend(trendData);\n      setRecentActivity(activity);\n\n    } catch (error) {\n      console.error('Error fetching vendor performance:', error);\n      showError('Failed to load vendor performance data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddRating = async (e) => {\n    e.preventDefault();\n    \n    if (!newRating.category || !newRating.ratedBy.trim()) {\n      showError('Please fill in all required fields');\n      return;\n    }\n\n    try {\n      await addDoc(collection(db, 'vendorRatings'), {\n        ...newRating,\n        vendorId: id,\n        createdAt: new Date()\n      });\n\n      // Update vendor's overall rating\n      const updatedRatings = [...ratings, { ...newRating, vendorId: id, createdAt: new Date() }];\n      const categoryAverages = {};\n      performanceCategories.forEach(category => {\n        const categoryRatings = updatedRatings.filter(rating => rating.category === category.key);\n        const avgRating = categoryRatings.length > 0 \n          ? categoryRatings.reduce((sum, rating) => sum + rating.rating, 0) / categoryRatings.length \n          : 0;\n        categoryAverages[category.key] = avgRating;\n      });\n\n      const overallRating = Object.values(categoryAverages).reduce((sum, rating) => sum + rating, 0) / performanceCategories.length;\n\n      await updateDoc(doc(db, 'vendors', id), {\n        rating: overallRating,\n        updatedAt: new Date()\n      });\n\n      showSuccess('Rating added successfully');\n      setNewRating({ category: '', rating: 5, comment: '', ratedBy: '' });\n      setShowAddRating(false);\n      fetchVendorPerformance();\n    } catch (error) {\n      console.error('Error adding rating:', error);\n      showError('Failed to add rating');\n    }\n  };\n\n  const renderStars = (rating, size = 20) => {\n    const stars = [];\n    for (let i = 1; i <= 5; i++) {\n      stars.push(\n        <FiStar\n          key={i}\n          size={size}\n          className={i <= rating ? 'text-yellow-400 fill-current' : 'text-gray-300'}\n        />\n      );\n    }\n    return <div className=\"flex\">{stars}</div>;\n  };\n\n  const getPerformanceColor = (value, threshold = 80) => {\n    if (value >= threshold) return 'text-green-600';\n    if (value >= threshold * 0.7) return 'text-yellow-600';\n    return 'text-red-600';\n  };\n\n  const getPerformanceIcon = (value, threshold = 80) => {\n    if (value >= threshold) return <FiTrendingUp className=\"text-green-600\" />;\n    if (value >= threshold * 0.7) return <FiTrendingUp className=\"text-yellow-600\" />;\n    return <FiTrendingDown className=\"text-red-600\" />;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\n      </div>\n    );\n  }\n\n  if (!vendor) {\n    return (\n      <div className=\"text-center py-8\">\n        <p className=\"text-gray-500\">Vendor not found</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-7xl mx-auto space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <button\n            onClick={() => navigate('/admin/vendors')}\n            className=\"flex items-center text-gray-600 hover:text-gray-900\"\n          >\n            <FiArrowLeft className=\"mr-2\" size={20} />\n            Back to Vendors\n          </button>\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900\">{vendor.name} - Performance</h1>\n            <p className=\"text-gray-600\">Performance tracking and ratings</p>\n          </div>\n        </div>\n        \n        <button\n          onClick={() => setShowAddRating(true)}\n          className=\"inline-flex items-center px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors\"\n        >\n          <FiPlus className=\"mr-2\" size={16} />\n          Add Rating\n        </button>\n      </div>\n\n      {/* Key Performance Metrics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-6\">\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Overall Rating</p>\n              <div className=\"text-2xl font-bold text-gray-900 mt-1\">\n                {performanceData.overallRating?.toFixed(1) || '0.0'}\n              </div>\n              {renderStars(performanceData.overallRating || 0, 20)}\n            </div>\n            <div className=\"p-3 bg-yellow-100 rounded-full\">\n              <FiStar className=\"text-yellow-600\" size={24} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Completion Rate</p>\n              <div className={`text-2xl font-bold mt-1 ${getPerformanceColor(performanceData.completionRate)}`}>\n                {performanceData.completionRate?.toFixed(1) || '0.0'}%\n              </div>\n              <p className=\"text-xs text-gray-500 mt-1\">\n                {performanceData.completedPOs || 0} of {performanceData.totalPOs || 0} POs\n              </p>\n            </div>\n            <div className=\"p-3 bg-green-100 rounded-full\">\n              <FiCheckCircle className=\"text-green-600\" size={24} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">On-Time Delivery</p>\n              <div className={`text-2xl font-bold mt-1 ${getPerformanceColor(performanceData.onTimeRate)}`}>\n                {performanceData.onTimeRate?.toFixed(1) || '0.0'}%\n              </div>\n              <p className=\"text-xs text-gray-500 mt-1\">\n                {performanceData.onTimePOs || 0} on time deliveries\n              </p>\n            </div>\n            <div className=\"p-3 bg-blue-100 rounded-full\">\n              <FiClock className=\"text-blue-600\" size={24} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Total Spend</p>\n              <div className=\"text-2xl font-bold text-gray-900 mt-1\">\n                ₹{performanceData.totalSpend?.toLocaleString() || '0'}\n              </div>\n              <p className=\"text-xs text-gray-500 mt-1\">\n                Avg: ₹{performanceData.avgOrderValue?.toLocaleString() || '0'}\n              </p>\n            </div>\n            <div className=\"p-3 bg-purple-100 rounded-full\">\n              <FiDollarSign className=\"text-purple-600\" size={24} />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Performance Trends and Activity */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\n        {/* Performance Trend Chart */}\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Performance Trend</h3>\n            <select\n              value={selectedTimeframe}\n              onChange={(e) => setSelectedTimeframe(e.target.value)}\n              className=\"text-sm border border-gray-300 rounded px-2 py-1 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"3months\">Last 3 Months</option>\n              <option value=\"6months\">Last 6 Months</option>\n              <option value=\"1year\">Last Year</option>\n            </select>\n          </div>\n          \n          {performanceTrend.length > 0 ? (\n            <div className=\"space-y-4\">\n              {performanceTrend.map((data, index) => (\n                <div key={data.month} className=\"flex items-center justify-between p-3 bg-gray-50 rounded\">\n                  <div>\n                    <p className=\"font-medium text-gray-900\">\n                      {new Date(data.month + '-01').toLocaleDateString('en-US', { month: 'short', year: 'numeric' })}\n                    </p>\n                    <p className=\"text-sm text-gray-500\">{data.orders} orders</p>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"font-medium text-green-600\">₹{data.spend.toLocaleString()}</p>\n                    <p className=\"text-sm text-gray-500\">{data.completionRate.toFixed(1)}% completion</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-8 text-gray-500\">\n              <FiBarChart2 size={32} className=\"mx-auto mb-2 text-gray-400\" />\n              <p>No trend data available</p>\n            </div>\n          )}\n        </div>\n\n        {/* Recent Activity */}\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Recent Activity</h3>\n          \n          {recentActivity.length > 0 ? (\n            <div className=\"space-y-3\">\n              {recentActivity.map((activity, index) => (\n                <div key={index} className=\"flex items-center justify-between p-3 border border-gray-200 rounded\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className={`p-2 rounded-full ${activity.type === 'PO' ? 'bg-blue-100' : 'bg-green-100'}`}>\n                      {activity.type === 'PO' ? \n                        <FiFileText className={activity.type === 'PO' ? 'text-blue-600' : 'text-green-600'} size={16} /> :\n                        <FiTarget className=\"text-green-600\" size={16} />\n                      }\n                    </div>\n                    <div>\n                      <p className=\"font-medium text-gray-900\">{activity.title}</p>\n                      <p className=\"text-sm text-gray-500\">\n                        {activity.date?.toLocaleDateString() || 'N/A'}\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"text-right\">\n                    <span className={`px-2 py-1 text-xs rounded-full ${\n                      activity.status === 'completed' ? 'bg-green-100 text-green-800' :\n                      activity.status === 'pending' ? 'bg-yellow-100 text-yellow-800' :\n                      'bg-gray-100 text-gray-800'\n                    }`}>\n                      {activity.status}\n                    </span>\n                    {activity.amount && (\n                      <p className=\"text-sm text-gray-600 mt-1\">₹{parseFloat(activity.amount).toLocaleString()}</p>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-8 text-gray-500\">\n              <FiActivity size={32} className=\"mx-auto mb-2 text-gray-400\" />\n              <p>No recent activity</p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Category Performance */}\n      <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n        <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Performance by Category</h2>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {performanceCategories.map(category => {\n            const IconComponent = category.icon;\n            const rating = performanceData.categoryAverages?.[category.key] || 0;\n            \n            return (\n              <div key={category.key} className=\"border border-gray-200 rounded-lg p-4\">\n                <div className=\"flex items-center mb-3\">\n                  <IconComponent className=\"text-indigo-600 mr-2\" size={20} />\n                  <h3 className=\"font-medium text-gray-900\">{category.label}</h3>\n                </div>\n                \n                <div className=\"flex items-center justify-between\">\n                  {renderStars(rating)}\n                  <span className=\"text-lg font-semibold text-gray-900\">\n                    {rating.toFixed(1)}\n                  </span>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Recent Ratings */}\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n        <div className=\"p-6 border-b border-gray-200\">\n          <h2 className=\"text-lg font-semibold text-gray-900\">Recent Ratings & Reviews</h2>\n        </div>\n        \n        <div className=\"divide-y divide-gray-200\">\n          {ratings.length === 0 ? (\n            <div className=\"text-center py-8\">\n              <FiStar className=\"mx-auto h-12 w-12 text-gray-400\" />\n              <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No ratings yet</h3>\n              <p className=\"mt-1 text-sm text-gray-500\">Be the first to rate this vendor's performance.</p>\n            </div>\n          ) : (\n            ratings.map((rating) => (\n              <div key={rating.id} className=\"p-6\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center mb-2\">\n                      <span className=\"font-medium text-gray-900 mr-3\">\n                        {performanceCategories.find(cat => cat.key === rating.category)?.label || rating.category}\n                      </span>\n                      {renderStars(rating.rating)}\n                      <span className=\"ml-2 text-sm text-gray-500\">({rating.rating}/5)</span>\n                    </div>\n                    \n                    {rating.comment && (\n                      <p className=\"text-gray-700 mb-2\">{rating.comment}</p>\n                    )}\n                    \n                    <div className=\"flex items-center text-sm text-gray-500\">\n                      <FiUser className=\"mr-1\" size={14} />\n                      <span className=\"mr-4\">Rated by: {rating.ratedBy}</span>\n                      <FiCalendar className=\"mr-1\" size={14} />\n                      <span>{rating.createdAt?.toDate?.()?.toLocaleDateString() || 'N/A'}</span>\n                    </div>\n                  </div>\n                  \n                  <button\n                    onClick={() => setEditingRating(rating)}\n                    className=\"text-indigo-600 hover:text-indigo-800\"\n                  >\n                    <FiEdit2 size={16} />\n                  </button>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n\n      {/* Add Rating Modal */}\n      {showAddRating && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Add Performance Rating</h3>\n              <button\n                onClick={() => setShowAddRating(false)}\n                className=\"text-gray-400 hover:text-gray-600\"\n              >\n                <FiX size={20} />\n              </button>\n            </div>\n            \n            <form onSubmit={handleAddRating} className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Category *\n                </label>\n                <select\n                  value={newRating.category}\n                  onChange={(e) => setNewRating(prev => ({ ...prev, category: e.target.value }))}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                  required\n                >\n                  <option value=\"\">Select a category</option>\n                  {performanceCategories.map(category => (\n                    <option key={category.key} value={category.key}>\n                      {category.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Rating *\n                </label>\n                <div className=\"flex items-center space-x-2\">\n                  {[1, 2, 3, 4, 5].map(star => (\n                    <button\n                      key={star}\n                      type=\"button\"\n                      onClick={() => setNewRating(prev => ({ ...prev, rating: star }))}\n                      className=\"focus:outline-none\"\n                    >\n                      <FiStar\n                        size={24}\n                        className={star <= newRating.rating ? 'text-yellow-400 fill-current' : 'text-gray-300'}\n                      />\n                    </button>\n                  ))}\n                  <span className=\"ml-2 text-sm text-gray-600\">({newRating.rating}/5)</span>\n                </div>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Comment\n                </label>\n                <textarea\n                  value={newRating.comment}\n                  onChange={(e) => setNewRating(prev => ({ ...prev, comment: e.target.value }))}\n                  rows={3}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                  placeholder=\"Optional feedback about the vendor's performance\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Rated By *\n                </label>\n                <input\n                  type=\"text\"\n                  value={newRating.ratedBy}\n                  onChange={(e) => setNewRating(prev => ({ ...prev, ratedBy: e.target.value }))}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                  placeholder=\"Your name\"\n                  required\n                />\n              </div>\n              \n              <div className=\"flex justify-end space-x-3 pt-4\">\n                <button\n                  type=\"button\"\n                  onClick={() => setShowAddRating(false)}\n                  className=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700\"\n                >\n                  <FiSave className=\"inline mr-2\" size={16} />\n                  Save Rating\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":["VendorPerformance","_performanceData$over","_performanceData$comp","_performanceData$onTi","_performanceData$tota","_performanceData$avgO","id","useParams","navigate","useNavigate","showSuccess","showError","useNotification","vendor","setVendor","useState","loading","setLoading","performanceData","setPerformanceData","ratings","setRatings","performanceTrend","setPerformanceTrend","recentActivity","setRecentActivity","newRating","setNewRating","category","rating","comment","ratedBy","showAddRating","setShowAddRating","editingRating","setEditingRating","selectedTimeframe","setSelectedTimeframe","performanceCategories","key","label","icon","FiCheckCircle","FiClock","FiUser","FiDollarSign","FiTrendingUp","FiBarChart2","useEffect","fetchVendorPerformance","async","vendorDoc","getDoc","doc","db","exists","vendorData","data","ratingsQuery","query","collection","where","ratingsData","getDocs","docs","map","posQuery","pos","jobsQuery","jobs","totalPOs","length","completedPOs","filter","po","status","pendingPOs","cancelledPOs","onTimePOs","deliveryDate","completedAt","toDate","totalSpend","reduce","sum","parseFloat","totalAmount","avgOrderValue","monthlyData","forEach","createdAt","month","toISOString","slice","orders","spend","completed","trendData","Object","entries","sort","_ref","_ref2","a","b","localeCompare","_ref3","completionRate","activity","_po$createdAt","type","title","poNumber","date","amount","job","_job$createdAt","budget","categoryAverages","categoryRatings","avgRating","overallRating","values","onTimeRate","totalJobs","completedJobs","pendingJobs","avgJobValue","error","console","renderStars","size","arguments","undefined","stars","i","push","_jsx","FiStar","className","children","getPerformanceColor","value","threshold","_jsxs","onClick","FiArrowLeft","name","FiPlus","toFixed","toLocaleString","onChange","e","target","index","Date","toLocaleDateString","year","_activity$date","FiFileText","FiTarget","FiActivity","_performanceData$cate","IconComponent","_performanceCategorie","_rating$createdAt","_rating$createdAt$toD","_rating$createdAt$toD2","find","cat","FiCalendar","call","FiEdit2","FiX","onSubmit","preventDefault","trim","addDoc","vendorId","updatedRatings","updateDoc","updatedAt","prev","required","star","rows","placeholder","FiSave"],"sourceRoot":""}