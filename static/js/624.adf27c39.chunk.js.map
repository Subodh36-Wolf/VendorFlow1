{"version":3,"file":"static/js/624.adf27c39.chunk.js","mappings":"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","sources":["components/Admin/Sidebar.jsx","components/Admin/AdminApp.jsx","components/Admin/NotificationSystem.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { getAuth, signOut } from 'firebase/auth';\nimport {\n  FiGrid, FiUsers, FiPlus, FiClipboard, FiFileText,\n  FiBarChart2, FiUser, FiLogOut, FiMenu, FiX, FiChevronDown,\n  FiChevronRight, FiSettings, FiDollarSign, FiCalendar,\n  FiTrendingUp, FiCheckCircle, FiMail, FiShield, FiUserPlus,\n  FiHome, FiSearch, FiBell\n} from 'react-icons/fi';\n\nexport default function Sidebar({ collapsed, onToggle, mobileMenuOpen, onMobileToggle }) {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [expandedSections, setExpandedSections] = useState({\n    vendors: location.pathname.startsWith('/admin/vendors') || \n             location.pathname.startsWith('/admin/add-vendor') || \n             location.pathname.startsWith('/admin/vendor-performance'),\n    operations: location.pathname.startsWith('/admin/purchase-orders') || \n               location.pathname.startsWith('/admin/create-po') || \n               location.pathname.startsWith('/admin/delivery-challans') || \n               location.pathname.startsWith('/admin/create-challan') || \n               location.pathname.startsWith('/admin/items'),\n    management: location.pathname.startsWith('/admin/status-manager') || \n               location.pathname.startsWith('/admin/daily-todos') || \n               location.pathname.startsWith('/admin/reports'),\n    reports: location.pathname.startsWith('/admin/analytics') || \n            location.pathname.startsWith('/admin/customers')\n  });\n\n  // Auto-close mobile menu when route changes\n  useEffect(() => {\n    if (mobileMenuOpen) {\n      onMobileToggle();\n    }\n  }, [location.pathname]);\n\n  // Close on Escape key when mobile menu is open\n  useEffect(() => {\n    if (!mobileMenuOpen) return;\n    \n    const handleEscape = (e) => {\n      if (e.key === 'Escape') {\n        onMobileToggle();\n      }\n    };\n    \n    document.addEventListener('keydown', handleEscape);\n    return () => document.removeEventListener('keydown', handleEscape);\n  }, [mobileMenuOpen, onMobileToggle]);\n\n  // Prevent body scrolling when mobile menu is open\n  useEffect(() => {\n    if (mobileMenuOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'auto';\n    }\n    \n    return () => {\n      document.body.style.overflow = 'auto';\n    };\n  }, [mobileMenuOpen]);\n\n  const handleLogout = async () => {\n    try {\n      const auth = getAuth();\n      await signOut(auth);\n      navigate('/admin/login');\n    } catch (error) {\n      console.error('Error signing out:', error);\n    }\n  };\n\n  const toggleSection = (section) => {\n    setExpandedSections(prev => ({\n      ...prev,\n      [section]: !prev[section]\n    }));\n  };\n\n  const isActive = (path) => {\n    return location.pathname === path;\n  };\n\n  const isParentActive = (paths) => {\n    return paths.some(path => location.pathname.startsWith(path));\n  };\n\n  // Handle overlay click to close mobile menu\n  const handleOverlayClick = () => {\n    onMobileToggle();\n  };\n\n  return (\n    <>\n      {/* Mobile overlay */}\n      {mobileMenuOpen && (\n        <div \n          className=\"fixed inset-0 bg-black bg-opacity-50 z-40 lg:hidden\"\n          onClick={handleOverlayClick}\n          aria-hidden=\"true\"\n        />\n      )}\n      \n      {/* Sidebar */}\n      <aside \n        id=\"admin-sidebar\"\n        className={`fixed inset-y-0 left-0 transform ${\n          mobileMenuOpen ? 'translate-x-0' : '-translate-x-full'\n        } lg:relative lg:translate-x-0 transition-transform duration-300 ease-in-out z-50 \n        ${collapsed ? 'w-16' : 'w-64'} bg-gray-900 text-white shadow-xl flex flex-col`}\n        aria-label=\"Sidebar\"\n      >\n        {/* Header */}\n        <div className=\"p-4 border-b border-gray-700 flex-shrink-0\">\n          <div className=\"flex items-center justify-between\">\n            {!collapsed ? (\n              <div className=\"flex items-center\">\n                <div className=\"w-8 h-8 rounded-md bg-indigo-600 flex items-center justify-center mr-2\">\n                  <FiHome size={16} />\n                </div>\n                <h2 className=\"text-xl font-bold text-white\">VendorFlow</h2>\n              </div>\n            ) : (\n              <div className=\"w-8 h-8 rounded-md bg-indigo-600 flex items-center justify-center mx-auto\">\n                <FiHome size={16} />\n              </div>\n            )}\n            \n            {/* Desktop toggle button */}\n            <button \n              onClick={onToggle}\n              className=\"p-1.5 rounded-lg hover:bg-gray-700 hidden lg:block transition-colors\"\n              aria-label={collapsed ? \"Expand sidebar\" : \"Collapse sidebar\"}\n            >\n              {collapsed ? <FiMenu size={18} /> : <FiX size={18} />}\n            </button>\n            \n            {/* Mobile close button */}\n            <button \n              onClick={onMobileToggle}\n              className=\"p-1.5 rounded-lg hover:bg-gray-700 lg:hidden transition-colors\"\n              aria-label=\"Close menu\"\n            >\n              <FiX size={18} />\n            </button>\n          </div>\n        </div>\n        \n        {/* Search bar (visible when not collapsed) */}\n        {!collapsed && (\n          <div className=\"px-3 py-3 border-b border-gray-700 flex-shrink-0\">\n            <div className=\"relative\">\n              <FiSearch className=\"absolute left-3 top-3 text-gray-400\" size={16} />\n              <input \n                type=\"text\" \n                placeholder=\"Search...\" \n                className=\"w-full bg-gray-800 text-white pl-9 pr-3 py-2 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n              />\n            </div>\n          </div>\n        )}\n        \n        {/* Navigation */}\n        <nav className=\"flex-1 overflow-y-auto py-4\" role=\"navigation\" aria-label=\"Main navigation\">\n          <div className=\"px-2\">\n            <SidebarItem \n              to=\"/admin/dashboard\" \n              icon={<FiGrid size={20} />}\n              text=\"Dashboard\" \n              active={isActive('/admin/dashboard')}\n              collapsed={collapsed}\n            />\n          </div>\n          \n          {/* Vendor Management Section */}\n          <SidebarSection\n            title=\"Vendor Management\"\n            icon={<FiUsers size={18} />}\n            collapsed={collapsed}\n            expanded={expandedSections.vendors}\n            onToggle={() => toggleSection('vendors')}\n            active={isParentActive(['/admin/vendors', '/admin/add-vendor', '/admin/vendor-performance'])}\n          >\n            <SidebarItem \n              to=\"/admin/vendors\" \n              icon={<FiUsers size={18} />}\n              text=\"All Vendors\" \n              active={isActive('/admin/vendors')}\n              collapsed={collapsed}\n              isChild\n            />\n            <SidebarItem \n              to=\"/admin/add-vendor\" \n              icon={<FiPlus size={18} />}\n              text=\"Add Vendor\" \n              active={isActive('/admin/add-vendor')}\n              collapsed={collapsed}\n              isChild\n            />\n            <SidebarItem \n              to=\"/admin/vendor-performance\" \n              icon={<FiTrendingUp size={18} />}\n              text=\"Performance\" \n              active={isActive('/admin/vendor-performance')}\n              collapsed={collapsed}\n              isChild\n            />\n          </SidebarSection>\n          \n          {/* Operations Management Section */}\n          <SidebarSection\n            title=\"Operations Management\"\n            icon={<FiClipboard size={18} />}\n            collapsed={collapsed}\n            expanded={expandedSections.operations}\n            onToggle={() => toggleSection('operations')}\n            active={isParentActive(['/admin/purchase-orders', '/admin/create-po', '/admin/delivery-challans', '/admin/create-challan', '/admin/items'])}\n          >\n            <SidebarItem \n              to=\"/admin/purchase-orders\" \n              icon={<FiFileText size={18} />}\n              text=\"All POs\" \n              active={isActive('/admin/purchase-orders')}\n              collapsed={collapsed}\n              isChild\n            />\n            <SidebarItem \n              to=\"/admin/create-po\" \n              icon={<FiDollarSign size={18} />}\n              text=\"Create PO\" \n              active={isActive('/admin/create-po')}\n              collapsed={collapsed}\n              isChild\n            />\n            <SidebarItem \n              to=\"/admin/delivery-challans\" \n              icon={<FiClipboard size={18} />}\n              text=\"Delivery Challans\" \n              active={isActive('/admin/delivery-challans')}\n              collapsed={collapsed}\n              isChild\n            />\n            <SidebarItem \n              to=\"/admin/create-challan\" \n              icon={<FiPlus size={18} />}\n              text=\"Create Challan\" \n              active={isActive('/admin/create-challan')}\n              collapsed={collapsed}\n              isChild\n            />\n            <SidebarItem \n              to=\"/admin/items\" \n              icon={<FiClipboard size={18} />}\n              text=\"Items\" \n              active={isActive('/admin/items')}\n              collapsed={collapsed}\n              isChild\n            />\n          </SidebarSection>\n          \n          {/* Management Tools Section */}\n          <SidebarSection\n            title=\"Management Tools\"\n            icon={<FiSettings size={18} />}\n            collapsed={collapsed}\n            expanded={expandedSections.management}\n            onToggle={() => toggleSection('management')}\n            active={isParentActive(['/admin/status-manager', '/admin/daily-todos', '/admin/reports'])}\n          >\n            <SidebarItem \n              to=\"/admin/status-manager\" \n              icon={<FiCheckCircle size={18} />}\n              text=\"Status Manager\" \n              active={isActive('/admin/status-manager')}\n              collapsed={collapsed}\n              isChild\n            />\n            <SidebarItem \n              to=\"/admin/daily-todos\" \n              icon={<FiCalendar size={18} />}\n              text=\"Daily Todos\" \n              active={isActive('/admin/daily-todos')}\n              collapsed={collapsed}\n              isChild\n            />\n            <SidebarItem \n              to=\"/admin/reports\" \n              icon={<FiBarChart2 size={18} />}\n              text=\"Reports\" \n              active={isActive('/admin/reports')}\n              collapsed={collapsed}\n              isChild\n            />\n          </SidebarSection>\n          \n          {/* Reports & Analytics Section */}\n          <SidebarSection\n            title=\"Reports & Analytics\"\n            icon={<FiBarChart2 size={18} />}\n            collapsed={collapsed}\n            expanded={expandedSections.reports}\n            onToggle={() => toggleSection('reports')}\n            active={isParentActive(['/admin/analytics', '/admin/customers'])}\n          >\n            <SidebarItem \n              to=\"/admin/analytics\" \n              icon={<FiTrendingUp size={18} />}\n              text=\"Analytics\" \n              active={isActive('/admin/analytics')}\n              collapsed={collapsed}\n              isChild\n            />\n            <SidebarItem \n              to=\"/admin/customers\" \n              icon={<FiUser size={18} />}\n              text=\"Customers\" \n              active={isActive('/admin/customers')}\n              collapsed={collapsed}\n              isChild\n            />\n          </SidebarSection>\n          \n          {/* Quick Actions (when collapsed) */}\n          {collapsed && (\n            <div className=\"mt-4 pt-4 border-t border-gray-700\">\n              <div className=\"px-2 space-y-1\">\n                <SidebarItem \n                  to=\"/admin/add-vendor\" \n                  icon={<FiPlus size={20} />}\n                  text=\"Add Vendor\" \n                  active={isActive('/admin/add-vendor')}\n                  collapsed={collapsed}\n                  tooltip=\"Add Vendor\"\n                />\n                <SidebarItem \n                  to=\"/admin/create-po\" \n                  icon={<FiFileText size={20} />}\n                  text=\"Create PO\" \n                  active={isActive('/admin/create-po')}\n                  collapsed={collapsed}\n                  tooltip=\"Create PO\"\n                />\n                <SidebarItem \n                  to=\"/admin/daily-todos\" \n                  icon={<FiCalendar size={20} />}\n                  text=\"Daily Todos\" \n                  active={isActive('/admin/daily-todos')}\n                  collapsed={collapsed}\n                  tooltip=\"Daily Todos\"\n                />\n              </div>\n            </div>\n          )}\n        </nav>\n        \n        {/* User section and Logout */}\n        <div className=\"border-t border-gray-700 bg-gray-800 flex-shrink-0\">\n          {!collapsed && (\n            <div className=\"p-3 border-b border-gray-700\">\n              <div className=\"flex items-center\">\n                <div className=\"w-8 h-8 rounded-full bg-indigo-600 flex items-center justify-center text-white text-sm font-medium mr-3\">\n                  A\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                  <p className=\"text-sm font-medium truncate\">Admin User</p>\n                  <p className=\"text-xs text-gray-400 truncate\">admin@example.com</p>\n                </div>\n                <button className=\"p-1.5 rounded-lg hover:bg-gray-700 transition-colors\">\n                  <FiBell size={16} className=\"text-gray-400\" />\n                </button>\n              </div>\n            </div>\n          )}\n          \n          <button\n            onClick={handleLogout}\n            className={`flex items-center p-3 transition-colors w-full hover:bg-gray-700 ${collapsed ? 'justify-center' : ''}`}\n            title={collapsed ? \"Logout\" : undefined}\n          >\n            <FiLogOut size={20} className={collapsed ? '' : 'mr-3'} />\n            {!collapsed && <span className=\"font-medium\">Logout</span>}\n          </button>\n        </div>\n      </aside>\n\n      {/* Mobile menu toggle button (only visible on mobile) */}\n      {!mobileMenuOpen && (\n        <button\n          onClick={onMobileToggle}\n          className=\"fixed bottom-4 left-4 z-40 p-3 bg-indigo-600 text-white rounded-full shadow-lg lg:hidden\"\n          aria-label=\"Open menu\"\n        >\n          <FiMenu size={24} />\n        </button>\n      )}\n    </>\n  );\n}\n\n// Sidebar Section Component\nfunction SidebarSection({ title, icon, children, collapsed, expanded, onToggle, active }) {\n  if (collapsed) {\n    return null;\n  }\n\n  return (\n    <div className=\"mt-1 px-2\">\n      <button\n        onClick={onToggle}\n        className={`flex items-center justify-between w-full px-3 py-2.5 rounded-md text-sm font-medium transition-all\n          ${active ? 'text-white bg-indigo-700' : 'text-gray-300 hover:text-white hover:bg-gray-800'}`}\n        aria-expanded={expanded}\n        aria-controls={`section-${title.toLowerCase().replace(/\\s+/g, '-')}`}\n      >\n        <div className=\"flex items-center\">\n          <span className=\"text-gray-400 mr-2\">{icon}</span>\n          <span>{title}</span>\n        </div>\n        {expanded ? <FiChevronDown size={16} /> : <FiChevronRight size={16} />}\n      </button>\n      \n      {expanded && (\n        <div \n          id={`section-${title.toLowerCase().replace(/\\s+/g, '-')}`} \n          className=\"mt-1 ml-4 space-y-1 border-l border-gray-700 pl-2 py-1\"\n        >\n          {children}\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Sidebar Item Component\nfunction SidebarItem({ to, icon, text, active, collapsed, isChild = false, tooltip }) {\n  const baseClasses = `flex items-center transition-all relative group rounded-md\n    ${isChild ? 'py-2 px-3 text-sm' : 'p-3 text-medium'}\n    ${active \n      ? 'bg-indigo-600 text-white shadow' \n      : 'text-gray-300 hover:bg-gray-800 hover:text-white'\n    }`;\n\n  return (\n    <Link\n      to={to}\n      className={baseClasses}\n      title={collapsed ? tooltip || text : undefined}\n      aria-current={active ? 'page' : undefined}\n    >\n      <span className={`flex-shrink-0 ${collapsed ? 'mx-auto' : isChild ? 'mr-3' : 'mr-3'}`}>\n        {icon}\n      </span>\n      {!collapsed && (\n        <span className=\"truncate\">\n          {text}\n        </span>\n      )}\n      \n      {/* Tooltip for collapsed state */}\n      {collapsed && (tooltip || text) && (\n        <div className=\"absolute left-full ml-2 px-2 py-1.5 bg-gray-900 text-white text-xs rounded-md opacity-0 group-hover:opacity-100 transition-opacity shadow-lg whitespace-nowrap z-50 pointer-events-none\">\n          {tooltip || text}\n        </div>\n      )}\n    </Link>\n  );\n}","import { useState, useEffect, useMemo, useCallback, lazy, Suspense } from 'react';\nimport {\n  collection, getDocs, doc, deleteDoc, addDoc,\n  setDoc, getDoc, updateDoc, query, orderBy, arrayUnion, where, limit\n} from 'firebase/firestore';\nimport { db } from '../../firebase';\nimport {\n  Routes,\n  Route,\n  Link,\n  useNavigate,\n  useParams\n} from 'react-router-dom';\nimport { storage } from '../../firebase';\nimport {\n  ref,\n  listAll,\n  getDownloadURL,\n  getMetadata,\n} from 'firebase/storage';\nimport { NotificationProvider, useNotification } from './NotificationSystem';\n\nimport { getAuth, signOut } from 'firebase/auth';\nimport {\n  FiGrid, FiUsers, FiPlus, FiHome, FiClipboard, FiFileText,\n  FiBarChart2, FiUser, FiLogOut, FiMenu, FiX, FiEdit2, FiTrash2,\n  FiDollarSign, FiTag, FiArrowLeft, FiCheckSquare, FiType, FiList,\n  FiRadio, FiCalendar, FiUpload, FiChevronDown, FiSave, FiSearch,\n  FiFilter, FiEye, FiDownload, FiRefreshCw, FiInfo, FiAlertCircle,\n  FiCheckCircle, FiXCircle, FiPieChart, FiCreditCard, FiFile,\n  FiPhone, FiBarChart, FiTrendingUp, FiClock, FiBell, FiSettings,\n  FiMail, FiMapPin, FiGlobe\n} from 'react-icons/fi';\nimport Sidebar from './Sidebar';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\n  BarChart, Bar, PieChart, Pie, Cell, AreaChart, Area\n} from 'recharts';\nconst JobAssignmentForm = lazy(() => import('./JobAssignmentForm'));\nconst JobAssignmentList = lazy(() => import('./JobAssignmentList'));\nconst VendorList = lazy(() => import('./VendorList'));\nconst VendorForm = lazy(() => import('./VendorForm'));\nconst VendorBulkOperations = lazy(() => import('./VendorBulkOperations'));\nconst VendorPerformance = lazy(() => import('./VendorPerformance'));\nconst VendorPerformanceOverview = lazy(() => import('./VendorPerformanceOverview'));\nconst VendorTodoList = lazy(() => import('./VendorTodoList'));\nconst POList = lazy(() => import('./POList'));\nconst POForm = lazy(() => import('./POForm'));\nconst VendorPreview = lazy(() => import('./VendorPreview'));\nconst PODetails = lazy(() => import('./PODetails'));\nconst StatusManager = lazy(() => import('./StatusManager'));\nconst DailyTodoList = lazy(() => import('./DailyTodoList'));\nconst ReportGenerator = lazy(() => import('./ReportGenerator'));\nconst DeliveryChallanList = lazy(() => import('./DeliveryChallanList'));\nconst DeliveryChallanForm = lazy(() => import('./DeliveryChallanForm'));\nconst DeliveryChallanDetails = lazy(() => import('./DeliveryChallanDetails'));\nconst ItemList = lazy(() => import('./ItemList'));\nconst ItemForm = lazy(() => import('./ItemForm'));\n\n// Main Vendor Management App Component with Notification System\nexport default function AdminApp() {\n  return (\n    <NotificationProvider>\n      <Suspense fallback={<div className=\"p-6\">Loading...</div>}>\n      <Routes>\n        <Route path=\"items\" element={\n          <AdminLayout title=\"Items\" activeNav=\"purchase-orders\">\n            <ItemList />\n          </AdminLayout>\n        } />\n        <Route path=\"items/new\" element={\n          <AdminLayout title=\"Add Item\" activeNav=\"purchase-orders\">\n            <ItemForm />\n          </AdminLayout>\n        } />\n        <Route path=\"items/:id/edit\" element={\n          <AdminLayout title=\"Edit Item\" activeNav=\"purchase-orders\">\n            <ItemForm />\n          </AdminLayout>\n        } />\n        <Route path=\"vendors\" element={\n          <AdminLayout title=\"Vendors\" activeNav=\"vendors\">\n            <VendorList />\n          </AdminLayout>\n        } />\n        <Route path=\"add-vendor\" element={\n          <AdminLayout title=\"Add Vendor\" activeNav=\"vendors\">\n            <VendorForm />\n          </AdminLayout>\n        } />\n        <Route path=\"edit-vendor/:id\" element={\n          <AdminLayout title=\"Edit Vendor\" activeNav=\"vendors\">\n            <VendorForm />\n          </AdminLayout>\n        } />\n        <Route path=\"vendor-bulk-operations\" element={\n          <AdminLayout title=\"Bulk Operations\" activeNav=\"vendor-bulk-operations\">\n            <VendorBulkOperations />\n          </AdminLayout>\n        } />\n        <Route path=\"job-assignments\" element={\n          <AdminLayout title=\"Job Assignments\" activeNav=\"job-assignments\">\n            <JobAssignmentList />\n          </AdminLayout>\n        } />\n        <Route path=\"assign-job\" element={\n          <AdminLayout title=\"Assign Job\" activeNav=\"job-assignments\">\n            <JobAssignmentForm />\n          </AdminLayout>\n        } />\n        <Route path=\"purchase-orders\" element={\n          <AdminLayout title=\"Purchase Orders\" activeNav=\"purchase-orders\">\n            <POList />\n          </AdminLayout>\n        } />\n        <Route path=\"create-po\" element={\n          <AdminLayout title=\"Create Purchase Order\" activeNav=\"purchase-orders\">\n            <POForm />\n          </AdminLayout>\n        } />\n        <Route path=\"edit-po/:id\" element={\n          <AdminLayout title=\"Edit Purchase Order\" activeNav=\"purchase-orders\">\n            <POForm />\n          </AdminLayout>\n        } />\n        <Route path=\"vendor-preview/:id\" element={\n          <AdminLayout title=\"Vendor Details\" activeNav=\"vendors\">\n            <VendorPreview />\n          </AdminLayout>\n        } />\n        <Route path=\"po-details/:id\" element={\n          <AdminLayout title=\"PO Details\" activeNav=\"purchase-orders\">\n            <PODetails />\n          </AdminLayout>\n        } />\n        <Route path=\"status-manager\" element={\n          <AdminLayout title=\"Status Manager\" activeNav=\"status-manager\">\n            <StatusManager />\n          </AdminLayout>\n        } />\n        <Route path=\"daily-todos\" element={\n          <AdminLayout title=\"Daily Todos\" activeNav=\"daily-todos\">\n            <DailyTodoList />\n          </AdminLayout>\n        } />\n        <Route path=\"reports\" element={\n          <AdminLayout title=\"Reports\" activeNav=\"reports\">\n            <ReportGenerator />\n          </AdminLayout>\n        } />\n        <Route path=\"dashboard\" element={<Dashboard />} />\n        <Route path=\"contracts\" element={<ContractManagement />} />\n        <Route path=\"vendor-bulk-operations\" element={<VendorBulkOperations />} />\n        <Route path=\"vendor-performance\" element={\n          <AdminLayout title=\"Vendor Performance\" activeNav=\"vendors\">\n            <VendorPerformanceOverview />\n          </AdminLayout>\n        } />\n        <Route path=\"vendor-performance/:id\" element={\n          <AdminLayout title=\"Vendor Performance\" activeNav=\"vendors\">\n            <VendorPerformance />\n          </AdminLayout>\n        } />\n        <Route path=\"vendor-todo\" element={<VendorTodoList />} />\n        <Route path=\"analytics\" element={<Analytics />} />\n        <Route path=\"delivery-challans\" element={\n          <AdminLayout title=\"Delivery Challans\" activeNav=\"purchase-orders\">\n            <DeliveryChallanList />\n          </AdminLayout>\n        } />\n        <Route path=\"create-challan\" element={\n          <AdminLayout title=\"Create Delivery Challan\" activeNav=\"purchase-orders\">\n            <DeliveryChallanForm />\n          </AdminLayout>\n        } />\n        <Route path=\"edit-challan/:id\" element={\n          <AdminLayout title=\"Edit Delivery Challan\" activeNav=\"purchase-orders\">\n            <DeliveryChallanForm />\n          </AdminLayout>\n        } />\n        <Route path=\"challan-details/:id\" element={\n          <AdminLayout title=\"Challan Details\" activeNav=\"purchase-orders\">\n            <DeliveryChallanDetails />\n          </AdminLayout>\n        } />\n        <Route path=\"*\" element={<Dashboard />} />\n      </Routes>\n      </Suspense>\n    </NotificationProvider>\n  );\n}\n\n// Enhanced Dashboard Component with Professional Features\nfunction Dashboard() {\n  const { showSuccess, showError, showInfo } = useNotification();\n  const [stats, setStats] = useState({\n    totalVendors: 0,\n    activeVendors: 0,\n    pendingVendors: 0,\n    totalContracts: 0,\n    activeContracts: 0,\n    totalSpend: 0\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [recentVendors, setRecentVendors] = useState([]);\n  const [refreshing, setRefreshing] = useState(false);\n  const [lastUpdated, setLastUpdated] = useState(null);\n\n  const fetchStats = async (isRefresh = false) => {\n    try {\n      if (isRefresh) {\n        setRefreshing(true);\n      } else {\n        setLoading(true);\n      }\n      setError(null);\n\n      // Parallel data fetching for vendor management\n      const [vendorsSnapshot, contractsSnapshot] = await Promise.all([\n        getDocs(collection(db, 'vendors')),\n        getDocs(query(collection(db, 'contracts'), orderBy('createdAt', 'desc')))\n      ]);\n\n      const vendorsData = [];\n      let activeVendorCount = 0;\n      let pendingVendorCount = 0;\n      let totalSpend = 0;\n      let activeContractCount = 0;\n      const vendorDistribution = {};\n      const monthlySpend = {};\n\n      vendorsSnapshot.forEach((doc) => {\n        const vendor = { id: doc.id, ...doc.data() };\n        vendorsData.push(vendor);\n\n        if (vendor.status === 'active') activeVendorCount++;\n        if (vendor.status === 'pending') pendingVendorCount++;\n\n        // Vendor category distribution\n        const category = vendor.category || 'Unknown';\n        vendorDistribution[category] = (vendorDistribution[category] || 0) + 1;\n      });\n\n      contractsSnapshot.forEach((doc) => {\n        const contract = { id: doc.id, ...doc.data() };\n\n        if (contract.status === 'active') activeContractCount++;\n\n        if (contract.value && !isNaN(parseFloat(contract.value))) {\n          totalSpend += parseFloat(contract.value);\n        }\n\n        // Monthly spend data\n        if (contract.createdAt) {\n          const date = contract.createdAt.toDate ? contract.createdAt.toDate() : new Date(contract.createdAt);\n          const monthKey = date.toLocaleDateString('en-US', { year: 'numeric', month: 'short' });\n          const value = parseFloat(contract.value) || 0;\n          monthlySpend[monthKey] = (monthlySpend[monthKey] || 0) + value;\n        }\n      });\n\n      // Get recent vendors (last 5) with proper date handling\n      const sortedVendors = vendorsData\n        .filter(vendor => vendor.createdAt)\n        .sort((a, b) => {\n          const dateA = a.createdAt?.toDate ? a.createdAt.toDate() : new Date(a.createdAt);\n          const dateB = b.createdAt?.toDate ? b.createdAt.toDate() : new Date(b.createdAt);\n          return dateB - dateA;\n        })\n        .slice(0, 5);\n\n      setRecentVendors(sortedVendors);\n      setStats({\n        totalVendors: vendorsSnapshot.size,\n        activeVendors: activeVendorCount,\n        pendingVendors: pendingVendorCount,\n        totalContracts: contractsSnapshot.size,\n        activeContracts: activeContractCount,\n        totalSpend: totalSpend,\n        vendorDistribution,\n        monthlySpend\n      });\n      setLastUpdated(new Date());\n      if (isRefresh) {\n        showSuccess('Dashboard data refreshed successfully');\n      }\n    } catch (error) {\n      console.error(\"Error fetching dashboard stats:\", error);\n      const errorMessage = error.message || 'Failed to load dashboard data';\n      setError(errorMessage);\n      showError(`Dashboard Error: ${errorMessage}`);\n    } finally {\n      setLoading(false);\n      setRefreshing(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchStats();\n\n    // Auto-refresh every 5 minutes\n    const interval = setInterval(() => fetchStats(true), 5 * 60 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const handleRefresh = () => {\n    fetchStats(true);\n  };\n\n  return (\n    <AdminLayout title=\"Dashboard\" activeNav=\"dashboard\">\n      <div className=\"p-6\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-2xl font-bold text-gray-800\">Dashboard Overview</h2>\n          <div className=\"flex items-center space-x-4\">\n            {lastUpdated && (\n              <span className=\"text-sm text-gray-500\">\n                Last updated: {lastUpdated.toLocaleTimeString()}\n              </span>\n            )}\n            <button\n              onClick={handleRefresh}\n              disabled={refreshing}\n              className=\"flex items-center px-3 py-2 bg-indigo-100 text-indigo-700 rounded-lg hover:bg-indigo-200 disabled:opacity-50 transition-colors\"\n            >\n              <FiRefreshCw className={`mr-2 ${refreshing ? 'animate-spin' : ''}`} />\n              {refreshing ? 'Refreshing...' : 'Refresh'}\n            </button>\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\">\n            <div className=\"flex items-center\">\n              <FiAlertCircle className=\"text-red-600 mr-3\" />\n              <div>\n                <h3 className=\"text-sm font-medium text-red-800\">Error loading dashboard data</h3>\n                <p className=\"text-sm text-red-700 mt-1\">{error}</p>\n              </div>\n              <button\n                onClick={handleRefresh}\n                className=\"ml-auto text-red-600 hover:text-red-800\"\n              >\n                <FiRefreshCw className=\"h-5 w-5\" />\n              </button>\n            </div>\n          </div>\n        )}\n\n        {loading ? (\n          <div className=\"flex justify-center items-center h-64\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\n          </div>\n        ) : (\n          <>\n            {/* Stats Cards */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-6 gap-6 mb-8\">\n              <StatCard\n                title=\"Total Vendors\"\n                value={stats.totalVendors}\n                icon={<FiUsers className=\"text-indigo-600\" />}\n                color=\"indigo\"\n                change={\"+3 this week\"}\n              />\n              <StatCard\n                title=\"Active Vendors\"\n                value={stats.activeVendors}\n                icon={<FiCheckCircle className=\"text-green-600\" />}\n                color=\"green\"\n                change={\"+12% from last month\"}\n              />\n              <StatCard\n                title=\"Pending Vendors\"\n                value={stats.pendingVendors}\n                icon={<FiClock className=\"text-yellow-600\" />}\n                color=\"yellow\"\n                change={\"Need review\"}\n              />\n              <StatCard\n                title=\"Total Contracts\"\n                value={stats.totalContracts}\n                icon={<FiFileText className=\"text-blue-600\" />}\n                color=\"blue\"\n                change={\"+5 this month\"}\n              />\n              <StatCard\n                title=\"Active Contracts\"\n                value={stats.activeContracts}\n                icon={<FiFile className=\"text-purple-600\" />}\n                color=\"purple\"\n                change={\"Currently running\"}\n              />\n              <StatCard\n                title=\"Total Spend\"\n                value={`₹${stats.totalSpend.toLocaleString()}`}\n                icon={<FiCreditCard className=\"text-red-600\" />}\n                color=\"red\"\n                change={\"+8% from last month\"}\n              />\n            </div>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8\">\n              {/* Spend Chart */}\n              <div className=\"lg:col-span-2 bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n                <div className=\"flex justify-between items-center mb-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-800\">Monthly Spend Overview</h3>\n                  <select className=\"text-sm border border-gray-300 rounded-md px-3 py-1\">\n                    <option>Last 6 months</option>\n                    <option>Last 12 months</option>\n                    <option>This year</option>\n                  </select>\n                </div>\n                <div className=\"h-64\">\n                  <SpendChart data={stats.monthlySpend} />\n                </div>\n              </div>\n\n              {/* Vendor Distribution */}\n              <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-800 mb-6\">Vendor Categories</h3>\n                <div className=\"h-64\">\n                  <VendorDistributionChart data={stats.vendorDistribution} />\n                </div>\n              </div>\n            </div>\n\n            {/* Recent Activity */}\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h3 className=\"text-lg font-semibold text-gray-800\">Recent Vendors</h3>\n                <Link to=\"/admin/vendors\" className=\"text-sm text-indigo-600 hover:text-indigo-800\">\n                  View all\n                </Link>\n              </div>\n\n              {recentVendors.length > 0 ? (\n                <div className=\"overflow-hidden\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Vendor Name</th>\n                        <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Category</th>\n                        <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                        <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date Added</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {recentVendors.map((vendor) => (\n                        <tr key={vendor.id}>\n                          <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                            {vendor.name || 'Unknown Vendor'}\n                          </td>\n                          <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900\">\n                            {vendor.category || 'N/A'}\n                          </td>\n                          <td className=\"px-4 py-4 whitespace-nowrap\">\n                            <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full \n                              ${vendor.status === 'active' ? 'bg-green-100 text-green-800' :\n                                vendor.status === 'pending' ? 'bg-yellow-100 text-yellow-800' :\n                                  'bg-gray-100 text-gray-800'}`}>\n                              {vendor.status}\n                            </span>\n                          </td>\n                          <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900\">\n                            {vendor.createdAt?.toDate().toLocaleDateString()}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              ) : (\n                <div className=\"text-center py-8 text-gray-500\">\n                  <FiInfo className=\"mx-auto h-12 w-12 mb-4\" />\n                  <p>No recent vendors found</p>\n                </div>\n              )}\n            </div>\n          </>\n        )}\n      </div>\n    </AdminLayout>\n  );\n}\n\n\n\n\nfunction RevenueChart({ data }) {\n  const chartData = Object.entries(data || {})\n    .map(([date, revenue]) => ({\n      date: new Date(date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' }),\n      revenue: revenue\n    }))\n    .slice(-7); // Last 7 days\n\n  if (chartData.length === 0) {\n    return (\n      <div className=\"h-full flex items-center justify-center bg-gray-50 rounded-lg\">\n        <div className=\"text-center text-gray-500\">\n          <FiBarChart2 className=\"mx-auto h-12 w-12 mb-2\" />\n          <p>No revenue data available</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <AreaChart data={chartData}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"date\" />\n        <YAxis />\n        <Tooltip formatter={(value) => [`₹${value}`, 'Revenue']} />\n        <Area type=\"monotone\" dataKey=\"revenue\" stroke=\"#4F46E5\" fill=\"#4F46E5\" fillOpacity={0.1} />\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n}\n\nfunction ServiceDistributionChart({ data }) {\n  const chartData = Object.entries(data || {})\n    .map(([service, count]) => ({\n      name: service.length > 15 ? service.substring(0, 15) + '...' : service,\n      value: count\n    }))\n    .slice(0, 6); // Top 6 services\n\n  const COLORS = ['#4F46E5', '#06B6D4', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6'];\n\n  if (chartData.length === 0) {\n    return (\n      <div className=\"h-full flex items-center justify-center bg-gray-50 rounded-lg\">\n        <div className=\"text-center text-gray-500\">\n          <FiPieChart className=\"mx-auto h-12 w-12 mb-2\" />\n          <p>No service data available</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <PieChart>\n        <Pie\n          data={chartData}\n          cx=\"50%\"\n          cy=\"50%\"\n          labelLine={false}\n          label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n        >\n          {chartData.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n        <Tooltip />\n      </PieChart>\n    </ResponsiveContainer>\n  );\n}\n\n// Analytics Chart Components\nfunction DailyTrendsChart({ data }) {\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"h-full flex items-center justify-center bg-gray-50 rounded-lg\">\n        <div className=\"text-center text-gray-500\">\n          <FiBarChart2 className=\"mx-auto h-12 w-12 mb-2\" />\n          <p>No trend data available</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <LineChart data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"date\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line type=\"monotone\" dataKey=\"requests\" stroke=\"#4F46E5\" strokeWidth={2} />\n        <Line type=\"monotone\" dataKey=\"completed\" stroke=\"#10B981\" strokeWidth={2} />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n\nfunction StatusDistributionChart({ data }) {\n  const chartData = [\n    { name: 'Completed', value: data.completedRequests || 0, color: '#10B981' },\n    { name: 'Pending', value: data.pendingRequests || 0, color: '#F59E0B' },\n    { name: 'In Progress', value: data.inProgressRequests || 0, color: '#06B6D4' }\n  ].filter(item => item.value > 0);\n\n  if (chartData.length === 0) {\n    return (\n      <div className=\"h-full flex items-center justify-center bg-gray-50 rounded-lg\">\n        <div className=\"text-center text-gray-500\">\n          <FiPieChart className=\"mx-auto h-12 w-12 mb-2\" />\n          <p>No status data available</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <PieChart>\n        <Pie\n          data={chartData}\n          cx=\"50%\"\n          cy=\"50%\"\n          labelLine={false}\n          label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n        >\n          {chartData.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={entry.color} />\n          ))}\n        </Pie>\n        <Tooltip />\n      </PieChart>\n    </ResponsiveContainer>\n  );\n}\n\nfunction ServicePerformanceChart({ data }) {\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"h-full flex items-center justify-center bg-gray-50 rounded-lg\">\n        <div className=\"text-center text-gray-500\">\n          <FiBarChart2 className=\"mx-auto h-12 w-12 mb-2\" />\n          <p>No service performance data available</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <BarChart data={data.slice(0, 8)} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" angle={-45} textAnchor=\"end\" height={100} />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"totalRequests\" fill=\"#4F46E5\" name=\"Total Requests\" />\n        <Bar dataKey=\"completedRequests\" fill=\"#10B981\" name=\"Completed\" />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}\n\n// Stat Card Component\nfunction StatCard({ title, value, icon, color, change }) {\n  const colorClasses = {\n    indigo: 'bg-indigo-50 border-indigo-100',\n    blue: 'bg-blue-50 border-blue-100',\n    yellow: 'bg-yellow-50 border-yellow-100',\n    green: 'bg-green-50 border-green-100',\n    purple: 'bg-purple-50 border-purple-100'\n  };\n\n  return (\n    <div className={`rounded-lg border p-6 ${colorClasses[color]}`}>\n      <div className=\"flex items-center justify-between mb-4\">\n        <div className=\"p-3 rounded-full bg-white\">\n          {icon}\n        </div>\n        <span className={`text-xs font-medium ${change.includes('+') ? 'text-green-600' : 'text-gray-600'\n          }`}>\n          {change}\n        </span>\n      </div>\n      <div>\n        <p className=\"text-sm font-medium text-gray-600\">{title}</p>\n        <p className=\"text-2xl font-bold text-gray-800 mt-1\">{value}</p>\n      </div>\n    </div>\n  );\n}\n\n// Enhanced Customers Component with Professional Features\nfunction Customers() {\n  const { showSuccess, showError, showWarning } = useNotification();\n  const [customers, setCustomers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortBy, setSortBy] = useState('name');\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n  const [filterStatus, setFilterStatus] = useState('all');\n\n  const fetchCustomers = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const customersSnapshot = await getDocs(\n        query(collection(db, 'users'), orderBy('createdAt', 'desc'))\n      );\n      const customersData = [];\n\n      customersSnapshot.forEach((doc) => {\n        const customer = { id: doc.id, ...doc.data() };\n        // Enhanced validation for registered users\n        if (customer.email && (customer.firstName || customer.name)) {\n          customersData.push({\n            ...customer,\n            displayName: customer.firstName || customer.name || 'Unknown',\n            joinDate: customer.createdAt?.toDate() || new Date(),\n            isActive: customer.lastLoginAt ?\n              (Date.now() - customer.lastLoginAt.toDate().getTime()) < (30 * 24 * 60 * 60 * 1000) : false\n          });\n        }\n      });\n\n      setCustomers(customersData);\n    } catch (error) {\n      console.error(\"Error fetching customers:\", error);\n      setError(error.message || 'Failed to load customers');\n      showError('Failed to load customers');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchCustomers();\n  }, []);\n\n  // Enhanced filtering and sorting\n  const filteredAndSortedCustomers = useMemo(() => {\n    let filtered = customers.filter(customer => {\n      const matchesSearch = customer.displayName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        customer.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        (customer.phone && customer.phone.includes(searchTerm));\n\n      const matchesFilter = filterStatus === 'all' ||\n        (filterStatus === 'active' && customer.isActive) ||\n        (filterStatus === 'inactive' && !customer.isActive);\n\n      return matchesSearch && matchesFilter;\n    });\n\n    // Sort customers\n    filtered.sort((a, b) => {\n      let aValue = a[sortBy];\n      let bValue = b[sortBy];\n\n      if (sortBy === 'joinDate') {\n        aValue = new Date(aValue);\n        bValue = new Date(bValue);\n      }\n\n      if (typeof aValue === 'string') {\n        aValue = aValue.toLowerCase();\n        bValue = bValue.toLowerCase();\n      }\n\n      if (sortOrder === 'asc') {\n        return aValue > bValue ? 1 : -1;\n      } else {\n        return aValue < bValue ? 1 : -1;\n      }\n    });\n\n    return filtered;\n  }, [customers, searchTerm, sortBy, sortOrder, filterStatus]);\n\n  // Pagination\n  const totalPages = Math.ceil(filteredAndSortedCustomers.length / itemsPerPage);\n  const paginatedCustomers = filteredAndSortedCustomers.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n\n  const handleSort = (field) => {\n    if (sortBy === field) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortBy(field);\n      setSortOrder('asc');\n    }\n  };\n\n  const handleViewDetails = (customer) => {\n    setSelectedCustomer(customer);\n    setShowDetailsModal(true);\n  };\n\n  const handleExportCustomers = () => {\n    const csvContent = \"data:text/csv;charset=utf-8,\" +\n      \"Name,Email,Phone,Join Date,Status\\n\" +\n      filteredAndSortedCustomers.map(customer =>\n        `\"${customer.displayName}\",\"${customer.email}\",\"${customer.phone || ''}\",\"${customer.joinDate.toLocaleDateString()}\",\"${customer.isActive ? 'Active' : 'Inactive'}\"`\n      ).join(\"\\n\");\n\n    const encodedUri = encodeURI(csvContent);\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", `customers_${new Date().toISOString().split('T')[0]}.csv`);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    showSuccess('Customer data exported successfully');\n  };\n\n  return (\n    <AdminLayout title=\"Customers\" activeNav=\"customers\">\n      <div className=\"p-6\">\n        <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">Registered Customers</h2>\n            <p className=\"text-sm text-gray-600\">\n              Total: {customers.length} registered users\n            </p>\n          </div>\n          <div className=\"relative mt-4 sm:mt-0\">\n            <input\n              type=\"text\"\n              placeholder=\"Search customers...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 w-full sm:w-64\"\n            />\n            <FiSearch className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\n          </div>\n        </div>\n\n        {loading ? (\n          <div className=\"flex justify-center items-center h-64\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\n          </div>\n        ) : error ? (\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-8 text-center\">\n            <FiAlertCircle className=\"mx-auto h-12 w-12 text-red-400 mb-4\" />\n            <h3 className=\"text-lg font-medium text-red-900 mb-2\">Error loading customers</h3>\n            <p className=\"text-red-700 mb-4\">{error}</p>\n            <button\n              onClick={fetchCustomers}\n              className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors\"\n            >\n              Try Again\n            </button>\n          </div>\n        ) : paginatedCustomers.length > 0 ? (\n          <div className=\"bg-white rounded-lg shadow border border-gray-200 overflow-hidden\">\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Customer\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Email\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Joined Date\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Actions\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {paginatedCustomers.map((customer) => (\n                    <tr key={customer.id} className=\"hover:bg-gray-50\">\n                      <td className=\"px-6 py-4\">\n                        <div className=\"flex items-center\">\n                          <div className=\"flex-shrink-0 h-10 w-10 bg-indigo-100 rounded-full flex items-center justify-center\">\n                            {customer.profileImage ? (\n                              <img\n                                src={customer.profileImage}\n                                alt={customer.name}\n                                className=\"h-10 w-10 rounded-full\"\n                              />\n                            ) : (\n                              <FiUser className=\"text-indigo-600\" />\n                            )}\n                          </div>\n                          <div className=\"ml-4\">\n                            <div className=\"text-sm font-medium text-gray-900\">{customer.firstName || 'No Name'}</div>\n                            <div className=\"text-sm text-gray-500\">{customer.phone || 'No phone'}</div>\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 text-sm text-gray-900\">\n                        {customer.email}\n                      </td>\n                      <td className=\"px-6 py-4 text-sm text-gray-900\">\n                        {customer.createdAt ? new Date(customer.createdAt.toDate()).toLocaleDateString() : 'N/A'}\n                      </td>\n                      <td className=\"px-6 py-4 text-sm font-medium\">\n                        <button\n                          className=\"text-indigo-600 hover:text-indigo-900\"\n                          onClick={() => handleViewDetails(customer)}\n                        >\n                          View Details\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        ) : (\n          <div className=\"bg-white rounded-lg shadow border border-gray-200 p-8 text-center\">\n            <FiUsers className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No customers found</h3>\n            <p className=\"text-gray-500\">\n              {searchTerm ? 'Try adjusting your search criteria' : 'No customers have registered yet.'}\n            </p>\n          </div>\n        )}\n\n        {/* Enhanced Customer Details Modal */}\n        {showDetailsModal && selectedCustomer && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n            <div className=\"bg-white rounded-xl shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-hidden\">\n              {/* Modal Header */}\n              <div className=\"bg-gradient-to-r from-indigo-600 to-blue-600 px-6 py-4\">\n                <div className=\"flex justify-between items-center\">\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"w-12 h-12 bg-white bg-opacity-20 rounded-full flex items-center justify-center\">\n                      {selectedCustomer.profileImage ? (\n                        <img\n                          src={selectedCustomer.profileImage}\n                          alt={selectedCustomer.displayName}\n                          className=\"w-12 h-12 rounded-full object-cover\"\n                        />\n                      ) : (\n                        <FiUser className=\"text-white text-xl\" />\n                      )}\n                    </div>\n                    <div>\n                      <h3 className=\"text-xl font-bold text-white\">\n                        {selectedCustomer.firstName || selectedCustomer.displayName || 'Customer'}\n                      </h3>\n                      <p className=\"text-indigo-100 text-sm\">{selectedCustomer.email}</p>\n                    </div>\n                  </div>\n                  <button\n                    onClick={() => setShowDetailsModal(false)}\n                    className=\"text-white hover:text-indigo-200 transition-colors\"\n                  >\n                    <FiX className=\"h-6 w-6\" />\n                  </button>\n                </div>\n              </div>\n\n              {/* Modal Content */}\n              <div className=\"p-6 overflow-y-auto max-h-[calc(90vh-120px)]\">\n                <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n                  {/* Left Column - Personal Info */}\n                  <div className=\"lg:col-span-2 space-y-6\">\n                    {/* Personal Information Card */}\n                    <div className=\"bg-gray-50 rounded-lg p-6\">\n                      <div className=\"flex items-center mb-4\">\n                        <FiUser className=\"text-indigo-600 mr-2\" />\n                        <h4 className=\"text-lg font-semibold text-gray-800\">Personal Information</h4>\n                      </div>\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        <div className=\"bg-white p-4 rounded-lg border\">\n                          <label className=\"block text-xs font-medium text-gray-500 uppercase tracking-wide mb-1\">Full Name</label>\n                          <p className=\"text-sm font-medium text-gray-900\">\n                            {selectedCustomer.firstName || selectedCustomer.displayName || 'Not provided'}\n                          </p>\n                        </div>\n                        <div className=\"bg-white p-4 rounded-lg border\">\n                          <label className=\"block text-xs font-medium text-gray-500 uppercase tracking-wide mb-1\">Email Address</label>\n                          <p className=\"text-sm font-medium text-gray-900\">{selectedCustomer.email}</p>\n                        </div>\n                        <div className=\"bg-white p-4 rounded-lg border\">\n                          <label className=\"block text-xs font-medium text-gray-500 uppercase tracking-wide mb-1\">Phone Number</label>\n                          <p className=\"text-sm font-medium text-gray-900\">\n                            {selectedCustomer.phone || 'Not provided'}\n                          </p>\n                        </div>\n                        <div className=\"bg-white p-4 rounded-lg border\">\n                          <label className=\"block text-xs font-medium text-gray-500 uppercase tracking-wide mb-1\">Member Since</label>\n                          <p className=\"text-sm font-medium text-gray-900\">\n                            {selectedCustomer.createdAt ?\n                              new Date(selectedCustomer.createdAt.toDate()).toLocaleDateString('en-US', {\n                                year: 'numeric',\n                                month: 'long',\n                                day: 'numeric'\n                              }) : 'N/A'}\n                          </p>\n                        </div>\n                        <div className=\"bg-white p-4 rounded-lg border\">\n                          <label className=\"block text-xs font-medium text-gray-500 uppercase tracking-wide mb-1\">Account Status</label>\n                          <div className=\"flex items-center\">\n                            <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${selectedCustomer.isActive\n                                ? 'bg-green-100 text-green-800'\n                                : 'bg-gray-100 text-gray-800'\n                              }`}>\n                              <span className={`w-1.5 h-1.5 rounded-full mr-1.5 ${selectedCustomer.isActive ? 'bg-green-400' : 'bg-gray-400'\n                                }`}></span>\n                              {selectedCustomer.isActive ? 'Active' : 'Inactive'}\n                            </span>\n                          </div>\n                        </div>\n                        <div className=\"bg-white p-4 rounded-lg border\">\n                          <label className=\"block text-xs font-medium text-gray-500 uppercase tracking-wide mb-1\">Last Login</label>\n                          <p className=\"text-sm font-medium text-gray-900\">\n                            {selectedCustomer.lastLoginAt ?\n                              new Date(selectedCustomer.lastLoginAt.toDate()).toLocaleDateString() : 'Never'}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Service Requests Section */}\n                    <div className=\"bg-gray-50 rounded-lg p-6\">\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <div className=\"flex items-center\">\n                          <FiFileText className=\"text-indigo-600 mr-2\" />\n                          <h4 className=\"text-lg font-semibold text-gray-800\">Service Requests</h4>\n                        </div>\n                        <span className=\"bg-indigo-100 text-indigo-800 text-xs font-medium px-2.5 py-0.5 rounded-full\">\n                          {selectedCustomer.requests?.length || 0} Total\n                        </span>\n                      </div>\n\n                      {selectedCustomer.requests && selectedCustomer.requests.length > 0 ? (\n                        <div className=\"space-y-3\">\n                          {selectedCustomer.requests.slice(0, 5).map((request, index) => (\n                            <div key={index} className=\"bg-white border rounded-lg p-4 hover:shadow-md transition-shadow\">\n                              <div className=\"flex justify-between items-start mb-2\">\n                                <div>\n                                  <h5 className=\"text-sm font-medium text-gray-900\">{request.serviceName || 'Service Request'}</h5>\n                                  <p className=\"text-xs text-gray-500 mt-1\">\n                                    ID: {request.id || `REQ-${index + 1}`}\n                                  </p>\n                                </div>\n                                <span className={`px-2 py-1 text-xs rounded-full font-medium ${request.status === 'completed' ? 'bg-green-100 text-green-800' :\n                                    request.status === 'in-progress' ? 'bg-blue-100 text-blue-800' :\n                                      request.status === 'rejected' ? 'bg-red-100 text-red-800' :\n                                        'bg-yellow-100 text-yellow-800'\n                                  }`}>\n                                  {request.status?.charAt(0).toUpperCase() + request.status?.slice(1) || 'Pending'}\n                                </span>\n                              </div>\n                              <div className=\"flex justify-between items-center text-xs text-gray-500\">\n                                <span>\n                                  Requested: {request.createdAt ?\n                                    new Date(request.createdAt.toDate()).toLocaleDateString() : 'N/A'}\n                                </span>\n                                {request.price && (\n                                  <span className=\"font-medium text-gray-700\">₹{request.price}</span>\n                                )}\n                              </div>\n                            </div>\n                          ))}\n                          {selectedCustomer.requests.length > 5 && (\n                            <div className=\"text-center\">\n                              <button className=\"text-indigo-600 hover:text-indigo-800 text-sm font-medium\">\n                                View All {selectedCustomer.requests.length} Requests\n                              </button>\n                            </div>\n                          )}\n                        </div>\n                      ) : (\n                        <div className=\"text-center py-8\">\n                          <FiFileText className=\"mx-auto h-8 w-8 text-gray-400 mb-2\" />\n                          <p className=\"text-gray-500 text-sm\">No service requests yet</p>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  {/* Right Column - Stats & Actions */}\n                  <div className=\"space-y-6\">\n                    {/* Quick Stats */}\n                    <div className=\"bg-gradient-to-br from-indigo-50 to-blue-50 rounded-lg p-6\">\n                      <h4 className=\"text-lg font-semibold text-gray-800 mb-4\">Quick Stats</h4>\n                      <div className=\"space-y-4\">\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"text-sm text-gray-600\">Total Requests</span>\n                          <span className=\"text-lg font-bold text-indigo-600\">\n                            {selectedCustomer.requests?.length || 0}\n                          </span>\n                        </div>\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"text-sm text-gray-600\">Completed</span>\n                          <span className=\"text-lg font-bold text-green-600\">\n                            {selectedCustomer.requests?.filter(r => r.status === 'completed').length || 0}\n                          </span>\n                        </div>\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"text-sm text-gray-600\">Pending</span>\n                          <span className=\"text-lg font-bold text-yellow-600\">\n                            {selectedCustomer.requests?.filter(r => r.status === 'pending').length || 0}\n                          </span>\n                        </div>\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"text-sm text-gray-600\">Total Spent</span>\n                          <span className=\"text-lg font-bold text-gray-800\">\n                            ₹{selectedCustomer.requests?.filter(r => r.status === 'completed' && r.price)\n                              .reduce((sum, r) => sum + (parseFloat(r.price) || 0), 0) || 0}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Documents Section */}\n                    {selectedCustomer.documents && selectedCustomer.documents.length > 0 && (\n                      <div className=\"bg-gray-50 rounded-lg p-6\">\n                        <div className=\"flex items-center mb-4\">\n                          <FiDownload className=\"text-indigo-600 mr-2\" />\n                          <h4 className=\"text-lg font-semibold text-gray-800\">Documents</h4>\n                        </div>\n                        <div className=\"space-y-2\">\n                          {selectedCustomer.documents.map((doc, index) => (\n                            <div key={index} className=\"flex items-center justify-between bg-white p-3 rounded border\">\n                              <div className=\"flex items-center\">\n                                <FiFileText className=\"text-gray-400 mr-2\" />\n                                <span className=\"text-sm font-medium text-gray-700\">\n                                  {doc.name || `Document ${index + 1}`}\n                                </span>\n                              </div>\n                              <a\n                                href={doc.url}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                className=\"text-indigo-600 hover:text-indigo-800 text-sm flex items-center\"\n                              >\n                                <FiDownload className=\"mr-1\" size={14} />\n                                Download\n                              </a>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n\n                    {/* Action Buttons */}\n                    <div className=\"bg-gray-50 rounded-lg p-6\">\n                      <h4 className=\"text-lg font-semibold text-gray-800 mb-4\">Actions</h4>\n                      <div className=\"space-y-3\">\n                        <button className=\"w-full bg-indigo-600 text-white py-2 px-4 rounded-lg hover:bg-indigo-700 transition-colors flex items-center justify-center\">\n                          <FiMail className=\"mr-2\" size={16} />\n                          Send Email\n                        </button>\n                        <button className=\"w-full bg-green-600 text-white py-2 px-4 rounded-lg hover:bg-green-700 transition-colors flex items-center justify-center\">\n                          <FiPhone className=\"mr-2\" size={16} />\n                          Call Customer\n                        </button>\n                        <button className=\"w-full bg-gray-600 text-white py-2 px-4 rounded-lg hover:bg-gray-700 transition-colors flex items-center justify-center\">\n                          <FiEdit2 className=\"mr-2\" size={16} />\n                          Edit Profile\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </AdminLayout>\n  );\n}\n\n// Enhanced Analytics Component with Firebase Data\nfunction Analytics() {\n  const { showSuccess, showError } = useNotification();\n  const [analyticsData, setAnalyticsData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const [dateRange, setDateRange] = useState('7d');\n\n  const fetchAnalyticsData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Calculate date range\n      const endDate = new Date();\n      const startDate = new Date();\n      const days = dateRange === '7d' ? 7 : dateRange === '30d' ? 30 : 90;\n      startDate.setDate(endDate.getDate() - days);\n\n      // Fetch data from Firestore\n      const [servicesSnapshot, requestsSnapshot, usersSnapshot] = await Promise.all([\n        getDocs(collection(db, 'services')),\n        getDocs(query(\n          collection(db, 'requests'),\n          where('createdAt', '>=', startDate),\n          orderBy('createdAt', 'desc')\n        )),\n        getDocs(collection(db, 'users'))\n      ]);\n\n      // Process services data\n      const services = [];\n      servicesSnapshot.forEach(doc => services.push({ id: doc.id, ...doc.data() }));\n\n      // Process requests data\n      const requests = [];\n      requestsSnapshot.forEach(doc => requests.push({ id: doc.id, ...doc.data() }));\n\n      // Process users data\n      const users = [];\n      usersSnapshot.forEach(doc => users.push({ id: doc.id, ...doc.data() }));\n\n      // Calculate analytics\n      const totalRequests = requests.length;\n      const completedRequests = requests.filter(r => r.status === 'completed').length;\n      const pendingRequests = requests.filter(r => r.status === 'pending').length;\n      const inProgressRequests = requests.filter(r => r.status === 'in-progress').length;\n\n      // Revenue calculation (assuming price field in requests)\n      const totalRevenue = requests\n        .filter(r => r.status === 'completed' && r.price)\n        .reduce((sum, r) => sum + (parseFloat(r.price) || 0), 0);\n\n      // Service performance\n      const serviceStats = services.map(service => {\n        const serviceRequests = requests.filter(r => r.serviceId === service.id);\n        const completedServiceRequests = serviceRequests.filter(r => r.status === 'completed');\n\n        return {\n          id: service.id,\n          name: service.title || service.name,\n          totalRequests: serviceRequests.length,\n          completedRequests: completedServiceRequests.length,\n          successRate: serviceRequests.length > 0 ?\n            Math.round((completedServiceRequests.length / serviceRequests.length) * 100) : 0,\n          revenue: completedServiceRequests\n            .reduce((sum, r) => sum + (parseFloat(r.price) || 0), 0)\n        };\n      });\n\n      // Daily trends for chart\n      const dailyData = [];\n      for (let i = days - 1; i >= 0; i--) {\n        const date = new Date();\n        date.setDate(date.getDate() - i);\n        const dayStart = new Date(date.setHours(0, 0, 0, 0));\n        const dayEnd = new Date(date.setHours(23, 59, 59, 999));\n\n        const dayRequests = requests.filter(r => {\n          const requestDate = r.createdAt?.toDate();\n          return requestDate >= dayStart && requestDate <= dayEnd;\n        });\n\n        dailyData.push({\n          date: dayStart.toLocaleDateString('en-US', { month: 'short', day: 'numeric' }),\n          requests: dayRequests.length,\n          completed: dayRequests.filter(r => r.status === 'completed').length,\n          revenue: dayRequests\n            .filter(r => r.status === 'completed')\n            .reduce((sum, r) => sum + (parseFloat(r.price) || 0), 0)\n        });\n      }\n\n      const processedData = {\n        overview: {\n          totalRequests,\n          completedRequests,\n          pendingRequests,\n          inProgressRequests,\n          totalRevenue,\n          totalServices: services.length,\n          totalUsers: users.length,\n          completionRate: totalRequests > 0 ? Math.round((completedRequests / totalRequests) * 100) : 0\n        },\n        servicePerformance: serviceStats.sort((a, b) => b.totalRequests - a.totalRequests),\n        dailyTrends: dailyData,\n        topServices: serviceStats\n          .sort((a, b) => b.revenue - a.revenue)\n          .slice(0, 5),\n        recentActivity: requests\n          .sort((a, b) => b.createdAt?.toDate() - a.createdAt?.toDate())\n          .slice(0, 10)\n      };\n\n      setAnalyticsData(processedData);\n      setLastUpdated(new Date());\n      showSuccess('Analytics data updated successfully');\n    } catch (error) {\n      console.error(\"Error fetching analytics data:\", error);\n      setError(error.message);\n      showError('Failed to load analytics data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchAnalyticsData();\n  }, [dateRange]);\n\n  const refreshData = () => {\n    fetchAnalyticsData();\n  };\n\n  // Helper function for formatting timestamps\n  const formatDateTime = (timestamp) => {\n    if (!timestamp) return 'N/A';\n    if (typeof timestamp.toDate === 'function') {\n      return timestamp.toDate().toLocaleString();\n    }\n    if (timestamp instanceof Date) {\n      return timestamp.toLocaleString();\n    }\n    try {\n      return new Date(timestamp).toLocaleString();\n    } catch (error) {\n      console.error('Error formatting timestamp:', error);\n      return 'N/A';\n    }\n  };\n\n  if (loading && !analyticsData) {\n    return (\n      <AdminLayout title=\"Analytics\" activeNav=\"analytics\">\n        <div className=\"p-6\">\n          <div className=\"flex justify-center items-center h-64\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\n          </div>\n        </div>\n      </AdminLayout>\n    );\n  }\n\n  if (error) {\n    return (\n      <AdminLayout title=\"Analytics\" activeNav=\"analytics\">\n        <div className=\"p-6\">\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-8 text-center\">\n            <FiAlertCircle className=\"mx-auto h-12 w-12 text-red-400 mb-4\" />\n            <h3 className=\"text-lg font-medium text-red-900 mb-2\">Error loading analytics</h3>\n            <p className=\"text-red-700 mb-4\">{error}</p>\n            <button\n              onClick={refreshData}\n              className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors\"\n            >\n              Try Again\n            </button>\n          </div>\n        </div>\n      </AdminLayout>\n    );\n  }\n\n  return (\n    <AdminLayout title=\"Analytics\" activeNav=\"analytics\">\n      <div className=\"p-6\">\n        <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6\">\n          <h2 className=\"text-2xl font-bold text-gray-800 mb-4 sm:mb-0\">Analytics Dashboard</h2>\n          <div className=\"flex items-center space-x-3\">\n            <select\n              value={dateRange}\n              onChange={(e) => setDateRange(e.target.value)}\n              className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n            >\n              <option value=\"7d\">Last 7 days</option>\n              <option value=\"30d\">Last 30 days</option>\n              <option value=\"90d\">Last 90 days</option>\n            </select>\n            {lastUpdated && (\n              <span className=\"text-sm text-gray-500\">\n                Last updated: {lastUpdated.toLocaleTimeString()}\n              </span>\n            )}\n            <button\n              onClick={refreshData}\n              disabled={loading}\n              className=\"flex items-center px-3 py-2 bg-indigo-100 text-indigo-700 rounded-lg hover:bg-indigo-200 disabled:opacity-50\"\n            >\n              <FiRefreshCw className={`mr-2 ${loading ? 'animate-spin' : ''}`} />\n              Refresh\n            </button>\n          </div>\n        </div>\n\n        {/* Key Metrics Overview */}\n        {analyticsData && (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n            <StatCard\n              icon={FiUsers}\n              title=\"Total Users\"\n              value={analyticsData.overview.totalUsers}\n              change=\"+12% from last month\"\n              iconBg=\"bg-blue-100\"\n              iconColor=\"text-blue-600\"\n            />\n            <StatCard\n              icon={FiFileText}\n              title=\"Total Requests\"\n              value={analyticsData.overview.totalRequests}\n              change=\"+8% from last month\"\n              iconBg=\"bg-green-100\"\n              iconColor=\"text-green-600\"\n            />\n            <StatCard\n              icon={FiCheckCircle}\n              title=\"Completion Rate\"\n              value={`${analyticsData.overview.completionRate}%`}\n              change=\"+5% from last month\"\n              iconBg=\"bg-purple-100\"\n              iconColor=\"text-purple-600\"\n            />\n            <StatCard\n              icon={FiDollarSign}\n              title=\"Total Revenue\"\n              value={`$${analyticsData.overview.totalRevenue.toLocaleString()}`}\n              change=\"+15% from last month\"\n              iconBg=\"bg-orange-100\"\n              iconColor=\"text-orange-600\"\n            />\n          </div>\n        )}\n\n        {/* Charts Section */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\n          <div className=\"bg-white rounded-lg shadow border border-gray-200 p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Daily Trends</h3>\n            <div className=\"h-64\">\n              <DailyTrendsChart data={analyticsData?.dailyTrends || []} />\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-lg shadow border border-gray-200 p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Request Status Distribution</h3>\n            <div className=\"h-64\">\n              <StatusDistributionChart data={analyticsData?.overview || {}} />\n            </div>\n          </div>\n        </div>\n\n        {/* Service Performance Chart */}\n        <div className=\"bg-white rounded-lg shadow border border-gray-200 p-6 mb-8\">\n          <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Service Performance</h3>\n          <div className=\"h-80\">\n            <ServicePerformanceChart data={analyticsData?.servicePerformance || []} />\n          </div>\n        </div>\n\n        {/* Recent Activity */}\n        {analyticsData?.recentActivity && analyticsData.recentActivity.length > 0 && (\n          <div className=\"bg-white rounded-lg shadow border border-gray-200 p-6 mt-6\">\n            <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Recent Activity</h3>\n            <div className=\"space-y-3\">\n              {analyticsData.recentActivity.map((activity, index) => (\n                <div key={index} className=\"flex items-center border-b pb-3 last:border-0 last:pb-0\">\n                  <div className=\"p-2 bg-gray-100 rounded-lg mr-3\">\n                    <FiFileText className=\"h-4 w-4 text-gray-600\" />\n                  </div>\n                  <div>\n                    <p className=\"text-sm font-medium\">\n                      {activity.serviceName || activity.customerName || 'New activity'}\n                    </p>\n                    <p className=\"text-xs text-gray-500\">\n                      {activity.createdAt ? formatDateTime(activity.createdAt) : 'Recent'}\n                    </p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </AdminLayout>\n  );\n}\n\n// Enhanced Requests Component with Professional Status Management\nfunction Requests() {\n  const { showSuccess, showError, showWarning } = useNotification();\n  const [requests, setRequests] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filter, setFilter] = useState('all');\n  const [selectedRequest, setSelectedRequest] = useState(null);\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\n  const [updatingStatus, setUpdatingStatus] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortBy, setSortBy] = useState('createdAt');\n  const [sortOrder, setSortOrder] = useState('desc');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n  const [viewMode, setViewMode] = useState('table');\n  const [activeTab, setActiveTab] = useState('details');\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  useEffect(() => {\n    fetchRequests();\n  }, []);\n\n  // Function to fetch documents from Firebase Storage\n  const fetchDocumentsForRequest = async (requestId) => {\n    try {\n      const storageRef = ref(storage, `applications/${requestId}/`);\n      const items = await listAll(storageRef);\n\n      const documentPromises = items.items.map(async (itemRef) => {\n        const url = await getDownloadURL(itemRef);\n        const metadata = await getMetadata(itemRef);\n\n        return {\n          name: metadata.name,\n          url: url,\n          type: metadata.contentType,\n          uploadedAt: metadata.timeCreated,\n          size: metadata.size\n        };\n      });\n\n      const documents = await Promise.all(documentPromises);\n      return documents;\n    } catch (error) {\n      console.error(\"Error fetching documents:\", error);\n      return [];\n    }\n  };\n\n  // Enhanced timestamp handling\n  const safeToDate = (timestamp) => {\n    if (!timestamp) return null;\n    if (typeof timestamp.toDate === 'function') return timestamp.toDate();\n    if (timestamp instanceof Date) return timestamp;\n    try {\n      return new Date(timestamp);\n    } catch (error) {\n      console.error('Error converting timestamp:', error);\n      return null;\n    }\n  };\n\n  const formatDateTime = (timestamp) => {\n    const date = safeToDate(timestamp);\n    return date ? date.toLocaleString() : 'N/A';\n  };\n\n  const formatDate = (timestamp) => {\n    const date = safeToDate(timestamp);\n    return date ? date.toLocaleDateString() : 'N/A';\n  };\n\n  const fetchRequests = async () => {\n    try {\n      setLoading(true);\n      const q = query(collection(db, 'applications'), orderBy('createdAt', 'desc'));\n      const requestsSnapshot = await getDocs(q);\n      const requestsData = [];\n\n      for (const doc of requestsSnapshot.docs) {\n        const data = doc.data();\n\n        // Fetch documents from storage for this request\n        const documents = await fetchDocumentsForRequest(doc.id);\n\n        const request = {\n          id: doc.id,\n          ...data,\n          // Map all possible field names from your image\n          serviceName: data.serviceName || data.formName || 'Unknown Service',\n          customerName: data.customerName || data.applicantName || data.userName || 'Unknown Customer',\n          customerEmail: data.customerEmail || data.applicantEmail || data.userEmail,\n          customerPhone: data.customerPhone || data.applicantPhone,\n          status: data.status || 'pending',\n          price: data.price || data.servicePrice || 0,\n          processingTime: data.processingTime || 'Not specified',\n          paymentStatus: data.paymentStatus || 'pending',\n          paymentMethod: data.paymentMethod || 'Unknown',\n          formData: data.formData || data.remformData || {},\n          documents: documents, // Use documents from storage\n          adminNotes: data.adminNotes || '',\n          adminActions: data.adminActions || [],\n          formId: data.formId,\n          serviceId: data.serviceId,\n          createdAt: data.createdAt,\n          updatedAt: data.updatedAt || data.updateedit\n        };\n\n        requestsData.push(request);\n      }\n\n      setRequests(requestsData);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching requests:\", error);\n      setError(error.message || 'Failed to fetch applications');\n      showError('Failed to fetch applications. Please try again.');\n      setLoading(false);\n    }\n  };\n\n  // Function to generate sequential numbers for display\n  const getSequentialNumber = (index) => {\n    return index + 1;\n  };\n\n  const filteredRequests = requests.filter(request => {\n    const matchesFilter = filter === 'all' || request.status === filter;\n    const searchLower = searchTerm.toLowerCase();\n    const matchesSearch =\n      request.serviceName?.toLowerCase().includes(searchLower) ||\n      request.customerName?.toLowerCase().includes(searchLower) ||\n      request.customerEmail?.toLowerCase().includes(searchLower) ||\n      request.id.toLowerCase().includes(searchLower);\n\n    return matchesFilter && matchesSearch;\n  });\n\n  const updateRequestStatus = async (requestId, newStatus) => {\n    try {\n      setUpdatingStatus(requestId);\n\n      const request = requests.find(r => r.id === requestId);\n      await updateDoc(doc(db, 'applications', requestId), {\n        status: newStatus,\n        updatedAt: new Date(),\n        adminActions: arrayUnion({\n          action: 'status_update',\n          from: request?.status || 'unknown',\n          to: newStatus,\n          timestamp: new Date(),\n          admin: 'Admin User'\n        })\n      });\n\n      setRequests(requests.map(req =>\n        req.id === requestId ? {\n          ...req,\n          status: newStatus,\n          updatedAt: new Date()\n        } : req\n      ));\n\n      if (selectedRequest?.id === requestId) {\n        setSelectedRequest(prev => ({\n          ...prev,\n          status: newStatus,\n          updatedAt: new Date()\n        }));\n      }\n\n      sendStatusNotification(request, newStatus);\n\n    } catch (error) {\n      console.error(\"Error updating request status:\", error);\n      showError('Failed to update status. Please try again.');\n    } finally {\n      setUpdatingStatus(null);\n    }\n  };\n\n  const addAdminNote = async (requestId, note) => {\n    if (!note.trim()) return;\n\n    try {\n      await updateDoc(doc(db, 'applications', requestId), {\n        adminNotes: note.trim(),\n        updatedAt: new Date(),\n        adminActions: arrayUnion({\n          action: 'add_note',\n          note: note.trim(),\n          timestamp: new Date(),\n          admin: 'Admin User'\n        })\n      });\n\n      setRequests(requests.map(req =>\n        req.id === requestId ? {\n          ...req,\n          adminNotes: note.trim(),\n          updatedAt: new Date()\n        } : req\n      ));\n\n      if (selectedRequest?.id === requestId) {\n        setSelectedRequest(prev => ({\n          ...prev,\n          adminNotes: note.trim(),\n          updatedAt: new Date()\n        }));\n      }\n\n    } catch (error) {\n      console.error(\"Error adding admin note:\", error);\n      showError('Failed to save note. Please try again.');\n    }\n  };\n\n  const handleViewDetails = async (request) => {\n    // If documents haven't been loaded yet, fetch them\n    if (!request.documents || request.documents.length === 0) {\n      const documents = await fetchDocumentsForRequest(request.id);\n      request.documents = documents;\n\n      // Update the request in state\n      setRequests(requests.map(req =>\n        req.id === request.id ? { ...req, documents } : req\n      ));\n    }\n\n    setSelectedRequest(request);\n    setShowDetailsModal(true);\n  };\n\n  const getStatusColor = (status) => {\n    const statusMap = {\n      'pending': 'bg-yellow-100 text-yellow-800',\n      'in-progress': 'bg-blue-100 text-blue-800',\n      'completed': 'bg-green-100 text-green-800',\n      'cancelled': 'bg-red-100 text-red-800',\n      'Improgress': 'bg-blue-100 text-blue-800', // Handle your specific case\n    };\n    return statusMap[status] || 'bg-gray-100 text-gray-800';\n  };\n\n  const getStatusOptions = () => {\n    return [\n      { value: 'pending', label: 'Pending' },\n      { value: 'in-progress', label: 'In Progress' },\n      { value: 'completed', label: 'Completed' },\n      { value: 'cancelled', label: 'Cancelled' }\n    ];\n  };\n\n  const sendStatusNotification = async (request, newStatus) => {\n    try {\n      await addDoc(collection(db, 'notifications'), {\n        userId: request.userId,\n        title: `Application Status Updated`,\n        message: `Your application for ${request.serviceName} is now ${newStatus}.`,\n        type: 'status_update',\n        read: false,\n        createdAt: new Date(),\n        applicationId: request.id\n      });\n    } catch (error) {\n      console.error('Error sending notification:', error);\n    }\n  };\n\n  const exportRequests = () => {\n    const csvContent = [\n      ['ID', 'Service', 'Customer', 'Email', 'Status', 'Created', 'Price', 'Payment Status'],\n      ...filteredRequests.map(request => [\n        request.id,\n        request.serviceName,\n        request.customerName,\n        request.customerEmail,\n        request.status,\n        formatDate(request.createdAt),\n        `₹${request.price || '0'}`,\n        request.paymentStatus\n      ])\n    ].map(row => row.join(',')).join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `applications-${new Date().toISOString().split('T')[0]}.csv`;\n    link.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const renderDocumentPreview = (doc, index) => {\n    const isImage = doc.type?.startsWith('image/') ||\n      doc.name?.match(/\\.(jpg|jpeg|png|gif|webp)$/i) ||\n      doc.url?.match(/\\.(jpg|jpeg|png|gif|webp)$/i);\n    const isPDF = doc.type === 'application/pdf' || doc.name?.match(/\\.pdf$/i);\n\n    // Get file extension for display\n    const fileExtension = doc.name?.split('.').pop() || 'file';\n\n    return (\n      <div key={index} className=\"border rounded-lg p-4 hover:shadow-md transition-shadow bg-white\">\n        <div className=\"flex justify-between items-center mb-3\">\n          <span className=\"text-sm font-medium text-gray-800 truncate\">\n            {doc.name || `Document ${index + 1}`}\n          </span>\n          <div className=\"flex gap-2\">\n            {isImage && (\n              <button\n                onClick={() => setSelectedImage(doc.url)}\n                className=\"text-blue-600 hover:text-blue-800 text-sm flex items-center gap-1\"\n                title=\"View full size\"\n              >\n                <FiEye size={14} /> View\n              </button>\n            )}\n            <a\n              href={doc.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"text-indigo-600 hover:text-indigo-800 text-sm flex items-center gap-1\"\n            >\n              <FiDownload size={14} /> Download\n            </a>\n          </div>\n        </div>\n\n        {isImage ? (\n          <div className=\"mt-2\">\n            <img\n              src={doc.url}\n              alt={doc.name || \"Uploaded document\"}\n              className=\"w-full h-48 object-cover rounded-md border cursor-pointer hover:opacity-90 transition-opacity\"\n              onClick={() => setSelectedImage(doc.url)}\n              onError={(e) => {\n                e.target.style.display = 'none';\n                e.target.nextSibling.style.display = 'block';\n              }}\n            />\n            <div className=\"hidden text-center text-gray-500 text-sm mt-2 p-3 bg-gray-50 rounded\">\n              <FiFileText className=\"inline-block mr-2\" />\n              Image unavailable. <a href={doc.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-indigo-600\">Open directly</a>\n            </div>\n          </div>\n        ) : isPDF ? (\n          <div className=\"mt-2\">\n            <div className=\"p-4 bg-gray-50 rounded-md text-center\">\n              <FiFileText className=\"text-red-400 text-4xl mb-2 mx-auto\" />\n              <span className=\"text-sm font-medium text-gray-700 block mb-2\">PDF Document</span>\n              <iframe\n                src={`${doc.url}#toolbar=0`}\n                className=\"w-full h-48 border rounded\"\n                title={doc.name}\n              />\n            </div>\n          </div>\n        ) : (\n          <div className=\"mt-2 p-4 bg-gray-50 rounded-md text-center\">\n            <div className=\"flex flex-col items-center\">\n              <FiFile className=\"text-blue-400 text-4xl mb-2\" />\n              <span className=\"text-sm font-medium text-gray-700\">\n                {fileExtension.toUpperCase()} File\n              </span>\n            </div>\n\n            <p className=\"text-xs text-gray-500 mt-2\">\n              {doc.size ? `Size: ${Math.round(doc.size / 1024)} KB` : 'Size unknown'}\n            </p>\n          </div>\n        )}\n\n        {doc.uploadedAt && (\n          <p className=\"text-xs text-gray-500 mt-2\">\n            Uploaded: {formatDate(doc.uploadedAt)}\n          </p>\n        )}\n      </div>\n    );\n  };\n\n  const parseFormData = (formData) => {\n    if (typeof formData === 'string') {\n      try {\n        // Handle your specific format: \"Field-1755929300146:\"Subind\",\"field-1755929323260\":driving licences\"\n        const cleaned = formData.replace(/\"/g, '').replace(/\\(/g, '{').replace(/\\)/g, '}');\n        return JSON.parse(cleaned);\n      } catch (e) {\n        try {\n          // Try parsing as simple key-value pairs\n          const pairs = formData.split(',');\n          const result = {};\n          pairs.forEach(pair => {\n            const [key, ...values] = pair.split(':');\n            if (key && values.length) {\n              result[key.trim()] = values.join(':').trim();\n            }\n          });\n          return result;\n        } catch (parseError) {\n          console.error('Error parsing form data:', parseError);\n          return { rawData: formData };\n        }\n      }\n    }\n    return formData || {};\n  };\n\n  // Function to check if a value is a valid image URL\n  const isImageUrl = (value) => {\n    if (typeof value !== 'string') return false;\n    return value.match(/\\.(jpeg|jpg|gif|png|webp)$/) !== null ||\n      value.startsWith('data:image/') ||\n      value.includes('firebasestorage.googleapis.com');\n  };\n\n  const renderFormData = (formData) => {\n    const parsedData = parseFormData(formData);\n\n    return (\n      <div className=\"space-y-3\">\n        {Object.entries(parsedData).map(([key, value]) => (\n          <div key={key} className=\"flex flex-col sm:flex-row sm:items-start gap-2 p-3 bg-white rounded-lg border\">\n            <span className=\"text-sm font-medium text-gray-700 min-w-[120px] capitalize\">\n              {key.replace(/([A-Z])/g, ' $1').replace(/field-/g, '').trim()}\n            </span>\n            <span className=\"text-sm text-gray-900 flex-1\">\n              {key.toLowerCase().includes('photo') && isImageUrl(value) ? (\n                <div className=\"mt-2\">\n\n\n                  <a\n                    href={value}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"text-indigo-600 hover:text-indigo-800 text-sm mt-2 inline-block\"\n                  >\n                    <FiDownload size={14} className=\"inline mr-1\" /> Download Image\n                  </a>\n                </div>\n              ) : Array.isArray(value) ? value.join(', ') :\n                typeof value === 'object' ? JSON.stringify(value) :\n                  value || 'Not provided'}\n            </span>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const renderAdminHistory = (actions = []) => {\n    if (!actions.length) {\n      return <p className=\"text-gray-500 text-sm\">No admin actions recorded</p>;\n    }\n\n    return (\n      <div className=\"space-y-3\">\n        {actions.map((action, index) => (\n          <div key={index} className=\"p-3 bg-white rounded-lg border\">\n            <div className=\"flex justify-between items-start mb-2\">\n              <span className=\"text-sm font-medium text-gray-800 capitalize\">\n                {action.action?.replace('_', ' ')}\n              </span>\n              <span className=\"text-xs text-gray-500\">\n                {formatDateTime(action.timestamp)}\n              </span>\n            </div>\n            {action.note && (\n              <p className=\"text-sm text-gray-700 mb-2\">{action.note}</p>\n            )}\n            {action.from && action.to && (\n              <p className=\"text-xs text-gray-600\">\n                Status: {action.from} → {action.to}\n              </p>\n            )}\n            <p className=\"text-xs text-gray-500 mt-1\">By: {action.admin || 'System'}</p>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const statusCounts = requests.reduce((acc, request) => {\n    acc[request.status] = (acc[request.status] || 0) + 1;\n    acc.total = (acc.total || 0) + 1;\n    return acc;\n  }, {});\n\n\n  return (\n    <AdminLayout title=\"Service Applications\" activeNav=\"requests\">\n      <div className=\"p-6\">\n        {/* Header Section */}\n        <div className=\"flex flex-col lg:flex-row justify-between items-start lg:items-center gap-4 mb-6\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">Service Applications</h2>\n            <div className=\"flex flex-wrap gap-4 text-sm text-gray-600\">\n              <span>Total: {statusCounts.total || 0}</span>\n              <span className=\"text-yellow-600\">Pending: {statusCounts.pending || 0}</span>\n              <span className=\"text-blue-600\">In Progress: {statusCounts['in-progress'] || 0}</span>\n              <span className=\"text-green-600\">Completed: {statusCounts.completed || 0}</span>\n            </div>\n          </div>\n\n          <div className=\"flex flex-col sm:flex-row gap-3 w-full lg:w-auto\">\n            <div className=\"relative flex-1\">\n              <FiSearch className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\n              <input\n                type=\"text\"\n                placeholder=\"Search applications...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-10 pr-4 py-2 w-full border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n              />\n            </div>\n\n            <div className=\"flex gap-2\">\n              <select\n                value={filter}\n                onChange={(e) => setFilter(e.target.value)}\n                className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n              >\n                <option value=\"all\">All Status</option>\n                <option value=\"pending\">Pending</option>\n                <option value=\"in-progress\">In Progress</option>\n                <option value=\"completed\">Completed</option>\n                <option value=\"cancelled\">Cancelled</option>\n              </select>\n\n              <button\n                onClick={fetchRequests}\n                className=\"p-2 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\n                title=\"Refresh\"\n              >\n                <FiRefreshCw className=\"text-gray-600\" />\n              </button>\n\n              <button\n                onClick={exportRequests}\n                className=\"p-2 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\n                title=\"Export CSV\"\n              >\n                <FiDownload className=\"text-gray-600\" />\n              </button>\n\n              <div className=\"flex border border-gray-300 rounded-lg overflow-hidden\">\n                <button\n                  onClick={() => setViewMode('table')}\n                  className={`p-2 transition-colors ${viewMode === 'table' ? 'bg-indigo-100 text-indigo-700' : 'bg-white hover:bg-gray-50'}`}\n                  title=\"Table view\"\n                >\n                  <FiList />\n                </button>\n                <button\n                  onClick={() => setViewMode('card')}\n                  className={`p-2 transition-colors ${viewMode === 'card' ? 'bg-indigo-100 text-indigo-700' : 'bg-white hover:bg-gray-50'}`}\n                  title=\"Card view\"\n                >\n                  <FiGrid />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Loading State */}\n        {loading ? (\n          <div className=\"flex justify-center items-center h-64\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\n          </div>\n        ) : (\n          <>\n            {/* Results Count */}\n            <div className=\"mb-4\">\n              <p className=\"text-sm text-gray-600\">\n                Showing {filteredRequests.length} of {requests.length} applications\n                {searchTerm && ` for \"${searchTerm}\"`}\n                {filter !== 'all' && ` with status \"${filter}\"`}\n              </p>\n            </div>\n\n            {/* Applications List */}\n            {filteredRequests.length > 0 ? (\n              viewMode === 'table' ? (\n                <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\">\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"min-w-full divide-y divide-gray-200\">\n                      <thead className=\"bg-gray-50\">\n                        <tr>\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">#</th>\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Service</th>\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Customer</th>\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Amount</th>\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"bg-white divide-y divide-gray-200\">\n                        {filteredRequests.map((request, index) => (\n                          <tr key={request.id} className=\"hover:bg-gray-50 transition-colors\">\n                            <td className=\"px-6 py-4\">\n                              <div className=\"text-sm font-medium text-gray-900\">\n                                {getSequentialNumber(index)}\n                              </div>\n                            </td>\n\n                            <td className=\"px-6 py-4\">\n                              <div className=\"text-sm text-gray-900\">{request.serviceName}</div>\n                              <div className=\"text-xs text-gray-500\">{request.formId}</div>\n                            </td>\n                            <td className=\"px-6 py-4\">\n                              <div className=\"text-sm text-gray-900\">{request.customerName}</div>\n                              <div className=\"text-xs text-gray-500\">{request.customerEmail}</div>\n                            </td>\n                            <td className=\"px-6 py-4\">\n                              <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getStatusColor(request.status)}`}>\n                                {request.status}\n                              </span>\n                            </td>\n                            <td className=\"px-6 py-4 text-sm text-gray-900\">\n                              {formatDate(request.createdAt)}\n                            </td>\n                            <td className=\"px-6 py-4\">\n                              <div className=\"text-sm text-gray-900\">₹{request.price}</div>\n                              <div className=\"text-xs text-gray-500\">{request.paymentStatus}</div>\n                            </td>\n                            <td className=\"px-6 py-4\">\n                              <div className=\"flex items-center gap-2\">\n                                <select\n                                  value={request.status}\n                                  onChange={(e) => updateRequestStatus(request.id, e.target.value)}\n                                  disabled={updatingStatus === request.id}\n                                  className=\"text-xs border border-gray-300 rounded-md px-2 py-1 focus:ring-1 focus:ring-indigo-500\"\n                                >\n                                  {getStatusOptions().map(option => (\n                                    <option key={option.value} value={option.value}>\n                                      {option.label}\n                                    </option>\n                                  ))}\n                                </select>\n                                <button\n                                  onClick={() => handleViewDetails(request)}\n                                  className=\"text-indigo-600 hover:text-indigo-800 transition-colors\"\n                                  title=\"View details\"\n                                >\n                                  <FiEye size={16} />\n                                </button>\n                              </div>\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                  {filteredRequests.map((request, index) => (\n                    <div key={request.id} className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-4 hover:shadow-md transition-shadow\">\n                      <div className=\"flex justify-between items-start mb-3\">\n                        <span className=\"text-xs font-medium text-gray-500\">\n                          #{getSequentialNumber(index)}\n                        </span>\n                        <span className={`px-2 py-1 text-xs font-semibold rounded-full ${getStatusColor(request.status)}`}>\n                          {request.status}\n                        </span>\n                      </div>\n\n                      <div className=\"mb-2\">\n                        <span className=\"text-xs text-gray-500\">ID: #{request.id.slice(-8)}</span>\n                      </div>\n\n                      <h3 className=\"text-lg font-semibold text-gray-800 mb-2 truncate\">{request.serviceName}</h3>\n\n                      <div className=\"mb-3\">\n                        <p className=\"text-sm text-gray-900 font-medium\">{request.customerName}</p>\n                        <p className=\"text-xs text-gray-500 truncate\">{request.customerEmail}</p>\n                      </div>\n\n                      <div className=\"flex justify-between items-center mb-4\">\n                        <span className=\"text-sm font-semibold text-gray-900\">₹{request.price}</span>\n                        <span className={`text-xs px-2 py-1 rounded-full ${request.paymentStatus === 'paid' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n                          }`}>\n                          {request.paymentStatus}\n                        </span>\n                      </div>\n\n                      <div className=\"text-xs text-gray-500 mb-3\">\n                        Created: {formatDate(request.createdAt)}\n                      </div>\n\n                      <div className=\"flex gap-2\">\n                        <select\n                          value={request.status}\n                          onChange={(e) => updateRequestStatus(request.id, e.target.value)}\n                          disabled={updatingStatus === request.id}\n                          className=\"flex-1 text-xs border border-gray-300 rounded-md px-2 py-1 focus:ring-1 focus:ring-indigo-500\"\n                        >\n                          {getStatusOptions().map(option => (\n                            <option key={option.value} value={option.value}>\n                              {option.label}\n                            </option>\n                          ))}\n                        </select>\n                        <button\n                          onClick={() => handleViewDetails(request)}\n                          className=\"p-1 text-indigo-600 hover:text-indigo-800 transition-colors\"\n                          title=\"View details\"\n                        >\n                          <FiEye size={16} />\n                        </button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )\n            ) : (\n              <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-12 text-center\">\n                <FiMail className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No applications found</h3>\n                <p className=\"text-gray-500\">\n                  {searchTerm || filter !== 'all'\n                    ? 'Try adjusting your search or filter criteria'\n                    : 'No applications have been submitted yet'}\n                </p>\n              </div>\n            )}\n          </>\n        )}\n\n        {/* Application Details Modal */}\n        {showDetailsModal && selectedRequest && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n            <div className=\"bg-white rounded-xl shadow-lg max-w-6xl w-full max-h-[90vh] overflow-y-auto\">\n              <div className=\"p-6\">\n                {/* Modal Header */}\n                <div className=\"flex justify-between items-center mb-6 pb-4 border-b\">\n                  <div>\n                    <h3 className=\"text-xl font-bold text-gray-800\">Application Details</h3>\n                    <p className=\"text-sm text-gray-600\">ID: #{selectedRequest.id}</p>\n                  </div>\n                  <button\n                    onClick={() => setShowDetailsModal(false)}\n                    className=\"text-gray-500 hover:text-gray-700 transition-colors\"\n                  >\n                    <FiX size={24} />\n                  </button>\n                </div>\n\n                {/* Tab Navigation */}\n                <div className=\"flex border-b mb-6\">\n                  <button\n                    onClick={() => setActiveTab('details')}\n                    className={`px-4 py-2 font-medium ${activeTab === 'details' ? 'text-indigo-600 border-b-2 border-indigo-600' : 'text-gray-500 hover:text-gray-700'}`}\n                  >\n                    Details\n                  </button>\n                  <button\n                    onClick={() => setActiveTab('documents')}\n                    className={`px-4 py-2 font-medium ${activeTab === 'documents' ? 'text-indigo-600 border-b-2 border-indigo-600' : 'text-gray-500 hover:text-gray-700'}`}\n                  >\n                    Documents ({selectedRequest.documents?.length || 0})\n                  </button>\n                  <button\n                    onClick={() => setActiveTab('history')}\n                    className={`px-4 py-2 font-medium ${activeTab === 'history' ? 'text-indigo-600 border-b-2 border-indigo-600' : 'text-gray-500 hover:text-gray-700'}`}\n                  >\n                    History ({selectedRequest.adminActions?.length || 0})\n                  </button>\n                </div>\n\n                {/* Tab Content */}\n                {activeTab === 'details' && (\n                  <div className=\"space-y-6\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                      <div className=\"space-y-4\">\n                        <h4 className=\"text-lg font-semibold text-gray-800\">Service Information</h4>\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-1\">Service</label>\n                          <p className=\"text-sm text-gray-900 bg-gray-50 p-3 rounded-lg\">{selectedRequest.serviceName}</p>\n                        </div>\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-1\">Form ID</label>\n                          <p className=\"text-sm text-gray-900 bg-gray-50 p-3 rounded-lg\">{selectedRequest.formId}</p>\n                        </div>\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-1\">Processing Time</label>\n                          <p className=\"text-sm text-gray-900 bg-gray-50 p-3 rounded-lg\">{selectedRequest.processingTime}</p>\n                        </div>\n                      </div>\n\n                      <div className=\"space-y-4\">\n                        <h4 className=\"text-lg font-semibold text-gray-800\">Customer Information</h4>\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-1\">Name</label>\n                          <p className=\"text-sm text-gray-900 bg-gray-50 p-3 rounded-lg\">{selectedRequest.customerName}</p>\n                        </div>\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-1\">Email</label>\n                          <p className=\"text-sm text-gray-900 bg-gray-50 p-3 rounded-lg\">{selectedRequest.customerEmail}</p>\n                        </div>\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-1\">Phone</label>\n                          <p className=\"text-sm text-gray-900 bg-gray-50 p-3 rounded-lg\">{selectedRequest.customerPhone || 'Not provided'}</p>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                      <div className=\"space-y-4\">\n                        <h4 className=\"text-lg font-semibold text-gray-800\">Status & Payment</h4>\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-1\">Status</label>\n                          <div className=\"flex items-center gap-2\">\n                            <select\n                              value={selectedRequest.status}\n                              onChange={(e) => updateRequestStatus(selectedRequest.id, e.target.value)}\n                              disabled={updatingStatus === selectedRequest.id}\n                              className=\"flex-1 border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-indigo-500\"\n                            >\n                              {getStatusOptions().map(option => (\n                                <option key={option.value} value={option.value}>\n                                  {option.label}\n                                </option>\n                              ))}\n                            </select>\n                            {updatingStatus === selectedRequest.id && (\n                              <div className=\"animate-spin rounded-full h-4 w-4 border-t-2 border-b-2 border-indigo-500\"></div>\n                            )}\n                          </div>\n                        </div>\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-1\">Price</label>\n                          <p className=\"text-sm text-gray-900 bg-gray-50 p-3 rounded-lg\">₹{selectedRequest.price}</p>\n                        </div>\n                      </div>\n\n                      <div className=\"space-y-4\">\n                        <h4 className=\"text-lg font-semibold text-gray-800\">Timestamps</h4>\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-1\">Created</label>\n                          <p className=\"text-sm text-gray-900 bg-gray-50 p-3 rounded-lg\">{formatDateTime(selectedRequest.createdAt)}</p>\n                        </div>\n                        {selectedRequest.updatedAt && (\n                          <div>\n                            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Last Updated</label>\n                            <p className=\"text-sm text-gray-900 bg-gray-50 p-3 rounded-lg\">{formatDateTime(selectedRequest.updatedAt)}</p>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n\n                    {selectedRequest.formData && Object.keys(selectedRequest.formData).length > 0 && (\n                      <div>\n                        <h4 className=\"text-lg font-semibold text-gray-800 mb-4\">Form Data</h4>\n                        {renderFormData(selectedRequest.formData)}\n                      </div>\n                    )}\n\n                    <div>\n                      <h4 className=\"text-lg font-semibold text-gray-800 mb-4\">Admin Notes</h4>\n                      <textarea\n                        defaultValue={selectedRequest.adminNotes}\n                        placeholder=\"Add notes about this application...\"\n                        className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 resize-none\"\n                        rows={3}\n                        onBlur={(e) => addAdminNote(selectedRequest.id, e.target.value)}\n                      />\n                      <p className=\"text-xs text-gray-500 mt-1\">Click outside to save notes</p>\n                    </div>\n                  </div>\n                )}\n\n                {activeTab === 'documents' && (\n                  <div>\n                    <h4 className=\"text-lg font-semibold text-gray-800 mb-4\">Uploaded Documents</h4>\n                    {selectedRequest.documents?.length > 0 ? (\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                        {selectedRequest.documents.map((doc, index) => renderDocumentPreview(doc, index))}\n                      </div>\n                    ) : (\n                      <div className=\"text-center py-8 text-gray-500\">\n                        <FiFileText className=\"mx-auto h-12 w-12 mb-4\" />\n                        <p>No documents uploaded</p>\n                      </div>\n                    )}\n                  </div>\n                )}\n\n                {activeTab === 'history' && (\n                  <div>\n                    <h4 className=\"text-lg font-semibold text-gray-800 mb-4\">Admin History</h4>\n                    {renderAdminHistory(selectedRequest.adminActions)}\n                  </div>\n                )}\n\n                {/* Modal Footer */}\n                <div className=\"flex justify-end space-x-3 mt-8 pt-4 border-t\">\n                  <button\n                    onClick={() => setShowDetailsModal(false)}\n                    className=\"px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors\"\n                  >\n                    Close\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Image Modal */}\n        {selectedImage && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\">\n            <div className=\"relative max-w-4xl max-h-full\">\n              <button\n                onClick={() => setSelectedImage(null)}\n                className=\"absolute top-4 right-4 text-white hover:text-gray-300 z-10\"\n              >\n                <FiX size={24} />\n              </button>\n              <img\n                src={selectedImage}\n                alt=\"Full size preview\"\n                className=\"max-w-full max-h-full object-contain rounded-lg\"\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    </AdminLayout>\n  );\n}\n\n// Service Details Component\nfunction ServiceDetails() {\n  const { id } = useParams();\n  const [service, setService] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchService = async () => {\n      try {\n        const serviceDoc = await getDoc(doc(db, 'services', id));\n        if (serviceDoc.exists()) {\n          setService({ id: serviceDoc.id, ...serviceDoc.data() });\n        } else {\n          setError('Service not found');\n        }\n      } catch (err) {\n        console.error('Error fetching service:', err);\n        setError('Failed to load service details');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchService();\n  }, [id]);\n\n  if (loading) {\n    return (\n      <AdminLayout title=\"Service Details\" activeNav=\"services\">\n        <div className=\"flex justify-center items-center h-64\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\n        </div>\n      </AdminLayout>\n    );\n  }\n\n  if (error) {\n    return (\n      <AdminLayout title=\"Service Details\" activeNav=\"services\">\n        <div className=\"bg-red-50 border-l-4 border-red-500 p-4 mb-6 rounded\">\n          <p className=\"text-red-700\">{error}</p>\n        </div>\n      </AdminLayout>\n    );\n  }\n\n  return (\n    <AdminLayout title=\"Service Details\" activeNav=\"services\">\n      <div className=\"p-6\">\n        <div className=\"flex justify-between items-start mb-6\">\n          <h2 className=\"text-2xl font-bold text-gray-800\">{service.name}</h2>\n          <Link\n            to={`/admin/edit-service/${id}`}\n            className=\"px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 flex items-center\"\n          >\n            <FiEdit2 className=\"mr-2\" /> Edit Service\n          </Link>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          <div className=\"lg:col-span-2\">\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-6\">\n              <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Service Information</h3>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Price</label>\n                  <p className=\"text-gray-900\">₹{service.price}</p>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Processing Time</label>\n                  <p className=\"text-gray-900\">{service.processingTime}</p>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Status</label>\n                  <span className=\"px-2 py-1 bg-green-100 text-green-800 text-xs font-medium rounded-full\">\n                    Active\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Description</h3>\n              <p className=\"text-gray-700\">{service.description}</p>\n            </div>\n          </div>\n\n          <div>\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-6\">\n              <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Key Benefits</h3>\n              <ul className=\"list-disc list-inside space-y-2 text-gray-700\">\n                {service.keyBenefits && service.keyBenefits.map((benefit, index) => (\n                  <li key={index}>{benefit}</li>\n                ))}\n              </ul>\n            </div>\n\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Required Documents</h3>\n              <ul className=\"list-disc list-inside space-y-2 text-gray-700\">\n                {service.documentsRequired && service.documentsRequired.map((doc, index) => (\n                  <li key={index}>{doc}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </AdminLayout>\n  );\n}\n\n// Service List Component (Enhanced)\nfunction ServiceList() {\n  const [services, setServices] = useState([]);\n  const [filteredServices, setFilteredServices] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortBy, setSortBy] = useState('name');\n  const [deleteLoading, setDeleteLoading] = useState(null);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchServices();\n  }, []);\n\n  useEffect(() => {\n    filterAndSortServices();\n  }, [services, searchTerm, sortBy]);\n\n  const fetchServices = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      const q = query(collection(db, 'services'), orderBy('name'));\n      const querySnapshot = await getDocs(q);\n      const servicesData = [];\n      querySnapshot.forEach((doc) => {\n        servicesData.push({ id: doc.id, ...doc.data() });\n      });\n      setServices(servicesData);\n    } catch (error) {\n      console.error(\"Error fetching services: \", error);\n      setError('Failed to load services. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const filterAndSortServices = () => {\n    let result = [...services];\n\n    // Apply search filter\n    if (searchTerm) {\n      const term = searchTerm.toLowerCase();\n      result = result.filter(service =>\n        service.name.toLowerCase().includes(term) ||\n        service.description.toLowerCase().includes(term)\n      );\n    }\n\n    // Apply sorting\n    result.sort((a, b) => {\n      switch (sortBy) {\n        case 'name':\n          return a.name.localeCompare(b.name);\n        case 'price-low':\n          return a.price - b.price;\n        case 'price-high':\n          return b.price - a.price;\n        default:\n          return 0;\n      }\n    });\n\n    setFilteredServices(result);\n  };\n\n  const handleDelete = async (id) => {\n    if (window.confirm('Are you sure you want to delete this service? This action cannot be undone.')) {\n      try {\n        setDeleteLoading(id);\n        await deleteDoc(doc(db, 'services', id));\n\n        // Also delete associated form if it exists\n        try {\n          await deleteDoc(doc(db, 'forms', id));\n        } catch (err) {\n          console.log('No form found for this service');\n        }\n\n        setServices(services.filter(service => service.id !== id));\n        setSuccess('Service deleted successfully');\n        setTimeout(() => setSuccess(''), 3000);\n      } catch (error) {\n        console.error(\"Error deleting service: \", error);\n        setError('Failed to delete service. Please try again.');\n      } finally {\n        setDeleteLoading(null);\n      }\n    }\n  };\n\n  const handleEdit = (id) => {\n    navigate(`/admin/edit-service/${id}`);\n  };\n\n  const handleViewDetails = (id) => {\n    navigate(`/admin/service-details/${id}`);\n  };\n\n  if (loading && services.length === 0) {\n    return (\n      <AdminLayout title=\"Manage Services\" activeNav=\"services\">\n        <div className=\"flex justify-center items-center h-64\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\n        </div>\n      </AdminLayout>\n    );\n  }\n\n  return (\n    <AdminLayout title=\"Manage Services\" activeNav=\"services\">\n      {error && (\n        <div className=\"bg-red-50 border-l-4 border-red-500 p-4 mb-6 rounded flex justify-between items-center\">\n          <p className=\"text-red-700\">{error}</p>\n          <button onClick={() => setError('')} className=\"text-red-600\">\n            <FiXCircle size={20} />\n          </button>\n        </div>\n      )}\n\n      {success && (\n        <div className=\"bg-green-50 border-l-4 border-green-500 p-4 mb-6 rounded flex justify-between items-center\">\n          <p className=\"text-green-700\">{success}</p>\n          <button onClick={() => setSuccess('')} className=\"text-green-600\">\n            <FiXCircle size={20} />\n          </button>\n        </div>\n      )}\n\n      {/* Header with Add Button and Filters */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6\">\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-4 sm:mb-0\">All Services</h2>\n        <Link\n          to=\"/admin/add-service\"\n          className=\"px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 flex items-center\"\n        >\n          <FiPlus className=\"mr-2\" />\n          Add New Service\n        </Link>\n      </div>\n\n      {/* Filters and Search */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-4 mb-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div className=\"relative\">\n            <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n              <FiSearch className=\"text-gray-400\" />\n            </div>\n            <input\n              type=\"text\"\n              placeholder=\"Search services...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"pl-10 pr-4 py-2 w-full border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n            />\n          </div>\n\n          <div>\n            <select\n              value={sortBy}\n              onChange={(e) => setSortBy(e.target.value)}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n            >\n              <option value=\"name\">Sort by Name</option>\n              <option value=\"price-low\">Price: Low to High</option>\n              <option value=\"price-high\">Price: High to Low</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Services Count and Refresh Button */}\n      <div className=\"flex justify-between items-center mb-4\">\n        <p className=\"text-sm text-gray-600\">\n          Showing {filteredServices.length} of {services.length} services\n        </p>\n        <button\n          onClick={fetchServices}\n          className=\"flex items-center text-indigo-600 hover:text-indigo-800 text-sm\"\n        >\n          <FiRefreshCw className=\"mr-1\" /> Refresh\n        </button>\n      </div>\n\n      {/* Services Table */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\">\n        {filteredServices.length > 0 ? (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Service\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Price\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Processing Time\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Actions\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {filteredServices.map((service) => (\n                  <tr key={service.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4\">\n                      <div className=\"flex items-center\">\n                        <div className=\"flex-shrink-0 h-10 w-10 bg-indigo-100 rounded-lg flex items-center justify-center text-indigo-700\">\n                          <FiSettings size={18} />\n                        </div>\n                        <div className=\"ml-4\">\n                          <div\n                            className=\"text-sm font-medium text-gray-900 hover:text-indigo-700 cursor-pointer\"\n                            onClick={() => handleViewDetails(service.id)}\n                          >\n                            {service.name}\n                          </div>\n                          <div className=\"text-sm text-gray-500\">\n                            {service.description.substring(0, 60)}...\n                          </div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        <FiDollarSign className=\"text-gray-500 mr-1\" size={16} />\n                        <span className=\"text-sm text-gray-900\">₹{service.price}</span>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      {service.processingTime}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                      <div className=\"flex space-x-3\">\n                        <button\n                          onClick={() => handleViewDetails(service.id)}\n                          className=\"text-blue-600 hover:text-blue-900 flex items-center\"\n                          title=\"View Details\"\n                        >\n                          <FiEye className=\"mr-1\" size={16} />\n                        </button>\n                        <button\n                          onClick={() => handleEdit(service.id)}\n                          className=\"text-indigo-600 hover:text-indigo-900 flex items-center\"\n                          title=\"Edit\"\n                        >\n                          <FiEdit2 className=\"mr-1\" size={16} />\n                        </button>\n                        <button\n                          onClick={() => handleDelete(service.id)}\n                          disabled={deleteLoading === service.id}\n                          className=\"text-red-600 hover:text-red-900 flex items-center disabled:opacity-50\"\n                          title=\"Delete\"\n                        >\n                          {deleteLoading === service.id ? (\n                            <div className=\"animate-spin rounded-full h-4 w-4 border-t-2 border-b-2 border-red-600\"></div>\n                          ) : (\n                            <FiTrash2 className=\"mr-1\" size={16} />\n                          )}\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <div className=\"text-center py-12\">\n            <FiSettings className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No services found</h3>\n            <p className=\"text-gray-500\">\n              {searchTerm\n                ? 'Try adjusting your search criteria'\n                : 'Get started by adding your first service'}\n            </p>\n            {!searchTerm && (\n              <Link\n                to=\"/admin/add-service\"\n                className=\"mt-4 inline-flex items-center px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700\"\n              >\n                <FiPlus className=\"mr-2\" />\n                Add New Service\n              </Link>\n            )}\n          </div>\n        )}\n      </div>\n    </AdminLayout>\n  );\n}\n\n// Service Form Component (Add/Edit) - Enhanced\nfunction ServiceForm() {\n  const { id } = useParams();\n  const [isEditMode, setIsEditMode] = useState(!!id);\n  const [activeTab, setActiveTab] = useState('service-details');\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState('');\n  const [documentsRequired, setDocumentsRequired] = useState('');\n  const [processingTime, setProcessingTime] = useState('');\n  const [keyBenefits, setKeyBenefits] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [services, setServices] = useState([]);\n  const [selectedService, setSelectedService] = useState(id || '');\n\n  // Form builder states\n  const [formTitle, setFormTitle] = useState('');\n  const [formDescription, setFormDescription] = useState('');\n  const [formFields, setFormFields] = useState([]);\n  const [currentField, setCurrentField] = useState(null);\n  const [showFieldConfig, setShowFieldConfig] = useState(false);\n  const [fieldLabel, setFieldLabel] = useState('');\n  const [fieldType, setFieldType] = useState('text');\n  const [fieldRequired, setFieldRequired] = useState(false);\n  const [fieldOptions, setFieldOptions] = useState(['Option 1', 'Option 2']);\n  const [fieldPlaceholder, setFieldPlaceholder] = useState('');\n  const [existingForm, setExistingForm] = useState(null);\n\n  const navigate = useNavigate();\n\n  // Fetch services and check for existing form on component mount\n  useEffect(() => {\n    fetchServices();\n\n    // If in edit mode, load the service data\n    if (isEditMode) {\n      loadServiceData(id);\n      setSelectedService(id);\n    }\n  }, [id, isEditMode]);\n\n  // Load existing form when service is selected\n  useEffect(() => {\n    if (selectedService) {\n      loadExistingForm(selectedService);\n    } else {\n      setFormFields([]);\n      setFormTitle('');\n      setFormDescription('');\n      setExistingForm(null);\n    }\n  }, [selectedService]);\n\n  // Set form title to service name when name changes\n  useEffect(() => {\n    if (name && activeTab === 'form-builder') {\n      setFormTitle(name);\n    }\n  }, [name, activeTab]);\n\n  const fetchServices = async () => {\n    try {\n      const querySnapshot = await getDocs(collection(db, 'services'));\n      const servicesList = [];\n\n      querySnapshot.forEach((doc) => {\n        const service = { id: doc.id, ...doc.data() };\n        servicesList.push(service);\n      });\n\n      setServices(servicesList);\n    } catch (err) {\n      console.error('Error fetching services:', err);\n      setError('Failed to load services: ' + err.message);\n    }\n  };\n\n  const loadServiceData = async (serviceId) => {\n    try {\n      setLoading(true);\n      const serviceDoc = await getDoc(doc(db, 'services', serviceId));\n      if (serviceDoc.exists()) {\n        const serviceData = serviceDoc.data();\n        setName(serviceData.name || '');\n        setDescription(serviceData.description || '');\n        setPrice(serviceData.price || '');\n        setDocumentsRequired(serviceData.documentsRequired?.join(', ') || '');\n        setProcessingTime(serviceData.processingTime || '');\n        setKeyBenefits(serviceData.keyBenefits?.join(', ') || '');\n      } else {\n        setError('Service not found');\n        navigate('/admin/services');\n      }\n    } catch (err) {\n      console.error('Error loading service:', err);\n      setError('Failed to load service: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadExistingForm = async (serviceId) => {\n    try {\n      const formDoc = await getDoc(doc(db, 'forms', serviceId));\n      if (formDoc.exists()) {\n        const formData = formDoc.data();\n        setFormTitle(formData.title || '');\n        setFormDescription(formData.description || '');\n        setFormFields(formData.fields || []);\n        setExistingForm(formData);\n      } else {\n        setFormTitle(name || '');\n        setFormDescription('');\n        setFormFields([]);\n        setExistingForm(null);\n      }\n    } catch (err) {\n      console.error('Error loading form:', err);\n      setError('Failed to load form: ' + err.message);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!name || !description || !price || !documentsRequired || !processingTime || !keyBenefits) {\n      return setError('Please fill all required fields');\n    }\n\n    try {\n      setLoading(true);\n      setError('');\n\n      const serviceData = {\n        name,\n        description,\n        price: Number(price),\n        documentsRequired: documentsRequired.split(',').map(doc => doc.trim()).filter(doc => doc),\n        processingTime,\n        keyBenefits: keyBenefits.split(',').map(benefit => benefit.trim()).filter(benefit => benefit),\n        updatedAt: new Date()\n      };\n\n      if (isEditMode) {\n        // Update existing service\n        await updateDoc(doc(db, 'services', id), serviceData);\n        setSuccess('Service updated successfully!');\n      } else {\n        // Add new service\n        serviceData.createdAt = new Date();\n        const docRef = await addDoc(collection(db, 'services'), serviceData);\n        setSuccess('Service added successfully!');\n        setSelectedService(docRef.id);\n        setActiveTab('form-builder');\n      }\n\n      fetchServices(); // Refresh services list\n    } catch (err) {\n      setError(`Failed to ${isEditMode ? 'update' : 'add'} service: ` + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Form Builder Functions\n  const handleAddField = (type) => {\n    const newField = {\n      id: `field-${Date.now()}`,\n      type,\n      label: type.charAt(0).toUpperCase() + type.slice(1),\n      required: false,\n      placeholder: '',\n    };\n\n    // Only add options for field types that need them\n    if (type === 'select' || type === 'radio' || type === 'checkbox') {\n      newField.options = ['Option 1', 'Option 2'];\n    }\n\n    setFormFields([...formFields, newField]);\n    setCurrentField(newField);\n    setFieldLabel(newField.label);\n    setFieldType(type);\n    setFieldRequired(false);\n    setFieldOptions(type === 'select' || type === 'radio' || type === 'checkbox'\n      ? ['Option 1', 'Option 2']\n      : []);\n    setFieldPlaceholder('');\n    setShowFieldConfig(true);\n  };\n\n  const handleEditField = (field) => {\n    setCurrentField(field);\n    setFieldLabel(field.label);\n    setFieldType(field.type);\n    setFieldRequired(field.required || false);\n    setFieldOptions(field.options || []);\n    setFieldPlaceholder(field.placeholder || '');\n    setShowFieldConfig(true);\n  };\n\n  const handleSaveField = () => {\n    if (!fieldLabel) {\n      setError('Field label is required');\n      return;\n    }\n\n    const updatedField = {\n      ...currentField,\n      label: fieldLabel,\n      type: fieldType,\n      required: fieldRequired,\n      placeholder: fieldPlaceholder,\n    };\n\n    // Only include options for field types that need them\n    if (['select', 'radio', 'checkbox'].includes(fieldType)) {\n      updatedField.options = fieldOptions;\n    } else {\n      // Remove options property for field types that don't need them\n      delete updatedField.options;\n    }\n\n    if (currentField.id) {\n      // Update existing field\n      setFormFields(formFields.map(field =>\n        field.id === currentField.id ? updatedField : field\n      ));\n    } else {\n      // Add new field\n      setFormFields([...formFields, { ...updatedField, id: `field-${Date.now()}` }]);\n    }\n\n    setShowFieldConfig(false);\n    setCurrentField(null);\n  };\n\n  const handleDeleteField = (id) => {\n    setFormFields(formFields.filter(field => field.id !== id));\n    if (currentField && currentField.id === id) {\n      setShowFieldConfig(false);\n      setCurrentField(null);\n    }\n  };\n\n  const handleDragEnd = (result) => {\n    if (!result.destination) return;\n\n    const items = Array.from(formFields);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    setFormFields(items);\n  };\n\n  const handleAddOption = () => {\n    setFieldOptions([...fieldOptions, `Option ${fieldOptions.length + 1}`]);\n  };\n\n  const handleRemoveOption = (index) => {\n    const newOptions = [...fieldOptions];\n    newOptions.splice(index, 1);\n    setFieldOptions(newOptions);\n  };\n\n  const handleSaveForm = async () => {\n    if (!selectedService) {\n      setError('Please select a service first');\n      return;\n    }\n\n    if (formFields.length === 0) {\n      setError('Please add at least one form field');\n      return;\n    }\n\n    if (!formTitle) {\n      setError('Please enter a form title');\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      // Clean up the form data before saving\n      const formData = {\n        serviceId: selectedService,\n        name: formTitle,\n        description: formDescription,\n        fields: formFields.map(field => {\n          // Create a clean copy of the field without any undefined properties\n          const cleanField = {\n            id: field.id,\n            type: field.type,\n            label: field.label,\n            required: field.required || false,\n            placeholder: field.placeholder || '',\n          };\n\n          // Only include options for field types that need them\n          if (['select', 'radio', 'checkbox'].includes(field.type) && field.options) {\n            cleanField.options = field.options;\n          }\n\n          return cleanField;\n        }),\n        createdAt: existingForm?.createdAt || new Date(),\n        updatedAt: new Date()\n      };\n\n      await setDoc(doc(db, 'forms', selectedService), formData);\n\n      setSuccess('Form template saved successfully!');\n      setExistingForm(formData);\n\n      // If we just created a new service and form, redirect to services list\n      if (!isEditMode) {\n        setTimeout(() => {\n          navigate('/admin/services');\n        }, 2000);\n      }\n    } catch (err) {\n      setError('Failed to save form template: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const renderFieldPreview = (field) => {\n    const commonProps = {\n      className: \"w-full px-3 py-2 border border-gray-300 rounded-md\",\n      placeholder: field.placeholder || `Enter ${field.label.toLowerCase()}`,\n      disabled: true\n    };\n\n    switch (field.type) {\n      case 'text':\n      case 'email':\n        return <input type={field.type} {...commonProps} />;\n\n      case 'textarea':\n        return <textarea rows=\"3\" {...commonProps} />;\n\n      case 'select':\n        return (\n          <select {...commonProps}>\n            <option value=\"\">Select an option</option>\n            {field.options && field.options.map((option, index) => (\n              <option key={index} value={option}>{option}</option>\n            ))}\n          </select>\n        );\n\n      case 'radio':\n        return (\n          <div className=\"space-y-2\">\n            {field.options && field.options.map((option, index) => (\n              <label key={index} className=\"flex items-center\">\n                <input type=\"radio\" name={`radio-${field.id}`} className=\"mr-2\" disabled />\n                {option}\n              </label>\n            ))}\n          </div>\n        );\n\n      case 'checkbox':\n        return (\n          <div className=\"space-y-2\">\n            {field.options && field.options.map((option, index) => (\n              <label key={index} className=\"flex items-center\">\n                <input type=\"checkbox\" className=\"mr-2\" disabled />\n                {option}\n              </label>\n            ))}\n          </div>\n        );\n\n      case 'date':\n        return <input type=\"date\" {...commonProps} />;\n\n      case 'file':\n        return (\n          <div className=\"border border-dashed border-gray-300 rounded-md p-4 text-center\">\n            <FiUpload className=\"mx-auto text-gray-400 mb-2\" />\n            <p className=\"text-sm text-gray-500\">Click to upload or drag and drop</p>\n          </div>\n        );\n\n      default:\n        return <input type=\"text\" {...commonProps} />;\n    }\n  };\n\n  const getFieldIcon = (type) => {\n    switch (type) {\n      case 'text': return <FiType size={16} />;\n      case 'email': return <FiMail size={16} />;\n      case 'textarea': return <FiEdit2 size={16} />;\n      case 'select': return <FiList size={16} />;\n      case 'radio': return <FiRadio size={16} />;\n      case 'checkbox': return <FiCheckSquare size={16} />;\n      case 'date': return <FiCalendar size={16} />;\n      case 'file': return <FiUpload size={16} />;\n      default: return <FiType size={16} />;\n    }\n  };\n\n  return (\n    <AdminLayout\n      title={isEditMode ? 'Edit Service' : 'Add New Service'}\n      activeNav=\"add-service\"\n    >\n      {/* Tabs */}\n      <div className=\"max-w-7xl mx-auto mb-6\">\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"-mb-px flex space-x-8\">\n            <button\n              onClick={() => setActiveTab('service-details')}\n              className={`py-4 px-1 border-b-2 font-medium text-sm ${activeTab === 'service-details'\n                  ? 'border-indigo-500 text-indigo-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n            >\n              Service Details\n            </button>\n            <button\n              onClick={() => setActiveTab('form-builder')}\n              className={`py-4 px-1 border-b-2 font-medium text-sm ${activeTab === 'form-builder'\n                  ? 'border-indigo-500 text-indigo-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n            >\n              Form Builder\n            </button>\n          </nav>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"max-w-7xl mx-auto bg-red-50 border-l-4 border-red-500 p-4 mb-6 rounded flex justify-between items-center\">\n          <p className=\"text-red-700\">{error}</p>\n          <button onClick={() => setError('')} className=\"text-red-600\">\n            <FiXCircle size={20} />\n          </button>\n        </div>\n      )}\n\n      {success && (\n        <div className=\"max-w-7xl mx-auto bg-green-50 border-l-4 border-green-500 p-4 mb-6 rounded flex justify-between items-center\">\n          <p className=\"text-green-700\">{success}</p>\n          <button onClick={() => setSuccess('')} className=\"text-green-600\">\n            <FiXCircle size={20} />\n          </button>\n        </div>\n      )}\n\n      {activeTab === 'service-details' && (\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\">\n            <div className=\"p-6 border-b border-gray-200\">\n              <h2 className=\"text-lg font-semibold text-gray-800\">Service Details</h2>\n              <p className=\"text-sm text-gray-600\">\n                {isEditMode ? 'Edit the service details' : 'Add a new service to your catalog'}\n              </p>\n            </div>\n            <div className=\"p-6\">\n              <form onSubmit={handleSubmit} className=\"space-y-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Service Name *</label>\n                  <input\n                    type=\"text\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n                    placeholder=\"e.g. Passport Application\"\n                    required\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Description *</label>\n                  <textarea\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                    className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 h-32\"\n                    placeholder=\"Detailed service description...\"\n                    required\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Price (₹) *</label>\n                    <input\n                      type=\"number\"\n                      value={price}\n                      onChange={(e) => setPrice(e.target.value)}\n                      className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n                      placeholder=\"0.00\"\n                      min=\"0\"\n                      step=\"0.01\"\n                      required\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Processing Time *</label>\n                    <input\n                      type=\"text\"\n                      value={processingTime}\n                      onChange={(e) => setProcessingTime(e.target.value)}\n                      className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n                      placeholder=\"e.g. 7-10 business days\"\n                      required\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Documents Required (comma separated) *</label>\n                  <textarea\n                    value={documentsRequired}\n                    onChange={(e) => setDocumentsRequired(e.target.value)}\n                    className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 h-20\"\n                    placeholder=\"e.g. Aadhar Card, PAN Card, Photo\"\n                    required\n                  />\n                  <p className=\"text-xs text-gray-500 mt-1\">Separate multiple documents with commas</p>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Key Benefits (comma separated) *</label>\n                  <textarea\n                    value={keyBenefits}\n                    onChange={(e) => setKeyBenefits(e.target.value)}\n                    className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 h-20\"\n                    placeholder=\"e.g. Fast processing, Expert assistance, Online tracking\"\n                    required\n                  />\n                  <p className=\"text-xs text-gray-500 mt-1\">Separate multiple benefits with commas</p>\n                </div>\n\n                <div className=\"flex justify-end space-x-3 pt-4 border-t border-gray-200 mt-6\">\n                  <button\n                    type=\"button\"\n                    onClick={() => navigate('/admin/services')}\n                    className=\"flex items-center px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50\"\n                    disabled={loading}\n                  >\n                    <FiArrowLeft className=\"mr-2\" />\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    disabled={loading}\n                    className=\"px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 disabled:opacity-50 flex items-center\"\n                  >\n                    {loading ? (\n                      <>\n                        <div className=\"animate-spin rounded-full h-4 w-4 border-t-2 border-b-2 border-white mr-2\"></div>\n                        {isEditMode ? 'Updating...' : 'Adding...'}\n                      </>\n                    ) : (\n                      <>\n                        <FiSave className=\"mr-2\" />\n                        {isEditMode ? 'Update Service' : 'Add Service'}\n                      </>\n                    )}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {activeTab === 'form-builder' && (\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"flex justify-between items-center mb-6\">\n            <h2 className=\"text-xl font-bold text-gray-800\">Form Builder</h2>\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setActiveTab('service-details')}\n                className=\"inline-flex justify-center py-2 px-4 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                Back to Service\n              </button>\n              <button\n                onClick={handleSaveForm}\n                disabled={!formTitle || formFields.length === 0 || loading || !selectedService}\n                className={`inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 ${!formTitle || formFields.length === 0 || loading || !selectedService\n                    ? 'bg-indigo-300 cursor-not-allowed'\n                    : 'bg-indigo-600 hover:bg-indigo-700'\n                  }`}\n              >\n                {loading ? (\n                  <>\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-t-2 border-b-2 border-white mr-2\"></div>\n                    Saving...\n                  </>\n                ) : (\n                  <>\n                    <FiSave className=\"mr-2\" />\n                    {existingForm ? 'Update Form' : 'Save Form'}\n                  </>\n                )}\n              </button>\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n            <div className=\"p-6 border-b border-gray-200\">\n              <div className=\"flex flex-col space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Form Title *</label>\n                  <input\n                    type=\"text\"\n                    value={formTitle}\n                    onChange={(e) => setFormTitle(e.target.value)}\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                    placeholder=\"Enter form title\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Description</label>\n                  <textarea\n                    value={formDescription}\n                    onChange={(e) => setFormDescription(e.target.value)}\n                    rows=\"2\"\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                    placeholder=\"Enter form description\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Select Service *</label>\n                  <select\n                    value={selectedService}\n                    onChange={(e) => setSelectedService(e.target.value)}\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                    required\n                    disabled={isEditMode} // Disable if in edit mode\n                  >\n                    <option value=\"\">Select a service</option>\n                    {services.map(service => (\n                      <option key={service.id} value={service.id}>{service.name}</option>\n                    ))}\n                  </select>\n                  {selectedService && existingForm && (\n                    <p className=\"mt-1 text-sm text-green-600\">\n                      This service already has a form. Editing will update the existing form.\n                    </p>\n                  )}\n                  {isEditMode && (\n                    <p className=\"mt-1 text-sm text-gray-500\">\n                      You cannot change the service while editing.\n                    </p>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex flex-col lg:flex-row\">\n              {/* Form Fields Panel */}\n              <div className=\"w-full lg:w-1/4 p-4 border-b lg:border-b-0 lg:border-r border-gray-200 bg-gray-50\">\n                <h3 className=\"text-sm font-medium text-gray-700 mb-3\">Form Elements</h3>\n                <div className=\"grid grid-cols-2 lg:grid-cols-1 gap-2\">\n                  <FieldTypeButton\n                    icon={<FiType />}\n                    label=\"Text\"\n                    onClick={() => handleAddField('text')}\n                  />\n                  <FieldTypeButton\n                    icon={<FiMail />}\n                    label=\"Email\"\n                    onClick={() => handleAddField('email')}\n                  />\n                  <FieldTypeButton\n                    icon={<FiEdit2 />}\n                    label=\"Textarea\"\n                    onClick={() => handleAddField('textarea')}\n                  />\n                  <FieldTypeButton\n                    icon={<FiList />}\n                    label=\"Dropdown\"\n                    onClick={() => handleAddField('select')}\n                  />\n                  <FieldTypeButton\n                    icon={<FiRadio />}\n                    label=\"Radio\"\n                    onClick={() => handleAddField('radio')}\n                  />\n                  <FieldTypeButton\n                    icon={<FiCheckSquare />}\n                    label=\"Checkbox\"\n                    onClick={() => handleAddField('checkbox')}\n                  />\n                  <FieldTypeButton\n                    icon={<FiCalendar />}\n                    label=\"Date\"\n                    onClick={() => handleAddField('date')}\n                  />\n                  <FieldTypeButton\n                    icon={<FiUpload />}\n                    label=\"File Upload\"\n                    onClick={() => handleAddField('file')}\n                  />\n                </div>\n              </div>\n\n              {/* Form Preview */}\n              <div className=\"w-full lg:w-2/4 p-6 border-b lg:border-b-0 border-gray-200\">\n                <h3 className=\"text-sm font-medium text-gray-700 mb-3\">Form Preview</h3>\n                {formFields.length === 0 ? (\n                  <div className=\"text-center py-12 bg-gray-50 rounded-lg border-2 border-dashed border-gray-300\">\n                    <FiFileText className=\"mx-auto h-12 w-12 text-gray-400\" />\n                    <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No fields added</h3>\n                    <p className=\"mt-1 text-xs text-gray-500\">Add form elements from the left panel</p>\n                  </div>\n                ) : (\n                  <DragDropContext onDragEnd={handleDragEnd}>\n                    <Droppable droppableId=\"formFields\">\n                      {(provided) => (\n                        <div\n                          {...provided.droppableProps}\n                          ref={provided.innerRef}\n                          className=\"space-y-4\"\n                        >\n                          {formFields.map((field, index) => (\n                            <Draggable key={field.id} draggableId={field.id} index={index}>\n                              {(provided) => (\n                                <div\n                                  ref={provided.innerRef}\n                                  {...provided.draggableProps}\n                                  className={`relative group border ${currentField?.id === field.id ? 'border-indigo-300 bg-indigo-50' : 'border-transparent hover:border-gray-200'} rounded-md p-4 bg-white`}\n                                >\n                                  <div\n                                    {...provided.dragHandleProps}\n                                    className=\"absolute top-2 left-2 opacity-0 group-hover:opacity-100 cursor-move\"\n                                  >\n                                    <div className=\"w-4 h-4 bg-gray-200 rounded\"></div>\n                                  </div>\n                                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    {field.label}\n                                    {field.required && <span className=\"text-red-500 ml-1\">*</span>}\n                                  </label>\n                                  {renderFieldPreview(field)}\n                                  <div className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 flex space-x-1\">\n                                    <button\n                                      onClick={() => handleEditField(field)}\n                                      className=\"p-1 bg-white rounded-md shadow-sm text-gray-600 hover:text-indigo-600\"\n                                      title=\"Edit\"\n                                    >\n                                      <FiEdit2 size={14} />\n                                    </button>\n                                    <button\n                                      onClick={() => handleDeleteField(field.id)}\n                                      className=\"p-1 bg-white rounded-md shadow-sm text-gray-600 hover:text-red-600\"\n                                      title=\"Delete\"\n                                    >\n                                      <FiTrash2 size={14} />\n                                    </button>\n                                  </div>\n                                </div>\n                              )}\n                            </Draggable>\n                          ))}\n                          {provided.placeholder}\n                        </div>\n                      )}\n                    </Droppable>\n                  </DragDropContext>\n                )}\n              </div>\n\n              {/* Field Configuration */}\n              <div className=\"w-full lg:w-1/4 p-4 bg-gray-50\">\n                {showFieldConfig && currentField ? (\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-700 mb-3\">Field Settings</h3>\n                    <div className=\"space-y-4\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700\">Label *</label>\n                        <input\n                          type=\"text\"\n                          value={fieldLabel}\n                          onChange={(e) => setFieldLabel(e.target.value)}\n                          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                        />\n                      </div>\n\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700\">Type</label>\n                        <select\n                          value={fieldType}\n                          onChange={(e) => setFieldType(e.target.value)}\n                          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                        >\n                          <option value=\"text\">Text</option>\n                          <option value=\"email\">Email</option>\n                          <option value=\"textarea\">Textarea</option>\n                          <option value=\"select\">Dropdown</option>\n                          <option value=\"radio\">Radio</option>\n                          <option value=\"checkbox\">Checkbox</option>\n                          <option value=\"date\">Date</option>\n                          <option value=\"file\">File Upload</option>\n                        </select>\n                      </div>\n\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700\">Placeholder</label>\n                        <input\n                          type=\"text\"\n                          value={fieldPlaceholder}\n                          onChange={(e) => setFieldPlaceholder(e.target.value)}\n                          className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                          placeholder=\"Enter placeholder text\"\n                        />\n                      </div>\n\n                      <div className=\"flex items-center\">\n                        <input\n                          type=\"checkbox\"\n                          checked={fieldRequired}\n                          onChange={(e) => setFieldRequired(e.target.checked)}\n                          className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n                        />\n                        <label className=\"ml-2 block text-sm text-gray-700\">Required Field</label>\n                      </div>\n\n                      {(fieldType === 'select' || fieldType === 'radio' || fieldType === 'checkbox') && (\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700\">Options</label>\n                          <div className=\"mt-1 space-y-2\">\n                            {fieldOptions.map((option, index) => (\n                              <div key={index} className=\"flex items-center\">\n                                <input\n                                  type=\"text\"\n                                  value={option}\n                                  onChange={(e) => {\n                                    const newOptions = [...fieldOptions];\n                                    newOptions[index] = e.target.value;\n                                    setFieldOptions(newOptions);\n                                  }}\n                                  className=\"flex-1 block border border-gray-300 rounded-md shadow-sm py-1 px-2 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                                />\n                                {fieldOptions.length > 1 && (\n                                  <button\n                                    onClick={() => handleRemoveOption(index)}\n                                    className=\"ml-2 text-red-600 hover:text-red-800\"\n                                    title=\"Remove option\"\n                                  >\n                                    <FiTrash2 size={14} />\n                                  </button>\n                                )}\n                              </div>\n                            ))}\n                          </div>\n                          <button\n                            onClick={handleAddOption}\n                            className=\"mt-2 inline-flex items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                          >\n                            <FiPlus size={12} className=\"mr-1\" /> Add Option\n                          </button>\n                        </div>\n                      )}\n\n                      <div className=\"pt-2\">\n                        <button\n                          onClick={handleSaveField}\n                          className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                        >\n                          Save Changes\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"text-center py-12\">\n                    <FiSettings className=\"mx-auto h-12 w-12 text-gray-400\" />\n                    <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No field selected</h3>\n                    <p className=\"mt-1 text-xs text-gray-500\">Select a field to configure its properties</p>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </AdminLayout>\n  );\n}\n\n// Shared Admin Layout Component\nfunction AdminLayout({\n  children,\n  title,\n  activeNav = \"dashboard\"\n}) {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n  const [showNotifications, setShowNotifications] = useState(false);\n  const [showProfileMenu, setShowProfileMenu] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const navigate = useNavigate();\n\n  const handleLogout = async () => {\n    try {\n      const auth = getAuth();\n      await signOut(auth);\n      // Redirect to admin login page after logout\n      navigate('/admin/login');\n    } catch (error) {\n      console.error('Error signing out:', error);\n    }\n  };\n\n  // Fetch notifications\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        const notificationsQuery = query(\n          collection(db, 'notifications'),\n          orderBy('createdAt', 'desc'),\n          limit(10)\n        );\n        const snapshot = await getDocs(notificationsQuery);\n        const notificationsData = [];\n        let unread = 0;\n\n        snapshot.forEach((doc) => {\n          const notification = { id: doc.id, ...doc.data() };\n          notificationsData.push(notification);\n          if (!notification.read) unread++;\n        });\n\n        setNotifications(notificationsData);\n        setUnreadCount(unread);\n      } catch (error) {\n        console.error('Error fetching notifications:', error);\n      }\n    };\n\n    fetchNotifications();\n  }, []);\n\n  // Lock body scroll when mobile sidebar is open\n  useEffect(() => {\n    if (mobileMenuOpen) {\n      const originalStyle = document.body.style.overflow;\n      document.body.style.overflow = 'hidden';\n      return () => {\n        document.body.style.overflow = originalStyle;\n      };\n    }\n  }, [mobileMenuOpen]);\n\n  const markNotificationAsRead = async (notificationId) => {\n    try {\n      await updateDoc(doc(db, 'notifications', notificationId), {\n        read: true\n      });\n\n      setNotifications(notifications.map(notification =>\n        notification.id === notificationId\n          ? { ...notification, read: true }\n          : notification\n      ));\n\n      setUnreadCount(prev => Math.max(0, prev - 1));\n    } catch (error) {\n      console.error('Error marking notification as read:', error);\n    }\n  };\n\n  const formatNotificationTime = (timestamp) => {\n    if (!timestamp) return 'Just now';\n    \n    const now = new Date();\n    const notificationTime = timestamp.toDate ? timestamp.toDate() : new Date(timestamp);\n    const diffInMinutes = Math.floor((now - notificationTime) / (1000 * 60));\n    \n    if (diffInMinutes < 1) return 'Just now';\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\n    return `${Math.floor(diffInMinutes / 1440)}d ago`;\n  };\n\n  return (\n    <div className=\"flex h-screen bg-gray-50\">\n      {/* Enhanced Sidebar Component */}\n      <Sidebar\n        collapsed={sidebarCollapsed}\n        onToggle={() => setSidebarCollapsed(!sidebarCollapsed)}\n        mobileMenuOpen={mobileMenuOpen}\n        onMobileToggle={() => setMobileMenuOpen((prev) => !prev)}\n      />\n\n      {/* Main content */}\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        {/* Top bar */}\n        <header className=\"bg-white shadow-sm border-b border-gray-200 px-6 py-4 sticky top-0 z-20\">\n          <div className=\"flex items-center justify-between\">\n            <button\n              onClick={() => setMobileMenuOpen(true)}\n              className=\"p-2 rounded-lg hover:bg-gray-100 md:hidden\"\n              aria-label=\"Open sidebar menu\"\n              aria-controls=\"admin-sidebar\"\n              aria-expanded={mobileMenuOpen}\n            >\n              <FiMenu size={20} />\n            </button>\n            <h1 className=\"text-2xl font-bold text-gray-900 capitalize\">\n              {activeNav.replace('-', ' ')}\n            </h1>\n            <div className=\"flex items-center space-x-4\">\n              <span className=\"text-sm text-gray-600\">Admin Panel</span>\n\n              {/* Notifications Button */}\n              <div className=\"relative\">\n                <button\n                  onClick={() => setShowNotifications(!showNotifications)}\n                  className=\"relative p-2 rounded-lg hover:bg-gray-100\"\n                >\n                  <FiBell size={20} />\n                  {unreadCount > 0 && (\n                    <span className=\"absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\">\n                      {unreadCount}\n                    </span>\n                  )}\n                </button>\n\n                {/* Notifications Dropdown */}\n                {showNotifications && (\n                  <div className=\"absolute right-0 mt-2 w-80 bg-white rounded-lg shadow-lg border border-gray-200 z-50\">\n                    <div className=\"p-4 border-b border-gray-200\">\n                      <div className=\"flex justify-between items-center\">\n                        <h3 className=\"text-lg font-semibold text-gray-800\">Notifications</h3>\n                        <span className=\"text-sm text-gray-500\">{unreadCount} unread</span>\n                      </div>\n                    </div>\n                    <div className=\"max-h-96 overflow-y-auto\">\n                      {notifications.length > 0 ? (\n                        notifications.map((notification) => (\n                          <div\n                            key={notification.id}\n                            className={`p-4 border-b border-gray-100 hover:bg-gray-50 cursor-pointer ${!notification.read ? 'bg-blue-50' : ''\n                              }`}\n                            onClick={() => markNotificationAsRead(notification.id)}\n                          >\n                            <div className=\"flex justify-between items-start\">\n                              <div className=\"flex-1\">\n                                <p className=\"text-sm font-medium text-gray-800\">\n                                  {notification.title}\n                                </p>\n                                <p className=\"text-sm text-gray-600 mt-1\">\n                                  {notification.message}\n                                </p>\n                              </div>\n                              {!notification.read && (\n                                <div className=\"w-2 h-2 bg-blue-500 rounded-full ml-2 mt-1\"></div>\n                              )}\n                            </div>\n                            <p className=\"text-xs text-gray-500 mt-2\">\n                              {formatNotificationTime(notification.createdAt)}\n                            </p>\n                          </div>\n                        ))\n                      ) : (\n                        <div className=\"p-8 text-center text-gray-500\">\n                          <FiBell className=\"mx-auto h-8 w-8 mb-2\" />\n                          <p>No notifications yet</p>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              {/* Profile Menu */}\n              <div className=\"relative\">\n                <button\n                  onClick={() => setShowProfileMenu(!showProfileMenu)}\n                  className=\"flex items-center space-x-2 p-2 rounded-lg hover:bg-gray-100\"\n                >\n                  <div className=\"w-8 h-8 rounded-full bg-indigo-100 flex items-center justify-center text-indigo-700\">\n                    <FiUser size={18} />\n                  </div>\n                  <span className=\"hidden md:inline text-sm font-medium\">Admin</span>\n                  <FiChevronDown size={16} className=\"text-gray-500\" />\n                </button>\n\n                {/* Profile Dropdown */}\n                {showProfileMenu && (\n                  <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg border border-gray-200 z-50\">\n                    <div className=\"p-2\">\n                      <div className=\"px-3 py-2 border-b border-gray-100\">\n                        <p className=\"text-sm font-medium text-gray-800\">Admin User</p>\n                        <p className=\"text-xs text-gray-500\">admin@example.com</p>\n                      </div>\n                      <button\n                        onClick={() => {\n                          setShowProfileMenu(false);\n                          // Add profile settings navigation here\n                        }}\n                        className=\"w-full text-left px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 rounded-md flex items-center\"\n                      >\n                        <FiUser className=\"mr-2\" size={16} />\n                        Profile Settings\n                      </button>\n                      <button\n                        onClick={() => {\n                          setShowProfileMenu(false);\n                          // Add preferences navigation here\n                        }}\n                        className=\"w-full text-left px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 rounded-md flex items-center\"\n                      >\n                        <FiSettings className=\"mr-2\" size={16} />\n                        Preferences\n                      </button>\n                      <div className=\"border-t border-gray-100 mt-1 pt-1\">\n                        <button\n                          onClick={() => {\n                            setShowProfileMenu(false);\n                            handleLogout();\n                          }}\n                          className=\"w-full text-left px-3 py-2 text-sm text-red-600 hover:bg-red-50 rounded-md flex items-center\"\n                        >\n                          <FiLogOut className=\"mr-2\" size={16} />\n                          Sign Out\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </header>\n\n          {/* Content */}\n          <main className=\"flex-1 overflow-y-auto p-4 sm:p-6 bg-gray-50\">\n            {children}\n          </main>\n        </div>\n      </div>\n  );\n}\n\n// Sidebar Link Component\nfunction SidebarLink({ to, icon, text, active = false, collapsed }) {\n  return (\n    <Link\n      to={to}\n      className={`flex items-center p-3 mx-2 my-1 rounded-lg transition-colors \n        ${active ? 'bg-indigo-600 bg-opacity-25' : 'hover:bg-indigo-600 hover:bg-opacity-25'}`}\n      title={collapsed ? text : undefined}\n    >\n      <span className={`${collapsed ? 'mx-auto' : 'mr-3'}`}>{icon}</span>\n      {!collapsed && <span>{text}</span>}\n    </Link>\n  );\n}\n\n\n\n// ContractManagement Component\nfunction ContractManagement() {\n  const [contracts, setContracts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const { showSuccess, showError } = useNotification();\n\n  useEffect(() => {\n    fetchContracts();\n  }, []);\n\n  const fetchContracts = async () => {\n    try {\n      setLoading(true);\n      const contractsSnapshot = await getDocs(collection(db, 'contracts'));\n      const contractsData = contractsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setContracts(contractsData);\n    } catch (error) {\n      console.error('Error fetching contracts:', error);\n      showError('Failed to load contracts');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <AdminLayout>\n      <div className=\"space-y-6\">\n        <div className=\"flex justify-between items-center\">\n          <h1 className=\"text-2xl font-bold text-gray-900\">Contract Management</h1>\n          <button className=\"bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 flex items-center\">\n            <FiPlus className=\"mr-2\" />\n            New Contract\n          </button>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\n          {loading ? (\n            <div className=\"flex justify-center items-center h-64\">\n              <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Contract ID\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Vendor\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Value\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Status\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Actions\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {contracts.map((contract) => (\n                    <tr key={contract.id} className=\"hover:bg-gray-50\">\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                        {contract.contractId}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                        {contract.vendorName}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                        ₹{contract.value?.toLocaleString()}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full \n                          ${contract.status === 'active' ? 'bg-green-100 text-green-800' :\n                            contract.status === 'pending' ? 'bg-yellow-100 text-yellow-800' :\n                              'bg-red-100 text-red-800'}`}>\n                          {contract.status}\n                        </span>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                        <div className=\"flex space-x-2\">\n                          <button className=\"text-indigo-600 hover:text-indigo-900\">\n                            <FiEye />\n                          </button>\n                          <button className=\"text-blue-600 hover:text-blue-900\">\n                            <FiEdit2 />\n                          </button>\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n      </div>\n    </AdminLayout>\n  );\n}\n\n// VendorDetails Component\nfunction VendorDetails() {\n  const { id } = useParams();\n  const [vendor, setVendor] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const { showError } = useNotification();\n\n  useEffect(() => {\n    fetchVendor();\n  }, [id]);\n\n  const fetchVendor = async () => {\n    try {\n      setLoading(true);\n      const vendorDoc = await getDoc(doc(db, 'vendors', id));\n      if (vendorDoc.exists()) {\n        setVendor({ id: vendorDoc.id, ...vendorDoc.data() });\n      }\n    } catch (error) {\n      console.error('Error fetching vendor:', error);\n      showError('Failed to load vendor details');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <AdminLayout>\n        <div className=\"flex justify-center items-center h-64\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\n        </div>\n      </AdminLayout>\n    );\n  }\n\n  if (!vendor) {\n    return (\n      <AdminLayout>\n        <div className=\"text-center py-8\">\n          <p className=\"text-gray-500\">Vendor not found</p>\n        </div>\n      </AdminLayout>\n    );\n  }\n\n  return (\n    <AdminLayout>\n      <div className=\"max-w-4xl mx-auto space-y-6\">\n        <div className=\"flex justify-between items-center\">\n          <div>\n            <Link\n              to=\"/admin/vendors\"\n              className=\"text-indigo-600 hover:text-indigo-800 flex items-center mb-2\"\n            >\n              <FiArrowLeft className=\"mr-2\" />\n              Back to Vendors\n            </Link>\n            <h1 className=\"text-2xl font-bold text-gray-900\">{vendor.companyName}</h1>\n          </div>\n          <Link\n            to={`/admin/edit-vendor/${vendor.id}`}\n            className=\"bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 flex items-center\"\n          >\n            <FiEdit2 className=\"mr-2\" />\n            Edit Vendor\n          </Link>\n        </div>\n\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n          <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Vendor Information</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <h3 className=\"text-sm font-medium text-gray-500\">Contact Person</h3>\n              <p className=\"mt-1 text-sm text-gray-900\">{vendor.contactPerson}</p>\n            </div>\n            <div>\n              <h3 className=\"text-sm font-medium text-gray-500\">Email</h3>\n              <p className=\"mt-1 text-sm text-gray-900\">{vendor.email}</p>\n            </div>\n            <div>\n              <h3 className=\"text-sm font-medium text-gray-500\">Phone</h3>\n              <p className=\"mt-1 text-sm text-gray-900\">{vendor.phone}</p>\n            </div>\n            <div>\n              <h3 className=\"text-sm font-medium text-gray-500\">Category</h3>\n              <p className=\"mt-1 text-sm text-gray-900\">{vendor.category}</p>\n            </div>\n            <div>\n              <h3 className=\"text-sm font-medium text-gray-500\">Status</h3>\n              <span className={`mt-1 px-2 inline-flex text-xs leading-5 font-semibold rounded-full \n                ${vendor.status === 'active' ? 'bg-green-100 text-green-800' :\n                  vendor.status === 'pending' ? 'bg-yellow-100 text-yellow-800' :\n                    'bg-red-100 text-red-800'}`}>\n                {vendor.status}\n              </span>\n            </div>\n            <div>\n              <h3 className=\"text-sm font-medium text-gray-500\">Date Added</h3>\n              <p className=\"mt-1 text-sm text-gray-900\">\n                {vendor.createdAt?.toDate().toLocaleDateString()}\n              </p>\n            </div>\n          </div>\n          {vendor.address && (\n            <div className=\"mt-6\">\n              <h3 className=\"text-sm font-medium text-gray-500\">Address</h3>\n              <p className=\"mt-1 text-sm text-gray-900\">{vendor.address}</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </AdminLayout>\n  );\n}\n\n// Chart Components for Vendor Data\nfunction SpendChart({ data }) {\n  const chartData = Object.entries(data || {}).map(([month, amount]) => ({\n    month,\n    amount\n  }));\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <AreaChart data={chartData}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"month\" />\n        <YAxis />\n        <Tooltip formatter={(value) => [`₹${value.toLocaleString()}`, 'Spend']} />\n        <Area type=\"monotone\" dataKey=\"amount\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.3} />\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n}\n\nfunction VendorDistributionChart({ data }) {\n  const chartData = Object.entries(data || {}).map(([category, count]) => ({\n    name: category,\n    value: count\n  }));\n\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <PieChart>\n        <Pie\n          data={chartData}\n          cx=\"50%\"\n          cy=\"50%\"\n          labelLine={false}\n          label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n        >\n          {chartData.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n        <Tooltip />\n      </PieChart>\n    </ResponsiveContainer>\n  );\n}\n\n// Field Type Button Component\nfunction FieldTypeButton({ icon, label, onClick }) {\n  return (\n    <button\n      onClick={onClick}\n      className=\"flex flex-col items-center justify-center p-3 bg-white rounded-md border border-gray-200 hover:border-indigo-300 hover:bg-indigo-50 transition-colors\"\n    >\n      <span className=\"text-indigo-600 mb-1\">{icon}</span>\n      <span className=\"text-xs text-gray-700\">{label}</span>\n    </button>\n  );\n}\n\n// Parent Company List Component\nfunction ParentCompanyList() {\n  const { showSuccess, showError } = useNotification();\n  const [companies, setCompanies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    fetchCompanies();\n  }, []);\n\n  const fetchCompanies = async () => {\n    try {\n      const companiesSnapshot = await getDocs(collection(db, 'parentCompanies'));\n      const companiesData = [];\n      companiesSnapshot.forEach((doc) => {\n        companiesData.push({ id: doc.id, ...doc.data() });\n      });\n      setCompanies(companiesData);\n    } catch (error) {\n      console.error('Error fetching companies:', error);\n      showError('Failed to load companies');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDeleteCompany = async (companyId) => {\n    if (window.confirm('Are you sure? This will affect all associated vendors.')) {\n      try {\n        await deleteDoc(doc(db, 'parentCompanies', companyId));\n        setCompanies(companies.filter(c => c.id !== companyId));\n        showSuccess('Company deleted successfully');\n      } catch (error) {\n        console.error('Error deleting company:', error);\n        showError('Failed to delete company');\n      }\n    }\n  };\n\n  const filteredCompanies = companies.filter(company =>\n    company.name?.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <AdminLayout title=\"Parent Companies\" activeNav=\"parent-companies\">\n      <div className=\"space-y-6\">\n        <div className=\"flex justify-between items-center\">\n          <h1 className=\"text-2xl font-bold text-gray-900\">Parent Companies</h1>\n          <Link\n            to=\"/admin/add-parent-company\"\n            className=\"bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 flex items-center\"\n          >\n            <FiPlus className=\"mr-2\" />\n            Add Parent Company\n          </Link>\n        </div>\n\n        <div className=\"bg-white p-4 rounded-lg shadow-sm border border-gray-200\">\n          <div className=\"relative\">\n            <FiSearch className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search companies...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"pl-10 w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n            />\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\n          {loading ? (\n            <div className=\"flex justify-center items-center h-64\">\n              <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Company Name\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Contact Info\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Vendors Count\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Actions\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {filteredCompanies.map((company) => (\n                    <tr key={company.id} className=\"hover:bg-gray-50\">\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div>\n                          <div className=\"text-sm font-medium text-gray-900\">{company.name}</div>\n                          <div className=\"text-sm text-gray-500\">{company.industry}</div>\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm text-gray-900\">{company.contactPerson}</div>\n                        <div className=\"text-sm text-gray-500\">{company.email}</div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800\">\n                          {company.vendorCount || 0} vendors\n                        </span>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                        <div className=\"flex space-x-2\">\n                          <Link\n                            to={`/admin/edit-parent-company/${company.id}`}\n                            className=\"text-blue-600 hover:text-blue-900\"\n                          >\n                            <FiEdit2 />\n                          </Link>\n                          <button\n                            onClick={() => handleDeleteCompany(company.id)}\n                            className=\"text-red-600 hover:text-red-900\"\n                          >\n                            <FiTrash2 />\n                          </button>\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n      </div>\n    </AdminLayout>\n  );\n}","import { useState, useEffect, createContext, useContext } from 'react';\nimport { FiX, FiCheckCircle, FiAlertTriangle, FiInfo, FiAlertCircle } from 'react-icons/fi';\n\n// Notification Context\nconst NotificationContext = createContext();\n\nexport const useNotification = () => {\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotification must be used within a NotificationProvider');\n  }\n  return context;\n};\n\n// Notification Provider\nexport function NotificationProvider({ children }) {\n  const [notifications, setNotifications] = useState([]);\n\n  const addNotification = (notification) => {\n    const id = Date.now() + Math.random();\n    const newNotification = {\n      id,\n      type: 'info',\n      duration: 5000,\n      ...notification,\n    };\n\n    setNotifications(prev => [...prev, newNotification]);\n\n    // Auto remove after duration\n    if (newNotification.duration > 0) {\n      setTimeout(() => {\n        removeNotification(id);\n      }, newNotification.duration);\n    }\n\n    return id;\n  };\n\n  const removeNotification = (id) => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  };\n\n  const clearAllNotifications = () => {\n    setNotifications([]);\n  };\n\n  // Convenience methods\n  const showSuccess = (message, options = {}) => {\n    return addNotification({\n      type: 'success',\n      message,\n      ...options,\n    });\n  };\n\n  const showError = (message, options = {}) => {\n    return addNotification({\n      type: 'error',\n      message,\n      duration: 8000, // Longer duration for errors\n      ...options,\n    });\n  };\n\n  const showWarning = (message, options = {}) => {\n    return addNotification({\n      type: 'warning',\n      message,\n      ...options,\n    });\n  };\n\n  const showInfo = (message, options = {}) => {\n    return addNotification({\n      type: 'info',\n      message,\n      ...options,\n    });\n  };\n\n  const value = {\n    notifications,\n    addNotification,\n    removeNotification,\n    clearAllNotifications,\n    showSuccess,\n    showError,\n    showWarning,\n    showInfo,\n  };\n\n  return (\n    <NotificationContext.Provider value={value}>\n      {children}\n      <NotificationContainer />\n    </NotificationContext.Provider>\n  );\n}\n\n// Notification Container\nfunction NotificationContainer() {\n  const { notifications, removeNotification } = useNotification();\n\n  return (\n    <div className=\"fixed top-4 right-4 z-50 space-y-2 max-w-sm w-full\">\n      {notifications.map((notification) => (\n        <NotificationItem\n          key={notification.id}\n          notification={notification}\n          onClose={() => removeNotification(notification.id)}\n        />\n      ))}\n    </div>\n  );\n}\n\n// Individual Notification Item\nfunction NotificationItem({ notification, onClose }) {\n  const [isVisible, setIsVisible] = useState(false);\n  const [isLeaving, setIsLeaving] = useState(false);\n\n  useEffect(() => {\n    // Trigger entrance animation\n    setTimeout(() => setIsVisible(true), 10);\n  }, []);\n\n  const handleClose = () => {\n    setIsLeaving(true);\n    setTimeout(onClose, 300); // Wait for exit animation\n  };\n\n  const getNotificationStyles = () => {\n    const baseStyles = \"transform transition-all duration-300 ease-in-out\";\n    const visibilityStyles = isVisible && !isLeaving \n      ? \"translate-x-0 opacity-100\" \n      : \"translate-x-full opacity-0\";\n    \n    const typeStyles = {\n      success: \"bg-green-50 border-green-200 text-green-800\",\n      error: \"bg-red-50 border-red-200 text-red-800\",\n      warning: \"bg-yellow-50 border-yellow-200 text-yellow-800\",\n      info: \"bg-blue-50 border-blue-200 text-blue-800\",\n    };\n\n    return `${baseStyles} ${visibilityStyles} ${typeStyles[notification.type]}`;\n  };\n\n  const getIcon = () => {\n    const iconProps = { className: \"h-5 w-5 flex-shrink-0\" };\n    \n    switch (notification.type) {\n      case 'success':\n        return <FiCheckCircle {...iconProps} className=\"h-5 w-5 flex-shrink-0 text-green-600\" />;\n      case 'error':\n        return <FiAlertCircle {...iconProps} className=\"h-5 w-5 flex-shrink-0 text-red-600\" />;\n      case 'warning':\n        return <FiAlertTriangle {...iconProps} className=\"h-5 w-5 flex-shrink-0 text-yellow-600\" />;\n      case 'info':\n      default:\n        return <FiInfo {...iconProps} className=\"h-5 w-5 flex-shrink-0 text-blue-600\" />;\n    }\n  };\n\n  return (\n    <div className={`${getNotificationStyles()} border rounded-lg shadow-lg p-4 max-w-sm w-full`}>\n      <div className=\"flex items-start\">\n        <div className=\"flex-shrink-0\">\n          {getIcon()}\n        </div>\n        <div className=\"ml-3 flex-1\">\n          {notification.title && (\n            <h4 className=\"text-sm font-medium mb-1\">\n              {notification.title}\n            </h4>\n          )}\n          <p className=\"text-sm\">\n            {notification.message}\n          </p>\n          {notification.actions && (\n            <div className=\"mt-3 flex space-x-2\">\n              {notification.actions.map((action, index) => (\n                <button\n                  key={index}\n                  onClick={action.onClick}\n                  className={`text-xs font-medium px-2 py-1 rounded ${\n                    action.primary \n                      ? 'bg-indigo-600 text-white hover:bg-indigo-700' \n                      : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'\n                  }`}\n                >\n                  {action.label}\n                </button>\n              ))}\n            </div>\n          )}\n        </div>\n        <div className=\"ml-4 flex-shrink-0\">\n          <button\n            onClick={handleClose}\n            className=\"text-gray-400 hover:text-gray-600 focus:outline-none\"\n          >\n            <FiX className=\"h-4 w-4\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Progress Notification Component\nexport function ProgressNotification({ progress, message, onCancel }) {\n  return (\n    <div className=\"bg-white border border-gray-200 rounded-lg shadow-lg p-4 max-w-sm w-full\">\n      <div className=\"flex items-center justify-between mb-2\">\n        <h4 className=\"text-sm font-medium text-gray-900\">{message}</h4>\n        {onCancel && (\n          <button\n            onClick={onCancel}\n            className=\"text-gray-400 hover:text-gray-600\"\n          >\n            <FiX className=\"h-4 w-4\" />\n          </button>\n        )}\n      </div>\n      <div className=\"w-full bg-gray-200 rounded-full h-2\">\n        <div\n          className=\"bg-indigo-600 h-2 rounded-full transition-all duration-300\"\n          style={{ width: `${progress}%` }}\n        />\n      </div>\n      <div className=\"text-xs text-gray-500 mt-1\">{progress}% complete</div>\n    </div>\n  );\n}\n"],"names":["Sidebar","_ref","collapsed","onToggle","mobileMenuOpen","onMobileToggle","location","useLocation","navigate","useNavigate","expandedSections","setExpandedSections","useState","vendors","pathname","startsWith","operations","management","reports","useEffect","handleEscape","e","key","document","addEventListener","removeEventListener","body","style","overflow","toggleSection","section","prev","isActive","path","isParentActive","paths","some","_jsxs","_Fragment","children","_jsx","className","onClick","handleOverlayClick","id","FiHome","size","FiMenu","FiX","FiSearch","type","placeholder","role","SidebarItem","to","icon","FiGrid","text","active","SidebarSection","title","FiUsers","expanded","isChild","FiPlus","FiTrendingUp","FiClipboard","FiFileText","FiDollarSign","FiSettings","FiCheckCircle","FiCalendar","FiBarChart2","FiUser","tooltip","FiBell","async","auth","getAuth","signOut","error","console","undefined","FiLogOut","_ref2","toLowerCase","replace","FiChevronDown","FiChevronRight","_ref3","baseClasses","Link","JobAssignmentForm","lazy","JobAssignmentList","VendorList","VendorForm","VendorBulkOperations","VendorPerformance","VendorPerformanceOverview","VendorTodoList","POList","POForm","VendorPreview","PODetails","StatusManager","DailyTodoList","ReportGenerator","DeliveryChallanList","DeliveryChallanForm","DeliveryChallanDetails","ItemList","ItemForm","AdminApp","NotificationProvider","Suspense","fallback","Routes","Route","element","AdminLayout","activeNav","Dashboard","ContractManagement","Analytics","showSuccess","showError","showInfo","useNotification","stats","setStats","totalVendors","activeVendors","pendingVendors","totalContracts","activeContracts","totalSpend","loading","setLoading","setError","recentVendors","setRecentVendors","refreshing","setRefreshing","lastUpdated","setLastUpdated","fetchStats","isRefresh","arguments","length","vendorsSnapshot","contractsSnapshot","Promise","all","getDocs","collection","db","query","orderBy","vendorsData","activeVendorCount","pendingVendorCount","activeContractCount","vendorDistribution","monthlySpend","forEach","doc","vendor","data","push","status","category","contract","value","isNaN","parseFloat","createdAt","monthKey","toDate","Date","toLocaleDateString","year","month","sortedVendors","filter","sort","a","b","_a$createdAt","_b$createdAt","dateA","slice","errorMessage","message","interval","setInterval","clearInterval","handleRefresh","toLocaleTimeString","disabled","FiRefreshCw","FiAlertCircle","StatCard","color","change","FiClock","FiFile","toLocaleString","FiCreditCard","SpendChart","VendorDistributionChart","map","_vendor$createdAt","name","FiInfo","DailyTrendsChart","_ref6","ResponsiveContainer","width","height","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","stroke","strokeWidth","StatusDistributionChart","_ref7","chartData","completedRequests","pendingRequests","inProgressRequests","item","FiPieChart","PieChart","Pie","cx","cy","labelLine","label","_ref8","percent","toFixed","outerRadius","fill","entry","index","Cell","ServicePerformanceChart","_ref9","BarChart","margin","top","right","left","bottom","angle","textAnchor","Bar","_ref0","indigo","blue","yellow","green","purple","includes","analyticsData","setAnalyticsData","dateRange","setDateRange","fetchAnalyticsData","endDate","startDate","days","setDate","getDate","servicesSnapshot","requestsSnapshot","usersSnapshot","where","services","requests","users","totalRequests","r","totalRevenue","price","reduce","sum","serviceStats","service","serviceRequests","serviceId","completedServiceRequests","successRate","Math","round","revenue","dailyData","i","date","dayStart","setHours","dayEnd","dayRequests","_r$createdAt","requestDate","day","completed","processedData","overview","totalServices","totalUsers","completionRate","servicePerformance","dailyTrends","topServices","recentActivity","_b$createdAt2","_a$createdAt2","refreshData","formatDateTime","timestamp","onChange","target","iconBg","iconColor","activity","serviceName","customerName","_ref10","setMobileMenuOpen","sidebarCollapsed","setSidebarCollapsed","showNotifications","setShowNotifications","showProfileMenu","setShowProfileMenu","notifications","setNotifications","unreadCount","setUnreadCount","notificationsQuery","limit","snapshot","notificationsData","unread","notification","read","fetchNotifications","originalStyle","formatNotificationTime","now","notificationTime","diffInMinutes","floor","updateDoc","notificationId","max","markNotificationAsRead","handleLogout","contracts","setContracts","fetchContracts","contractsData","docs","_contract$value","contractId","vendorName","FiEye","FiEdit2","_ref12","Object","entries","_ref13","amount","AreaChart","formatter","Area","fillOpacity","_ref14","_ref15","count","COLORS","_ref16","NotificationContext","createContext","context","useContext","Error","addNotification","random","newNotification","duration","setTimeout","removeNotification","clearAllNotifications","showWarning","Provider","NotificationContainer","NotificationItem","onClose","isVisible","setIsVisible","isLeaving","setIsLeaving","success","warning","info","getIcon","iconProps","FiAlertTriangle","actions","action","primary","handleClose"],"sourceRoot":""}