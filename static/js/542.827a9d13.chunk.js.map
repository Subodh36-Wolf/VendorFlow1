{"version":3,"file":"static/js/542.827a9d13.chunk.js","mappings":"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","sources":["components/Admin/VendorPerformanceOverview.jsx","services/vendorService.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { collection, getDocs, query, orderBy } from 'firebase/firestore';\nimport { db } from '../../firebase';\nimport { computeVendorStats } from '../../services/vendorService';\nimport { FiTrendingUp, FiUsers, FiBarChart2, FiDollarSign, FiRefreshCw, FiStar } from 'react-icons/fi';\n\nexport default function VendorPerformanceOverview() {\n  const [vendors, setVendors] = useState([]);\n  const [stats, setStats] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n\n  const fetchData = async (isRefresh = false) => {\n    try {\n      if (isRefresh) setRefreshing(true); else setLoading(true);\n      const vendorsSnap = await getDocs(query(collection(db, 'vendors'), orderBy('createdAt', 'desc')));\n      const list = vendorsSnap.docs.map(d => ({ id: d.id, ...d.data() }));\n      setVendors(list);\n      const computed = await computeVendorStats(list);\n      setStats(computed);\n    } finally {\n      setLoading(false);\n      setRefreshing(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const totals = (() => {\n    const sVals = Object.values(stats);\n    return {\n      totalVendors: vendors.length,\n      totalPOs: sVals.reduce((a, v) => a + (v.totalPOs || 0), 0),\n      totalJobs: sVals.reduce((a, v) => a + (v.totalJobs || 0), 0),\n      totalSpend: sVals.reduce((a, v) => a + (v.totalSpend || 0), 0),\n    };\n  })();\n\n  const topBySpend = [...vendors]\n    .sort((a, b) => (stats[b.id]?.totalSpend || 0) - (stats[a.id]?.totalSpend || 0))\n    .slice(0, 5);\n\n  const topByRating = [...vendors]\n    .sort((a, b) => (b.rating || 0) - (a.rating || 0))\n    .slice(0, 5);\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-4 lg:p-6 bg-gray-50 min-h-screen\">\n      <div className=\"max-w-7xl mx-auto space-y-6\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-10 h-10 bg-gradient-to-br from-indigo-500 to-purple-600 rounded-xl flex items-center justify-center\">\n              <FiTrendingUp className=\"text-white\" size={20} />\n            </div>\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">Vendor Performance</h1>\n              <p className=\"text-gray-600\">Overview of vendor performance and quick access to detailed views</p>\n            </div>\n          </div>\n          <button\n            onClick={() => fetchData(true)}\n            disabled={refreshing}\n            className=\"flex items-center px-3 py-2 bg-white border border-gray-200 rounded-lg hover:bg-gray-50 disabled:opacity-50\"\n          >\n            <FiRefreshCw className={`mr-2 ${refreshing ? 'animate-spin' : ''}`} />\n            Refresh\n          </button>\n        </div>\n\n        {/* Summary Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          <SummaryCard icon={<FiUsers className=\"text-indigo-600\" />} title=\"Total Vendors\" value={totals.totalVendors} />\n          <SummaryCard icon={<FiBarChart2 className=\"text-blue-600\" />} title=\"Total POs\" value={totals.totalPOs} />\n          <SummaryCard icon={<FiBarChart2 className=\"text-emerald-600\" />} title=\"Total Jobs\" value={totals.totalJobs} />\n          <SummaryCard icon={<FiDollarSign className=\"text-purple-600\" />} title=\"Total Spend\" value={`₹${totals.totalSpend.toLocaleString()}`} />\n        </div>\n\n        {/* Top Vendors by Spend */}\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200\">\n          <div className=\"px-6 py-4 border-b border-gray-100 flex items-center justify-between\">\n            <h2 className=\"text-lg font-semibold text-gray-900\">Top Vendors by Spend</h2>\n            <span className=\"text-sm text-gray-500\">Last period</span>\n          </div>\n          <div className=\"divide-y divide-gray-100\">\n            {topBySpend.length === 0 ? (\n              <div className=\"p-6 text-gray-500\">No data available</div>\n            ) : (\n              topBySpend.map((v) => (\n                <div key={v.id} className=\"px-6 py-4 flex items-center justify-between\">\n                  <div>\n                    <div className=\"font-medium text-gray-900\">{v.name}</div>\n                    <div className=\"text-sm text-gray-500\">{v.category || '—'}</div>\n                  </div>\n                  <div className=\"text-right\">\n                    <div className=\"font-semibold text-green-600\">₹{(stats[v.id]?.totalSpend || 0).toLocaleString()}</div>\n                    <div className=\"text-xs text-gray-500\">POs: {stats[v.id]?.totalPOs || 0}</div>\n                  </div>\n                  <Link to={`/admin/vendor-performance/${v.id}`} className=\"ml-6 px-3 py-1.5 text-sm bg-indigo-600 text-white rounded-lg hover:bg-indigo-700\">\n                    View Performance\n                  </Link>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n\n        {/* Top Vendors by Rating */}\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200\">\n          <div className=\"px-6 py-4 border-b border-gray-100 flex items-center justify-between\">\n            <h2 className=\"text-lg font-semibold text-gray-900\">Top Vendors by Rating</h2>\n          </div>\n          <div className=\"divide-y divide-gray-100\">\n            {topByRating.length === 0 ? (\n              <div className=\"p-6 text-gray-500\">No ratings available</div>\n            ) : (\n              topByRating.map((v) => (\n                <div key={v.id} className=\"px-6 py-4 flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <div className=\"font-medium text-gray-900 mr-3\">{v.name}</div>\n                    <div className=\"flex items-center text-yellow-500\">\n                      <FiStar className=\"mr-1\" />\n                      <span className=\"font-semibold\">{(v.rating || 0).toFixed(1)}</span>\n                    </div>\n                  </div>\n                  <Link to={`/admin/vendor-performance/${v.id}`} className=\"ml-6 px-3 py-1.5 text-sm bg-indigo-600 text-white rounded-lg hover:bg-indigo-700\">\n                    View Performance\n                  </Link>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nfunction SummaryCard({ icon, title, value }) {\n  return (\n    <div className=\"rounded-lg border border-gray-200 bg-white p-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <p className=\"text-sm text-gray-600\">{title}</p>\n          <p className=\"text-2xl font-bold text-gray-900 mt-1\">{value}</p>\n        </div>\n        <div className=\"p-3 bg-gray-50 rounded-full\">\n          {icon}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { collection, addDoc, getDocs, getDoc, updateDoc, deleteDoc, doc, serverTimestamp, query, orderBy, where, writeBatch } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\n\r\nconst VENDORS_COLLECTION = 'vendors';\r\nconst VENDOR_ACTIVITY_COLLECTION = 'vendorActivity';\r\n\r\n// Normalize vendor data coming from UI before saving\r\nexport function normalizeVendorForSave(raw) {\r\n\tconst numeric = (v) => (v === '' || v === null || v === undefined ? null : Number(v));\r\n\treturn {\r\n\t\tname: String(raw.name || '').trim(),\r\n\t\temail: String(raw.email || '').trim().toLowerCase(),\r\n\t\tphone: String(raw.phone || '').trim(),\r\n\t\taddress: String(raw.address || '').trim(),\r\n\t\tcity: String(raw.city || '').trim(),\r\n\t\tstate: String(raw.state || '').trim(),\r\n\t\tzipCode: String(raw.zipCode || '').trim(),\r\n\t\tcountry: String(raw.country || 'India').trim(),\r\n\t\twebsite: String(raw.website || '').trim(),\r\n\t\tcontactPerson: String(raw.contactPerson || '').trim(),\r\n\t\tcontactPhone: String(raw.contactPhone || '').trim(),\r\n\t\tcontactEmail: String(raw.contactEmail || '').trim().toLowerCase(),\r\n\t\tcategory: String(raw.category || '').trim(),\r\n\t\trating: numeric(raw.rating) ?? 0,\r\n\t\tgstNumber: String(raw.gstNumber || '').trim(),\r\n\t\tpanNumber: String(raw.panNumber || '').trim(),\r\n\t\tbankDetails: {\r\n\t\t\taccountNumber: String(raw.bankDetails?.accountNumber || '').trim(),\r\n\t\t\tifscCode: String(raw.bankDetails?.ifscCode || '').trim(),\r\n\t\t\tbankName: String(raw.bankDetails?.bankName || '').trim(),\r\n\t\t\taccountHolderName: String(raw.bankDetails?.accountHolderName || '').trim(),\r\n\t\t},\r\n\t\tservices: Array.isArray(raw.services) ? raw.services.filter(Boolean) : [],\r\n\t\tstatus: raw.status || 'active',\r\n\t\tnotes: String(raw.notes || '').trim(),\r\n\t\testablishedYear: numeric(raw.establishedYear),\r\n\t\temployeeCount: numeric(raw.employeeCount),\r\n\t\tannualRevenue: numeric(raw.annualRevenue),\r\n\t\tcreditLimit: numeric(raw.creditLimit),\r\n\t\tpreferredPaymentTerms: numeric(raw.preferredPaymentTerms) ?? 30,\r\n\t\ttaxId: String(raw.taxId || '').trim(),\r\n\t};\r\n}\r\n\r\n// Safely map Firestore doc to UI shape with defaults\r\nexport function mapVendorFromDoc(docSnap) {\r\n\tconst data = docSnap.data() || {};\r\n\treturn {\r\n\t\tid: docSnap.id,\r\n\t\tname: data.name || '',\r\n\t\temail: data.email || '',\r\n\t\tphone: data.phone || '',\r\n\t\taddress: data.address || '',\r\n\t\tcity: data.city || '',\r\n\t\tstate: data.state || '',\r\n\t\tzipCode: data.zipCode || '',\r\n\t\tcountry: data.country || 'India',\r\n\t\twebsite: data.website || '',\r\n\t\tcontactPerson: data.contactPerson || '',\r\n\t\tcontactPhone: data.contactPhone || '',\r\n\t\tcontactEmail: data.contactEmail || '',\r\n\t\tcategory: data.category || '',\r\n\t\trating: typeof data.rating === 'number' ? data.rating : Number(data.rating || 0),\r\n\t\tgstNumber: data.gstNumber || '',\r\n\t\tpanNumber: data.panNumber || '',\r\n\t\tbankDetails: {\r\n\t\t\taccountNumber: data.bankDetails?.accountNumber || '',\r\n\t\t\tifscCode: data.bankDetails?.ifscCode || '',\r\n\t\t\tbankName: data.bankDetails?.bankName || '',\r\n\t\t\taccountHolderName: data.bankDetails?.accountHolderName || '',\r\n\t\t},\r\n\t\tservices: Array.isArray(data.services) ? data.services : [],\r\n\t\tstatus: data.status || 'active',\r\n\t\tnotes: data.notes || '',\r\n\t\testablishedYear: data.establishedYear ?? '',\r\n\t\temployeeCount: data.employeeCount ?? '',\r\n\t\tannualRevenue: data.annualRevenue ?? '',\r\n\t\tcreditLimit: data.creditLimit ?? '',\r\n\t\tpreferredPaymentTerms: data.preferredPaymentTerms ?? 30,\r\n\t\ttaxId: data.taxId || '',\r\n\t\tcreatedAt: data.createdAt,\r\n\t\tupdatedAt: data.updatedAt,\r\n\t};\r\n}\r\n\r\nexport async function getVendorsOrdered() {\r\n\tconst q = query(collection(db, VENDORS_COLLECTION), orderBy('createdAt', 'desc'));\r\n\tconst snapshot = await getDocs(q);\r\n\treturn snapshot.docs.map(mapVendorFromDoc);\r\n}\r\n\r\nexport async function getAllVendors() {\r\n\tconst snapshot = await getDocs(collection(db, VENDORS_COLLECTION));\r\n\treturn snapshot.docs.map(mapVendorFromDoc);\r\n}\r\n\r\nexport async function getVendorById(id) {\r\n\tconst snap = await getDoc(doc(db, VENDORS_COLLECTION, id));\r\n\tif (!snap.exists()) return null;\r\n\treturn mapVendorFromDoc(snap);\r\n}\r\n\r\nasync function findDuplicateVendor(email, phone, excludeId) {\r\n\tconst dupCandidates = [];\r\n\tif (email) {\r\n\t\tconst emailQ = query(collection(db, VENDORS_COLLECTION), where('email', '==', email));\r\n\t\tconst emailSnap = await getDocs(emailQ);\r\n\t\temailSnap.forEach((d) => dupCandidates.push(d));\r\n\t}\r\n\tif (phone) {\r\n\t\tconst phoneQ = query(collection(db, VENDORS_COLLECTION), where('phone', '==', phone));\r\n\t\tconst phoneSnap = await getDocs(phoneQ);\r\n\t\tphoneSnap.forEach((d) => dupCandidates.push(d));\r\n\t}\r\n\r\n\tfor (const d of dupCandidates) {\r\n\t\tif (!excludeId || d.id !== excludeId) {\r\n\t\t\tconst data = d.data();\r\n\t\t\tif (email && data.email === email && (!excludeId || d.id !== excludeId)) {\r\n\t\t\t\treturn { type: 'email', id: d.id };\r\n\t\t\t}\r\n\t\t\tif (phone && data.phone === phone && (!excludeId || d.id !== excludeId)) {\r\n\t\t\t\treturn { type: 'phone', id: d.id };\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n}\r\n\r\nasync function logVendorActivity(vendorId, action, details) {\r\n\ttry {\r\n\t\tawait addDoc(collection(db, VENDOR_ACTIVITY_COLLECTION), {\r\n\t\t\tvendorId,\r\n\t\t\taction,\r\n\t\t\tdetails: details || {},\r\n\t\t\ttimestamp: serverTimestamp(),\r\n\t\t});\r\n\t} catch (_) {\r\n\t\t// Best effort logging; ignore failures\r\n\t}\r\n}\r\n\r\nexport async function createVendor(raw) {\r\n\tconst data = normalizeVendorForSave(raw);\r\n\tconst duplicate = await findDuplicateVendor(data.email, data.phone);\r\n\tif (duplicate) {\r\n\t\tconst err = new Error(duplicate.type === 'email' ? 'DUPLICATE_VENDOR_EMAIL' : 'DUPLICATE_VENDOR_PHONE');\r\n\t\tthrow err;\r\n\t}\r\n\tconst now = serverTimestamp();\r\n\tconst ref = await addDoc(collection(db, VENDORS_COLLECTION), { ...data, createdAt: now, updatedAt: now });\r\n\tawait logVendorActivity(ref.id, 'create', { name: data.name, email: data.email });\r\n}\r\n\r\n// Get vendors with WhatsApp auto-send enabled (simplified query)\r\nexport async function getVendorsWithWhatsAppAutoSend() {\r\n\ttry {\r\n\t\t// Use a simpler query to avoid composite index issues\r\n\t\tconst q = query(\r\n\t\t\tcollection(db, VENDORS_COLLECTION),\r\n\t\t\twhere('status', '==', 'active')\r\n\t\t);\r\n\t\tconst snapshot = await getDocs(q);\r\n\t\t\r\n\t\t// Filter in memory to avoid complex Firestore queries\r\n\t\treturn snapshot.docs\r\n\t\t\t.map(mapVendorFromDoc)\r\n\t\t\t.filter(vendor => \r\n\t\t\t\tvendor.whatsappAutoSend === true && \r\n\t\t\t\tvendor.phone && \r\n\t\t\t\tvendor.phone.trim() !== ''\r\n\t\t\t);\r\n\t} catch (error) {\r\n\t\tconsole.error('Error fetching vendors with WhatsApp auto-send:', error);\r\n\t\t// Return empty array instead of throwing to prevent app crashes\r\n\t\treturn [];\r\n\t}\r\n}\r\n\r\n// Update vendor WhatsApp settings\r\nexport async function updateVendorWhatsAppSettings(vendorId, settings) {\r\n\ttry {\r\n\t\tconst vendorRef = doc(db, VENDORS_COLLECTION, vendorId);\r\n\t\tawait updateDoc(vendorRef, {\r\n\t\t\twhatsappAutoSend: settings.autoSend || false,\r\n\t\t\twhatsappTemplate: settings.template || 'default',\r\n\t\t\twhatsappEnabled: settings.enabled || false,\r\n\t\t\tupdatedAt: serverTimestamp()\r\n\t\t});\r\n\r\n\t\t// Log activity\r\n\t\tawait logVendorActivity(vendorId, 'updated', {\r\n\t\t\tchanges: `WhatsApp settings updated: ${JSON.stringify(settings)}`\r\n\t\t});\r\n\r\n\t\treturn { success: true };\r\n\t} catch (error) {\r\n\t\tconsole.error('Error updating vendor WhatsApp settings:', error);\r\n\t\tthrow error;\r\n\t}\r\n}\r\n\r\nexport async function updateVendor(id, raw) {\r\n\tconst data = normalizeVendorForSave(raw);\r\n\tconst duplicate = await findDuplicateVendor(data.email, data.phone, id);\r\n\tif (duplicate) {\r\n\t\tconst err = new Error(duplicate.type === 'email' ? 'DUPLICATE_VENDOR_EMAIL' : 'DUPLICATE_VENDOR_PHONE');\r\n\t\tthrow err;\r\n\t}\r\n\tawait updateDoc(doc(db, VENDORS_COLLECTION, id), { ...data, updatedAt: serverTimestamp() });\r\n\tawait logVendorActivity(id, 'update', { name: data.name, email: data.email });\r\n}\r\n\r\nexport async function deleteVendor(id) {\r\n\tawait deleteDoc(doc(db, VENDORS_COLLECTION, id));\r\n\tawait logVendorActivity(id, 'delete');\r\n}\r\n\r\nexport async function bulkUpdateVendors(ids, fields) {\r\n\tconst batch = writeBatch(db);\r\n\tids.forEach((id) => {\r\n\t\tbatch.update(doc(db, VENDORS_COLLECTION, id), { ...fields, updatedAt: serverTimestamp() });\r\n\t});\r\n\tawait batch.commit();\r\n\tfor (const id of ids) {\r\n\t\tlogVendorActivity(id, 'bulk_update', { fields });\r\n\t}\r\n}\r\n\r\nexport async function bulkDeleteVendors(ids) {\r\n\tconst batch = writeBatch(db);\r\n\tids.forEach((id) => batch.delete(doc(db, VENDORS_COLLECTION, id)));\r\n\tawait batch.commit();\r\n\tfor (const id of ids) {\r\n\t\tlogVendorActivity(id, 'bulk_delete');\r\n\t}\r\n}\r\n\r\nexport async function queryPOsByVendorId(vendorId) {\r\n\tconst q = query(collection(db, 'purchaseOrders'), where('vendorId', '==', vendorId));\r\n\tconst snapshot = await getDocs(q);\r\n\treturn snapshot.docs.map((d) => d.data());\r\n}\r\n\r\nexport async function queryJobsByVendorId(vendorId) {\r\n\tconst q = query(collection(db, 'jobAssignments'), where('vendorId', '==', vendorId));\r\n\tconst snapshot = await getDocs(q);\r\n\treturn snapshot.docs.map((d) => d.data());\r\n}\r\n\r\nexport async function computeVendorStats(vendors) {\r\n\tconst stats = {};\r\n\tfor (const vendor of vendors) {\r\n\t\ttry {\r\n\t\t\tconst [pos, jobs] = await Promise.all([\r\n\t\t\t\tqueryPOsByVendorId(vendor.id),\r\n\t\t\t\tqueryJobsByVendorId(vendor.id),\r\n\t\t\t]);\r\n\t\t\tstats[vendor.id] = {\r\n\t\t\t\ttotalPOs: pos.length,\r\n\t\t\t\ttotalJobs: jobs.length,\r\n\t\t\t\ttotalSpend: pos.reduce((sum, po) => sum + (parseFloat(po.totalAmount) || 0), 0),\r\n\t\t\t\tcompletedJobs: jobs.filter((job) => job.status === 'completed').length,\r\n\t\t\t\tpendingPOs: pos.filter((po) => po.status === 'pending').length,\r\n\t\t\t\tavgRating: vendor.rating || 0,\r\n\t\t\t\tlastActivity: Math.max(\r\n\t\t\t\t\t...pos.map((po) => po.createdAt?.toDate?.()?.getTime() || 0),\r\n\t\t\t\t\t...jobs.map((job) => job.createdAt?.toDate?.()?.getTime() || 0)\r\n\t\t\t\t),\r\n\t\t\t};\r\n\t\t} catch (e) {\r\n\t\t\tstats[vendor.id] = {\r\n\t\t\t\ttotalPOs: 0,\r\n\t\t\t\ttotalJobs: 0,\r\n\t\t\t\ttotalSpend: 0,\r\n\t\t\t\tcompletedJobs: 0,\r\n\t\t\t\tpendingPOs: 0,\r\n\t\t\t\tavgRating: 0,\r\n\t\t\t\tlastActivity: 0,\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\treturn stats;\r\n}\r\n"],"names":["VendorPerformanceOverview","vendors","setVendors","useState","stats","setStats","loading","setLoading","refreshing","setRefreshing","fetchData","async","isRefresh","arguments","length","undefined","list","getDocs","query","collection","db","orderBy","docs","map","d","id","data","computed","computeVendorStats","useEffect","totals","sVals","Object","values","totalVendors","totalPOs","reduce","a","v","totalJobs","totalSpend","topBySpend","sort","b","_stats$b$id","_stats$a$id","slice","topByRating","rating","_jsx","className","children","_jsxs","FiTrendingUp","size","onClick","disabled","FiRefreshCw","SummaryCard","icon","FiUsers","title","value","FiBarChart2","FiDollarSign","toLocaleString","_stats$v$id","_stats$v$id2","name","category","Link","to","FiStar","toFixed","_ref","VENDORS_COLLECTION","VENDOR_ACTIVITY_COLLECTION","normalizeVendorForSave","raw","_numeric","_raw$bankDetails","_raw$bankDetails2","_raw$bankDetails3","_raw$bankDetails4","_numeric2","numeric","Number","String","trim","email","toLowerCase","phone","address","city","state","zipCode","country","website","contactPerson","contactPhone","contactEmail","gstNumber","panNumber","bankDetails","accountNumber","ifscCode","bankName","accountHolderName","services","Array","isArray","filter","Boolean","status","notes","establishedYear","employeeCount","annualRevenue","creditLimit","preferredPaymentTerms","taxId","mapVendorFromDoc","docSnap","_data$bankDetails","_data$bankDetails2","_data$bankDetails3","_data$bankDetails4","_data$establishedYear","_data$employeeCount","_data$annualRevenue","_data$creditLimit","_data$preferredPaymen","createdAt","updatedAt","getVendorsOrdered","q","getAllVendors","getVendorById","snap","getDoc","doc","exists","findDuplicateVendor","excludeId","dupCandidates","emailQ","where","forEach","push","phoneQ","type","logVendorActivity","vendorId","action","details","addDoc","timestamp","serverTimestamp","_","createVendor","duplicate","Error","now","ref","updateVendor","updateDoc","deleteVendor","deleteDoc","bulkUpdateVendors","ids","fields","batch","writeBatch","update","commit","bulkDeleteVendors","delete","queryPOsByVendorId","queryJobsByVendorId","vendor","pos","jobs","Promise","all","sum","po","parseFloat","totalAmount","completedJobs","job","pendingPOs","avgRating","lastActivity","Math","max","_po$createdAt","_po$createdAt$toDate","_po$createdAt$toDate$","toDate","call","getTime","_job$createdAt","_job$createdAt$toDate","_job$createdAt$toDate2","e"],"sourceRoot":""}