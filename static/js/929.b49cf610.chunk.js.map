{"version":3,"file":"static/js/929.b49cf610.chunk.js","mappings":"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","sources":["components/Admin/VendorTodoList.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc, query, where, orderBy } from 'firebase/firestore';\nimport { db } from '../../firebase';\nimport { useNotification } from './NotificationSystem';\nimport { \n  FiPlus, FiEdit2, FiTrash2, FiCalendar, FiFilter, FiRefreshCw,\n  FiUser, FiMapPin, FiFlag, FiCheckCircle, FiClock, FiUsers,\n  FiTarget, FiTrendingUp, FiActivity, FiSearch, FiX\n} from 'react-icons/fi';\n\nexport default function VendorTodoList() {\n  const { showSuccess, showError } = useNotification();\n  \n  const [vendors, setVendors] = useState([]);\n  const [items, setItems] = useState([]);\n  const [todoItems, setTodoItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [editingItem, setEditingItem] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [operationFilter, setOperationFilter] = useState('all');\n  \n  // Operation types\n  const operationTypes = [\n    { value: 'hbl', label: 'HBL', color: 'bg-blue-100 text-blue-800' },\n    { value: 'vtl', label: 'VTL', color: 'bg-green-100 text-green-800' },\n    { value: 'drilling', label: 'Drilling', color: 'bg-purple-100 text-purple-800' },\n    { value: 'grinding', label: 'Grinding', color: 'bg-orange-100 text-orange-800' },\n    { value: 'assembly', label: 'Assembly', color: 'bg-indigo-100 text-indigo-800' },\n    { value: 'painting', label: 'Painting', color: 'bg-pink-100 text-pink-800' },\n    { value: 'packing', label: 'Packing', color: 'bg-teal-100 text-teal-800' },\n    { value: 'other', label: 'Other', color: 'bg-gray-100 text-gray-800' }\n  ];\n  \n  const [formData, setFormData] = useState({\n    date: new Date().toISOString().split('T')[0],\n    vendors: [{ vendorId: '', bodiesCount: 1 }],\n    operationType: 'hbl',\n    targetLocation: '',\n    notes: '',\n    status: 'pending',\n    priority: 'medium'\n  });\n  \n  const priorities = [\n    { value: 'high', label: 'High Priority', color: 'bg-red-100 text-red-800' },\n    { value: 'medium', label: 'Medium Priority', color: 'bg-yellow-100 text-yellow-800' },\n    { value: 'low', label: 'Low Priority', color: 'bg-green-100 text-green-800' }\n  ];\n\n  const statuses = [\n    { value: 'pending', label: 'Pending', color: 'bg-gray-100 text-gray-800', icon: FiClock },\n    { value: 'in-progress', label: 'In Progress', color: 'bg-blue-100 text-blue-800', icon: FiRefreshCw },\n    { value: 'completed', label: 'Completed', color: 'bg-green-100 text-green-800', icon: FiCheckCircle },\n    { value: 'cancelled', label: 'Cancelled', color: 'bg-red-100 text-red-800', icon: FiX }\n  ];\n\n  useEffect(() => {\n    fetchTodos();\n  }, [selectedDate]);\n\n  const fetchTodos = async () => {\n    try {\n      // Fetch todos for selected date\n      const q = query(\n        collection(db, 'vendorTodos'),\n        where('date', '==', selectedDate),\n        orderBy('createdAt', 'desc')\n      );\n      \n      const snapshot = await getDocs(q);\n      const todosData = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      \n      setTodoItems(todosData);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n      showError('Failed to fetch todos');\n    }\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        \n        // Fetch vendors\n        const vendorsSnapshot = await getDocs(collection(db, 'vendors'));\n        const vendorsData = vendorsSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setVendors(vendorsData);\n\n        // Fetch valve items\n        const itemsSnapshot = await getDocs(collection(db, 'items'));\n        const itemsData = itemsSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n        setItems(itemsData);\n\n        await fetchTodos();\n\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        showError('Failed to load data');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [selectedDate]);\n\n  // Filter todos based on status and operation\n  const filteredTodos = todoItems.filter(todo => {\n    let statusMatch = true;\n    let operationMatch = true;\n    \n    if (statusFilter !== 'all') {\n      statusMatch = todo.status === statusFilter;\n    }\n    \n    if (operationFilter !== 'all') {\n      operationMatch = todo.operationType === operationFilter;\n    }\n    \n    return statusMatch && operationMatch;\n  });\n\n  // Add a vendor to the form\n  const addVendorField = () => {\n    setFormData({\n      ...formData,\n      vendors: [...formData.vendors, { vendorId: '', bodiesCount: 1 }]\n    });\n  };\n\n  // Remove a vendor from the form\n  const removeVendorField = (index) => {\n    const updatedVendors = [...formData.vendors];\n    updatedVendors.splice(index, 1);\n    setFormData({\n      ...formData,\n      vendors: updatedVendors\n    });\n  };\n\n  // Update vendor field\n  const updateVendorField = (index, field, value) => {\n    const updatedVendors = [...formData.vendors];\n    updatedVendors[index][field] = value;\n    setFormData({\n      ...formData,\n      vendors: updatedVendors\n    });\n  };\n\n  const handleAddTodo = async (e) => {\n    e.preventDefault();\n    \n    try {\n      // Calculate total bodies count\n      const totalBodies = formData.vendors.reduce((sum, vendor) => sum + parseInt(vendor.bodiesCount || 1), 0);\n      \n      const todoData = {\n        ...formData,\n        vendors: formData.vendors,\n        totalBodies,\n        createdAt: new Date(),\n        updatedAt: new Date()\n      };\n      \n      await addDoc(collection(db, 'vendorTodos'), todoData);\n      \n      // Reset form\n      setFormData({\n        date: new Date().toISOString().split('T')[0],\n        vendors: [{ vendorId: '', bodiesCount: 1 }],\n        operationType: 'hbl',\n        targetLocation: '',\n        notes: '',\n        status: 'pending',\n        priority: 'medium'\n      });\n      \n      setShowAddModal(false);\n      fetchTodos();\n      showSuccess('Resource plan added successfully');\n    } catch (error) {\n      console.error('Error adding todo:', error);\n      showError('Failed to add resource plan');\n    }\n  };\n\n  const handleUpdateTodo = async (todoId, updates) => {\n    try {\n      await updateDoc(doc(db, 'vendorTodos', todoId), {\n        ...updates,\n        updatedAt: new Date()\n      });\n      showSuccess('Todo updated successfully');\n      fetchTodos();\n    } catch (error) {\n      console.error('Error updating todo:', error);\n      showError('Failed to update todo');\n    }\n  };\n\n  const handleDeleteTodo = async (todoId) => {\n    if (!window.confirm('Are you sure you want to delete this todo item?')) {\n      return;\n    }\n\n    try {\n      await deleteDoc(doc(db, 'vendorTodos', todoId));\n      showSuccess('Todo deleted successfully');\n      fetchTodos();\n    } catch (error) {\n      console.error('Error deleting todo:', error);\n      showError('Failed to delete todo');\n    }\n  };\n\n  const getVendorName = (vendorId) => {\n    const vendor = vendors.find(v => v.id === vendorId);\n    return vendor ? vendor.name : 'Unknown Vendor';\n  };\n\n  const getStatusInfo = (status) => {\n    return statuses.find(s => s.value === status) || statuses[0];\n  };\n\n  const getPriorityInfo = (priority) => {\n    return priorities.find(p => p.value === priority) || priorities[1];\n  };\n\n  const getOperationInfo = (operationType) => {\n    return operationTypes.find(op => op.value === operationType) || operationTypes[0];\n  };\n\n  const getTodayStats = () => {\n    const totalBodies = todoItems.reduce((sum, item) => sum + (item.totalBodies || 0), 0);\n    const completedItems = todoItems.filter(item => item.status === 'completed').length;\n    const pendingItems = todoItems.filter(item => item.status === 'pending').length;\n    const inProgressItems = todoItems.filter(item => item.status === 'in-progress').length;\n\n    return { totalBodies, completedItems, pendingItems, inProgressItems };\n  };\n\n  const stats = getTodayStats();\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-7xl mx-auto space-y-6\">\n      {/* Header */}\n      <div className=\"bg-white p-6 rounded-xl shadow-sm border border-gray-200\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-10 h-10 bg-gradient-to-br from-purple-500 to-indigo-600 rounded-xl flex items-center justify-center\">\n              <FiUsers className=\"text-white\" size={20} />\n            </div>\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">Vendor Resource Planning</h1>\n              <p className=\"text-gray-600\">Manage vendor resource allocation and planning</p>\n            </div>\n          </div>\n          <div className=\"flex space-x-3\">\n            <button\n              onClick={() => { fetchTodos(); }}\n              className=\"inline-flex items-center px-4 py-3 bg-gradient-to-r from-gray-500 to-slate-600 text-white font-medium rounded-xl hover:from-gray-600 hover:to-slate-700 transition-all duration-200 shadow-sm hover:shadow-md\"\n            >\n              <FiRefreshCw className=\"mr-2\" size={16} />\n              Refresh\n            </button>\n            <button\n              onClick={() => setShowAddModal(true)}\n              className=\"inline-flex items-center px-4 py-3 bg-gradient-to-r from-purple-500 to-indigo-600 text-white font-medium rounded-xl hover:from-purple-600 hover:to-indigo-700 transition-all duration-200 shadow-sm hover:shadow-md\"\n            >\n              <FiPlus className=\"mr-2\" size={16} />\n              Add Resource Plan\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Date Filter & Stats */}\n      <div className=\"bg-white p-6 rounded-xl shadow-sm border border-gray-200\">\n        <div className=\"flex items-center space-x-3 mb-6\">\n          <div className=\"w-8 h-8 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-xl flex items-center justify-center\">\n            <FiCalendar className=\"text-white\" size={16} />\n          </div>\n          <h3 className=\"text-lg font-semibold text-gray-900\">Date Filter & Overview</h3>\n        </div>\n        \n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n          <div className=\"lg:col-span-1\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Filter by Date</label>\n            <input\n              type=\"date\"\n              value={selectedDate}\n              onChange={(e) => setSelectedDate(e.target.value)}\n              className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200 hover:border-gray-400\"\n            />\n          </div>\n\n          <div className=\"lg:col-span-3 grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div className=\"bg-gradient-to-br from-blue-50 to-indigo-50 p-6 rounded-xl border border-blue-200\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <div className=\"text-sm font-medium text-blue-700\">Total Bodies</div>\n                  <div className=\"text-2xl font-bold text-blue-900\">{stats.totalBodies}</div>\n                </div>\n                <div className=\"w-10 h-10 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-xl flex items-center justify-center\">\n                  <FiTarget className=\"text-white\" size={20} />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-gradient-to-br from-green-50 to-emerald-50 p-6 rounded-xl border border-green-200\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <div className=\"text-sm font-medium text-green-700\">Completed</div>\n                  <div className=\"text-2xl font-bold text-green-900\">{stats.completedItems}</div>\n                </div>\n                <div className=\"w-10 h-10 bg-gradient-to-br from-green-500 to-emerald-600 rounded-xl flex items-center justify-center\">\n                  <FiCheckCircle className=\"text-white\" size={20} />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-gradient-to-br from-yellow-50 to-orange-50 p-6 rounded-xl border border-yellow-200\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <div className=\"text-sm font-medium text-yellow-700\">Pending</div>\n                  <div className=\"text-2xl font-bold text-yellow-900\">{stats.pendingItems}</div>\n                </div>\n                <div className=\"w-10 h-10 bg-gradient-to-br from-yellow-500 to-orange-600 rounded-xl flex items-center justify-center\">\n                  <FiClock className=\"text-white\" size={20} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"bg-white p-6 rounded-xl shadow-sm border border-gray-200\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <div className=\"flex items-center space-x-3 mb-4\">\n              <div className=\"w-8 h-8 bg-gradient-to-br from-green-500 to-emerald-600 rounded-xl flex items-center justify-center\">\n                <FiFilter className=\"text-white\" size={16} />\n              </div>\n              <h3 className=\"text-lg font-semibold text-gray-900\">Filter by Status</h3>\n            </div>\n            <div className=\"flex flex-wrap gap-2\">\n              {['all', 'pending', 'in-progress', 'completed', 'cancelled'].map((filterType) => (\n                <button\n                  key={filterType}\n                  onClick={() => setStatusFilter(filterType)}\n                  className={`px-4 py-2 rounded-xl text-sm font-medium transition-all duration-200 ${\n                    statusFilter === filterType\n                      ? 'bg-gradient-to-r from-purple-500 to-indigo-600 text-white shadow-sm'\n                      : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n                  }`}\n                >\n                  {filterType.charAt(0).toUpperCase() + filterType.slice(1).replace('-', ' ')}\n                </button>\n              ))}\n            </div>\n          </div>\n          \n          <div>\n            <div className=\"flex items-center space-x-3 mb-4\">\n              <div className=\"w-8 h-8 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-xl flex items-center justify-center\">\n                <FiActivity className=\"text-white\" size={16} />\n              </div>\n              <h3 className=\"text-lg font-semibold text-gray-900\">Filter by Operation</h3>\n            </div>\n            <div className=\"flex flex-wrap gap-2\">\n              {['all', ...operationTypes.map(op => op.value)].map((filterType) => (\n                <button\n                  key={filterType}\n                  onClick={() => setOperationFilter(filterType)}\n                  className={`px-4 py-2 rounded-xl text-sm font-medium transition-all duration-200 ${\n                    operationFilter === filterType\n                      ? 'bg-gradient-to-r from-blue-500 to-indigo-600 text-white shadow-sm'\n                      : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n                  }`}\n                >\n                  {filterType === 'all' ? 'All Operations' : \n                   operationTypes.find(op => op.value === filterType)?.label || filterType}\n                </button>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Todo Items */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-200\">\n        <div className=\"p-6\">\n          <div className=\"flex items-center space-x-3 mb-6\">\n            <div className=\"w-8 h-8 bg-gradient-to-br from-orange-500 to-red-600 rounded-xl flex items-center justify-center\">\n              <FiActivity className=\"text-white\" size={16} />\n            </div>\n            <h2 className=\"text-lg font-semibold text-gray-900\">\n              Resource Plans for {new Date(selectedDate).toLocaleDateString()}\n            </h2>\n          </div>\n        \n        <div className=\"divide-y divide-gray-200\">\n          {filteredTodos.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <div className=\"w-16 h-16 bg-gradient-to-br from-gray-200 to-gray-300 rounded-xl flex items-center justify-center mx-auto mb-4\">\n                <FiCalendar className=\"text-gray-500\" size={24} />\n              </div>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No resource plans for this date</h3>\n              <p className=\"text-sm text-gray-500 mb-4\">Get started by creating a new resource plan.</p>\n              <button\n                onClick={() => setShowAddModal(true)}\n                className=\"inline-flex items-center px-4 py-2 bg-gradient-to-r from-purple-500 to-indigo-600 text-white font-medium rounded-xl hover:from-purple-600 hover:to-indigo-700 transition-all duration-200 shadow-sm hover:shadow-md\"\n              >\n                <FiPlus className=\"mr-2\" size={16} />\n                Add First Plan\n              </button>\n            </div>\n          ) : (\n            filteredTodos.map((item) => {\n              const statusInfo = getStatusInfo(item.status);\n              const priorityInfo = getPriorityInfo(item.priority);\n              const operationInfo = getOperationInfo(item.operationType);\n              const StatusIcon = statusInfo.icon;\n              \n              return (\n                <div key={item.id} className=\"p-6\">\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center mb-2\">\n                        <StatusIcon className=\"mr-2\" size={16} />\n                        <span className={`px-2 py-1 text-xs font-medium rounded-full ${statusInfo.color}`}>\n                          {statusInfo.label}\n                        </span>\n                        <span className={`ml-2 px-2 py-1 text-xs font-medium rounded-full ${priorityInfo.color}`}>\n                          {priorityInfo.label}\n                        </span>\n                        <span className={`ml-2 px-2 py-1 text-xs font-medium rounded-full ${operationInfo.color}`}>\n                          {operationInfo.label}\n                        </span>\n                      </div>\n                      \n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-3\">\n                        <div>\n                          <p className=\"text-sm font-medium text-gray-600\">Vendors & Bodies</p>\n                          <div className=\"mt-1 space-y-1\">\n                            {item.vendors && item.vendors.map((vendor, index) => (\n                              <div key={index} className=\"text-sm text-gray-900\">\n                                {getVendorName(vendor.vendorId)}: {vendor.bodiesCount} bodies\n                              </div>\n                            ))}\n                          </div>\n                          <p className=\"text-xs text-gray-500 mt-1\">Total: {item.totalBodies} bodies</p>\n                        </div>\n                        \n                        <div>\n                          <p className=\"text-sm font-medium text-gray-600\">Target Location</p>\n                          <p className=\"text-sm text-gray-900\">{item.targetLocation}</p>\n                        </div>\n                      </div>\n                      \n                      {item.notes && (\n                        <div className=\"mb-3\">\n                          <p className=\"text-sm font-medium text-gray-600\">Notes</p>\n                          <p className=\"text-sm text-gray-700\">{item.notes}</p>\n                        </div>\n                      )}\n                      \n                      <div className=\"flex items-center space-x-4 text-xs text-gray-500\">\n                        <span>Created: {item.createdAt?.toDate?.()?.toLocaleString() || 'N/A'}</span>\n                        {item.updatedAt && (\n                          <span>Updated: {item.updatedAt?.toDate?.()?.toLocaleString()}</span>\n                        )}\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex items-center space-x-2 ml-4\">\n                      <select\n                        value={item.status}\n                        onChange={(e) => handleUpdateTodo(item.id, { status: e.target.value })}\n                        className=\"text-xs border border-gray-300 rounded px-2 py-1 focus:outline-none focus:ring-1 focus:ring-indigo-500\"\n                      >\n                        {statuses.map(status => (\n                          <option key={status.value} value={status.value}>\n                            {status.label}\n                          </option>\n                        ))}\n                      </select>\n                      \n                      <button\n                        onClick={() => setEditingItem(item)}\n                        className=\"text-indigo-600 hover:text-indigo-800\"\n                        title=\"Edit\"\n                      >\n                        <FiEdit2 size={16} />\n                      </button>\n                      \n                      <button\n                        onClick={() => handleDeleteTodo(item.id)}\n                        className=\"text-red-600 hover:text-red-800\"\n                        title=\"Delete\"\n                      >\n                        <FiTrash2 size={16} />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              );\n            })\n          )}\n        </div>\n        </div>\n      </div>\n\n      {/* Add Todo Modal */}\n      {showAddModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-xl shadow-2xl p-6 w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\n            <div className=\"flex items-center space-x-3 mb-6\">\n              <div className=\"w-10 h-10 bg-gradient-to-br from-purple-500 to-indigo-600 rounded-xl flex items-center justify-center\">\n                <FiPlus className=\"text-white\" size={20} />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900\">Add Vendor Resource Plan</h3>\n              <button\n                onClick={() => setShowAddModal(false)}\n                className=\"ml-auto p-2 text-gray-400 hover:text-gray-600 hover:bg-gray-100 rounded-xl transition-all duration-200\"\n              >\n                <FiX size={20} />\n              </button>\n            </div>\n            \n            <form onSubmit={handleAddTodo} className=\"space-y-5\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Date\n                  </label>\n                  <input\n                    type=\"date\"\n                    value={formData.date}\n                    onChange={(e) => setFormData({...formData, date: e.target.value})}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200 hover:border-gray-400\"\n                    required\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Operation Type\n                  </label>\n                  <select\n                    value={formData.operationType}\n                    onChange={(e) => setFormData({...formData, operationType: e.target.value})}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200 hover:border-gray-400 bg-white\"\n                    required\n                  >\n                    {operationTypes.map(op => (\n                      <option key={op.value} value={op.value}>{op.label}</option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n\n              {/* Vendor fields */}\n              <div>\n                <div className=\"flex items-center justify-between mb-2\">\n                  <label className=\"block text-sm font-medium text-gray-700\">Vendors & Bodies</label>\n                  <button\n                    type=\"button\"\n                    onClick={addVendorField}\n                    className=\"text-xs text-indigo-600 hover:text-indigo-800 flex items-center\"\n                  >\n                    <FiPlus size={12} className=\"mr-1\" /> Add Vendor\n                  </button>\n                </div>\n                \n                {formData.vendors.map((vendor, index) => (\n                  <div key={index} className=\"grid grid-cols-2 gap-4 mb-3\">\n                    <div>\n                      <select\n                        value={vendor.vendorId}\n                        onChange={(e) => updateVendorField(index, 'vendorId', e.target.value)}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200 hover:border-gray-400 bg-white\"\n                        required\n                      >\n                        <option value=\"\">Select Vendor</option>\n                        {vendors.map(vendor => (\n                          <option key={vendor.id} value={vendor.id}>{vendor.name}</option>\n                        ))}\n                      </select>\n                    </div>\n                    <div className=\"flex items-center\">\n                      <input\n                        type=\"number\"\n                        min=\"1\"\n                        value={vendor.bodiesCount}\n                        onChange={(e) => updateVendorField(index, 'bodiesCount', e.target.value)}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200 hover:border-gray-400\"\n                        required\n                      />\n                      {formData.vendors.length > 1 && (\n                        <button\n                          type=\"button\"\n                          onClick={() => removeVendorField(index)}\n                          className=\"ml-2 p-2 text-red-600 hover:text-red-800 hover:bg-red-50 rounded-xl\"\n                        >\n                          <FiTrash2 size={16} />\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Target Location\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.targetLocation}\n                  onChange={(e) => setFormData({...formData, targetLocation: e.target.value})}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200 hover:border-gray-400\"\n                  placeholder=\"Where to allocate the resources\"\n                  required\n                />\n              </div>\n              \n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Status</label>\n                  <select\n                    value={formData.status}\n                    onChange={(e) => setFormData({...formData, status: e.target.value})}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200 hover:border-gray-400 bg-white\"\n                    required\n                  >\n                    {statuses.map(status => (\n                      <option key={status.value} value={status.value}>{status.label}</option>\n                    ))}\n                  </select>\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Priority</label>\n                  <select\n                    value={formData.priority}\n                    onChange={(e) => setFormData({...formData, priority: e.target.value})}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200 hover:border-gray-400 bg-white\"\n                    required\n                  >\n                    {priorities.map(priority => (\n                      <option key={priority.value} value={priority.value}>{priority.label}</option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Notes\n                </label>\n                <textarea\n                  value={formData.notes}\n                  onChange={(e) => setFormData({...formData, notes: e.target.value})}\n                  rows={3}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200 hover:border-gray-400 resize-none\"\n                  placeholder=\"Enter additional notes...\"\n                />\n              </div>\n              \n              <div className=\"flex justify-end space-x-3 pt-6 border-t border-gray-200\">\n                <button\n                  type=\"button\"\n                  onClick={() => setShowAddModal(false)}\n                  className=\"px-6 py-3 text-gray-700 bg-gray-100 font-medium rounded-xl hover:bg-gray-200 transition-all duration-200\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"px-6 py-3 bg-gradient-to-r from-purple-500 to-indigo-600 text-white font-medium rounded-xl hover:from-purple-600 hover:to-indigo-700 transition-all duration-200 shadow-sm hover:shadow-md\"\n                >\n                  Add Plan\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":["VendorTodoList","showSuccess","showError","useNotification","vendors","setVendors","useState","items","setItems","todoItems","setTodoItems","loading","setLoading","showAddModal","setShowAddModal","editingItem","setEditingItem","selectedDate","setSelectedDate","Date","toISOString","split","statusFilter","setStatusFilter","operationFilter","setOperationFilter","operationTypes","value","label","color","formData","setFormData","date","vendorId","bodiesCount","operationType","targetLocation","notes","status","priority","priorities","statuses","icon","FiClock","FiRefreshCw","FiCheckCircle","FiX","useEffect","fetchTodos","async","q","query","collection","db","where","orderBy","todosData","getDocs","docs","map","doc","id","data","error","console","vendorsData","itemsData","fetchData","filteredTodos","filter","todo","statusMatch","operationMatch","updateVendorField","index","field","updatedVendors","getVendorName","vendor","find","v","name","stats","totalBodies","reduce","sum","item","completedItems","length","pendingItems","inProgressItems","_jsx","className","children","_jsxs","FiUsers","size","onClick","FiPlus","FiCalendar","type","onChange","e","target","FiTarget","FiFilter","filterType","charAt","toUpperCase","slice","replace","FiActivity","op","_operationTypes$find","toLocaleDateString","_item$createdAt","_item$createdAt$toDat","_item$createdAt$toDat2","_item$updatedAt","_item$updatedAt$toDat","_item$updatedAt$toDat2","statusInfo","s","priorityInfo","p","operationInfo","StatusIcon","createdAt","toDate","call","toLocaleString","updatedAt","todoId","updates","updateDoc","handleUpdateTodo","title","FiEdit2","window","confirm","deleteDoc","handleDeleteTodo","FiTrash2","onSubmit","preventDefault","parseInt","todoData","addDoc","required","addVendorField","min","splice","removeVendorField","placeholder","rows"],"sourceRoot":""}