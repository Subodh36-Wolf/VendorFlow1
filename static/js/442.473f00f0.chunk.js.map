{"version":3,"file":"static/js/442.473f00f0.chunk.js","mappings":"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","sources":["components/Admin/TodoItem.jsx","components/Admin/AddTodoModal.jsx","components/Admin/EditTodoModal.jsx","components/Admin/DailyTodoList.jsx"],"sourcesContent":["import React from 'react';\nimport { FiEdit2, FiTrash2, FiCheckCircle, FiPlay, FiClock, FiFlag, FiMapPin, FiUsers } from 'react-icons/fi';\n\nexport default function TodoItem({\n  item,\n  onEdit,\n  onDelete,\n  onMarkGo,\n  onMarkPickedUp,\n  getVendorName,\n  getStatusInfo,\n  getPriorityInfo,\n  getOperationInfo,\n}) {\n  const status = getStatusInfo ? getStatusInfo(item.status) : { label: item.status };\n  const priority = getPriorityInfo ? getPriorityInfo(item.priority) : { label: item.priority };\n  const operation = getOperationInfo ? getOperationInfo(item.operationType) : { label: item.operationType };\n\n  return (\n    <div className=\"bg-white border border-gray-200 rounded-xl p-4 shadow-sm\">\n      <div className=\"flex items-start justify-between\">\n        <div>\n          <div className=\"flex items-center gap-2 mb-1\">\n            <span className={`px-2 py-0.5 text-xs rounded-full ${operation.color || 'bg-gray-100 text-gray-800'}`}>{operation.label || item.operationType}</span>\n            <span className={`px-2 py-0.5 text-xs rounded-full ${status.color || 'bg-gray-100 text-gray-800'}`}>{status.label}</span>\n            <span className={`px-2 py-0.5 text-xs rounded-full ${priority.color || 'bg-gray-100 text-gray-800'}`}>{priority.label}</span>\n          </div>\n          <div className=\"text-sm text-gray-800\">\n            <div className=\"flex items-center gap-2\"><FiMapPin className=\"text-gray-400\" /> <span className=\"font-medium\">Target:</span> {item.targetLocation || 'VMT Store'}</div>\n            <div className=\"flex items-center gap-2 mt-1\"><FiUsers className=\"text-gray-400\" />\n              <span className=\"font-medium\">Vendors:</span>\n              {(item.vendors || []).map((v, idx) => (\n                <span key={idx} className=\"ml-1 px-2 py-0.5 text-xs bg-gray-100 rounded\">\n                  {getVendorName ? getVendorName(v.vendorId) : v.vendorId} ({v.bodiesCount || 0})\n                </span>\n              ))}\n            </div>\n            {item.notes && <div className=\"mt-2 text-gray-600\">{item.notes}</div>}\n            {item.poNumber && <div className=\"mt-1 text-xs text-gray-500\">PO: {item.poNumber}</div>}\n            {item.itemDescription && <div className=\"mt-1 text-xs text-gray-500\">Item: {item.itemDescription}</div>}\n          </div>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          {item.status !== 'in-progress' && item.status !== 'completed' && (\n            <button\n              onClick={() => onMarkGo && onMarkGo(item)}\n              className=\"inline-flex items-center px-3 py-2 bg-blue-100 text-blue-700 rounded-lg hover:bg-blue-200\"\n              title=\"Mark Go\"\n            >\n              <FiPlay className=\"mr-1\" /> Go\n            </button>\n          )}\n          {item.status !== 'completed' && (\n            <button\n              onClick={() => onMarkPickedUp && onMarkPickedUp(item)}\n              className=\"inline-flex items-center px-3 py-2 bg-green-100 text-green-700 rounded-lg hover:bg-green-200\"\n              title=\"Mark Picked Up\"\n            >\n              <FiCheckCircle className=\"mr-1\" /> Picked Up\n            </button>\n          )}\n          <button\n            onClick={() => onEdit && onEdit(item)}\n            className=\"inline-flex items-center px-3 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200\"\n            title=\"Edit\"\n          >\n            <FiEdit2 />\n          </button>\n          <button\n            onClick={() => onDelete && onDelete(item.id)}\n            className=\"inline-flex items-center px-3 py-2 bg-red-100 text-red-700 rounded-lg hover:bg-red-200\"\n            title=\"Delete\"\n          >\n            <FiTrash2 />\n          </button>\n        </div>\n      </div>\n      <div className=\"mt-3 text-xs text-gray-500 flex items-center gap-4\">\n        <span className=\"flex items-center gap-1\"><FiClock /> Date: {item.date}</span>\n        <span className=\"flex items-center gap-1\"><FiFlag /> Total Bodies: {item.totalBodies || (item.vendors || []).reduce((s, v) => s + (parseInt(v.bodiesCount || 0), 0))}</span>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function AddTodoModal({\n  formData,\n  setFormData,\n  vendors,\n  operationTypes,\n  priorities,\n  statuses,\n  onAdd,\n  onClose,\n  addVendorField,\n  removeVendorField,\n  updateVendorField,\n}) {\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/40\">\n      <div className=\"bg-white w-full max-w-2xl rounded-xl shadow-lg\">\n        <div className=\"px-6 py-4 border-b\">\n          <h2 className=\"text-lg font-semibold\">Add Manual Resource Plan</h2>\n        </div>\n        <form onSubmit={onAdd} className=\"p-6 space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date</label>\n              <input\n                type=\"date\"\n                value={formData.date}\n                onChange={(e) => setFormData({ ...formData, date: e.target.value })}\n                className=\"w-full px-3 py-2 border rounded-lg\"\n                required\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Operation</label>\n              <select\n                value={formData.operationType}\n                onChange={(e) => setFormData({ ...formData, operationType: e.target.value })}\n                className=\"w-full px-3 py-2 border rounded-lg\"\n              >\n                {operationTypes.map((op) => (\n                  <option key={op.value} value={op.value}>{op.label}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Target Location</label>\n            <input\n              type=\"text\"\n              value={formData.targetLocation}\n              onChange={(e) => setFormData({ ...formData, targetLocation: e.target.value })}\n              className=\"w-full px-3 py-2 border rounded-lg\"\n            />\n          </div>\n\n          <div className=\"space-y-3\">\n            <div className=\"flex items-center justify-between\">\n              <label className=\"block text-sm font-medium text-gray-700\">Vendors</label>\n              <button type=\"button\" onClick={addVendorField} className=\"text-indigo-600 text-sm\">+ Add Vendor</button>\n            </div>\n            {formData.vendors.map((v, idx) => (\n              <div key={idx} className=\"grid grid-cols-12 gap-2 items-center\">\n                <div className=\"col-span-8\">\n                  <select\n                    value={v.vendorId}\n                    onChange={(e) => updateVendorField(idx, 'vendorId', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg\"\n                  >\n                    <option value=\"\">Select vendor</option>\n                    {vendors.map(vendor => (\n                      <option key={vendor.id} value={vendor.id}>{vendor.name}</option>\n                    ))}\n                  </select>\n                </div>\n                <div className=\"col-span-3\">\n                  <input\n                    type=\"number\"\n                    min={1}\n                    value={v.bodiesCount}\n                    onChange={(e) => updateVendorField(idx, 'bodiesCount', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg\"\n                    placeholder=\"Bodies\"\n                  />\n                </div>\n                <div className=\"col-span-1 text-right\">\n                  {formData.vendors.length > 1 && (\n                    <button type=\"button\" onClick={() => removeVendorField(idx)} className=\"text-red-600 text-sm\">Remove</button>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Status</label>\n              <select\n                value={formData.status}\n                onChange={(e) => setFormData({ ...formData, status: e.target.value })}\n                className=\"w-full px-3 py-2 border rounded-lg\"\n              >\n                {statuses.map(s => (\n                  <option key={s.value} value={s.value}>{s.label}</option>\n                ))}\n              </select>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Priority</label>\n              <select\n                value={formData.priority}\n                onChange={(e) => setFormData({ ...formData, priority: e.target.value })}\n                className=\"w-full px-3 py-2 border rounded-lg\"\n              >\n                {priorities.map(p => (\n                  <option key={p.value} value={p.value}>{p.label}</option>\n                ))}\n              </select>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Notes</label>\n              <input\n                type=\"text\"\n                value={formData.notes}\n                onChange={(e) => setFormData({ ...formData, notes: e.target.value })}\n                className=\"w-full px-3 py-2 border rounded-lg\"\n                placeholder=\"Notes\"\n              />\n            </div>\n          </div>\n\n          <div className=\"flex justify-end gap-3 pt-2\">\n            <button type=\"button\" onClick={onClose} className=\"px-4 py-2 rounded-lg border\">Cancel</button>\n            <button type=\"submit\" className=\"px-4 py-2 rounded-lg bg-indigo-600 text-white\">Add</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\n\nexport default function EditTodoModal({\n  item,\n  vendors,\n  operationTypes,\n  priorities,\n  statuses,\n  onUpdate,\n  onClose,\n}) {\n  const [local, setLocal] = useState({\n    date: item.date || new Date().toISOString().split('T')[0],\n    operationType: item.operationType || 'hbl',\n    targetLocation: item.targetLocation || 'VMT Store',\n    notes: item.notes || '',\n    status: item.status || 'pending',\n    priority: item.priority || 'medium',\n    vendors: item.vendors || [{ vendorId: '', bodiesCount: 1 }],\n  });\n\n  const updateVendorField = (index, field, value) => {\n    const arr = [...local.vendors];\n    arr[index] = { ...arr[index], [field]: value };\n    setLocal({ ...local, vendors: arr });\n  };\n\n  const addVendorField = () => setLocal({ ...local, vendors: [...local.vendors, { vendorId: '', bodiesCount: 1 }] });\n  const removeVendorField = (i) => setLocal({ ...local, vendors: local.vendors.filter((_, idx) => idx !== i) });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const totalBodies = (local.vendors || []).reduce((sum, v) => sum + parseInt(v.bodiesCount || 0), 0);\n    onUpdate(item.id, {\n      ...local,\n      totalBodies,\n      vendors: local.vendors.map(v => ({ ...v })),\n    });\n    onClose();\n  };\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/40\">\n      <div className=\"bg-white w-full max-w-2xl rounded-xl shadow-lg\">\n        <div className=\"px-6 py-4 border-b\">\n          <h2 className=\"text-lg font-semibold\">Edit Resource Plan</h2>\n        </div>\n        <form onSubmit={handleSubmit} className=\"p-6 space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date</label>\n              <input type=\"date\" value={local.date} onChange={(e) => setLocal({ ...local, date: e.target.value })} className=\"w-full px-3 py-2 border rounded-lg\" />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Operation</label>\n              <select value={local.operationType} onChange={(e) => setLocal({ ...local, operationType: e.target.value })} className=\"w-full px-3 py-2 border rounded-lg\">\n                {operationTypes.map(op => (\n                  <option key={op.value} value={op.value}>{op.label}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Target Location</label>\n            <input type=\"text\" value={local.targetLocation} onChange={(e) => setLocal({ ...local, targetLocation: e.target.value })} className=\"w-full px-3 py-2 border rounded-lg\" />\n          </div>\n\n          <div className=\"space-y-3\">\n            <div className=\"flex items-center justify-between\">\n              <label className=\"block text-sm font-medium text-gray-700\">Vendors</label>\n              <button type=\"button\" onClick={addVendorField} className=\"text-indigo-600 text-sm\">+ Add Vendor</button>\n            </div>\n            {local.vendors.map((v, idx) => (\n              <div key={idx} className=\"grid grid-cols-12 gap-2 items-center\">\n                <div className=\"col-span-8\">\n                  <select value={v.vendorId} onChange={(e) => updateVendorField(idx, 'vendorId', e.target.value)} className=\"w-full px-3 py-2 border rounded-lg\">\n                    <option value=\"\">Select vendor</option>\n                    {vendors.map(vendor => (\n                      <option key={vendor.id} value={vendor.id}>{vendor.name}</option>\n                    ))}\n                  </select>\n                </div>\n                <div className=\"col-span-3\">\n                  <input type=\"number\" min={1} value={v.bodiesCount} onChange={(e) => updateVendorField(idx, 'bodiesCount', e.target.value)} className=\"w-full px-3 py-2 border rounded-lg\" placeholder=\"Bodies\" />\n                </div>\n                <div className=\"col-span-1 text-right\">\n                  {local.vendors.length > 1 && (\n                    <button type=\"button\" onClick={() => removeVendorField(idx)} className=\"text-red-600 text-sm\">Remove</button>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Status</label>\n              <select value={local.status} onChange={(e) => setLocal({ ...local, status: e.target.value })} className=\"w-full px-3 py-2 border rounded-lg\">\n                {statuses.map(s => (\n                  <option key={s.value} value={s.value}>{s.label}</option>\n                ))}\n              </select>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Priority</label>\n              <select value={local.priority} onChange={(e) => setLocal({ ...local, priority: e.target.value })} className=\"w-full px-3 py-2 border rounded-lg\">\n                {priorities.map(p => (\n                  <option key={p.value} value={p.value}>{p.label}</option>\n                ))}\n              </select>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Notes</label>\n              <input type=\"text\" value={local.notes} onChange={(e) => setLocal({ ...local, notes: e.target.value })} className=\"w-full px-3 py-2 border rounded-lg\" placeholder=\"Notes\" />\n            </div>\n          </div>\n\n          <div className=\"flex justify-end gap-3 pt-2\">\n            <button type=\"button\" onClick={onClose} className=\"px-4 py-2 rounded-lg border\">Cancel</button>\n            <button type=\"submit\" className=\"px-4 py-2 rounded-lg bg-indigo-600 text-white\">Save</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect, useCallback, useMemo } from 'react';\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc, query, where, orderBy, serverTimestamp, onSnapshot, writeBatch, limit } from 'firebase/firestore';\nimport { db } from '../../firebase';\nimport { useNotification } from './NotificationSystem';\nimport { \n  FiPlus, FiEdit2, FiTrash2, FiCalendar, FiFilter, FiRefreshCw,\n  FiUser, FiMapPin, FiFlag, FiCheckCircle, FiClock, FiUsers,\n  FiTarget, FiTrendingUp, FiActivity, FiSearch, FiX, FiPackage,\n  FiFileText, FiTool, FiCpu, FiZap, FiPlay, FiCheck, FiTruck,\n  FiBarChart2, FiDownload, FiUpload, FiArchive, FiAlertTriangle,\n  FiEye, FiEyeOff, FiCopy, FiShare2, FiPrinter\n} from 'react-icons/fi';\nimport TodoItem from './TodoItem';\nimport AddTodoModal from './AddTodoModal';\nimport EditTodoModal from './EditTodoModal';\n\n// Enhanced machine operations mapping\nconst MACHINE_OPERATIONS = {\n  HBL: { name: 'Horizontal Boring', icon: FiTool, color: 'bg-blue-100 text-blue-800 border-blue-200' },\n  VTL: { name: 'Vertical Turning', icon: FiCpu, color: 'bg-purple-100 text-purple-800 border-purple-200' },\n  Drilling: { name: 'Drilling', icon: FiZap, color: 'bg-green-100 text-green-800 border-green-200' },\n  VMC: { name: 'Vertical Machining', icon: FiTarget, color: 'bg-indigo-100 text-indigo-800 border-indigo-200' },\n  Grinding: { name: 'Grinding', icon: FiTool, color: 'bg-orange-100 text-orange-800 border-orange-200' },\n  Assembly: { name: 'Assembly', icon: FiTool, color: 'bg-indigo-100 text-indigo-800 border-indigo-200' },\n  Painting: { name: 'Painting', icon: FiTool, color: 'bg-pink-100 text-pink-800 border-pink-200' },\n  Packing: { name: 'Packing', icon: FiPackage, color: 'bg-teal-100 text-teal-800 border-teal-200' }\n};\n\n// Custom hook for debouncing\nconst useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\n// Loading component\nconst LoadingSpinner = ({ message = \"Loading...\" }) => (\n  <div className=\"flex flex-col justify-center items-center h-64 space-y-4\">\n    <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\n    <p className=\"text-gray-600\">{message}</p>\n  </div>\n);\n\n// Error boundary component\nconst ErrorBoundary = ({ error, onRetry }) => (\n  <div className=\"bg-red-50 border border-red-200 rounded-xl p-6 text-center\">\n    <FiAlertTriangle className=\"mx-auto text-red-500 mb-3\" size={32} />\n    <h3 className=\"text-lg font-medium text-red-800 mb-2\">Something went wrong</h3>\n    <p className=\"text-red-600 mb-4\">{error?.message || 'An unexpected error occurred'}</p>\n    <button\n      onClick={onRetry}\n      className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors\"\n    >\n      Try Again\n    </button>\n  </div>\n);\n\n// Stats Card Component\nconst StatsCard = ({ title, value, icon: Icon, color, subtitle }) => (\n  <div className={`bg-gradient-to-br ${color} p-6 rounded-xl text-white shadow-sm`}>\n    <div className=\"flex items-center justify-between\">\n      <div>\n        <p className=\"text-white/90 text-sm font-medium\">{title}</p>\n        <p className=\"text-2xl font-bold mt-1\">{value}</p>\n        {subtitle && <p className=\"text-white/80 text-xs mt-1\">{subtitle}</p>}\n      </div>\n      <div className=\"p-3 bg-white/20 rounded-lg\">\n        <Icon size={24} className=\"text-white/90\" />\n      </div>\n    </div>\n  </div>\n);\n\n// Quick Actions Component\nconst QuickActions = ({ onSync, onRefresh, onAddManual, onExport, isLoading }) => (\n  <div className=\"flex flex-wrap gap-3\">\n    <button\n      onClick={onSync}\n      disabled={isLoading}\n      className=\"inline-flex items-center px-4 py-3 bg-gradient-to-r from-green-500 to-emerald-600 text-white font-medium rounded-xl hover:from-green-600 hover:to-emerald-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 shadow-sm hover:shadow-md\"\n    >\n      <FiCheckCircle className=\"mr-2\" size={16} />\n      Sync Completed Jobs\n    </button>\n    <button\n      onClick={onRefresh}\n      disabled={isLoading}\n      className=\"inline-flex items-center px-4 py-3 bg-gradient-to-r from-gray-500 to-slate-600 text-white font-medium rounded-xl hover:from-gray-600 hover:to-slate-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 shadow-sm hover:shadow-md\"\n    >\n      <FiRefreshCw className={`mr-2 ${isLoading ? 'animate-spin' : ''}`} size={16} />\n      Refresh\n    </button>\n    <button\n      onClick={onAddManual}\n      className=\"inline-flex items-center px-4 py-3 bg-gradient-to-r from-purple-500 to-indigo-600 text-white font-medium rounded-xl hover:from-purple-600 hover:to-indigo-700 transition-all duration-200 shadow-sm hover:shadow-md\"\n    >\n      <FiPlus className=\"mr-2\" size={16} />\n      Add Manual Plan\n    </button>\n    <button\n      onClick={onExport}\n      className=\"inline-flex items-center px-4 py-3 bg-gradient-to-r from-blue-500 to-cyan-600 text-white font-medium rounded-xl hover:from-blue-600 hover:to-cyan-700 transition-all duration-200 shadow-sm hover:shadow-md\"\n    >\n      <FiDownload className=\"mr-2\" size={16} />\n      Export\n    </button>\n  </div>\n);\n\nexport default function VendorTodoList() {\n  const { showSuccess, showError, showWarning } = useNotification();\n  \n  const [state, setState] = useState({\n    vendors: [],\n    todoItems: [],\n    autoGeneratedTodos: [],\n    completedOperations: [],\n    loading: true,\n    error: null,\n    syncing: false,\n    bulkActionIds: []\n  });\n\n  const [uiState, setUiState] = useState({\n    showAddModal: false,\n    editingItem: null,\n    selectedDate: new Date().toISOString().split('T')[0],\n    statusFilter: 'all',\n    operationFilter: 'all',\n    viewMode: 'all',\n    showCompleted: true,\n    searchQuery: '',\n    showBulkActions: false\n  });\n\n  // UI state for Completed Operations panel\n  const [completedOpsUI, setCompletedOpsUI] = useState({\n    filterOp: 'all',\n    vendorQuery: '',\n    selectedKeys: [],\n    visibleCount: 9,\n    creating: false,\n  });\n\n  // Debounced search query\n  const debouncedSearchQuery = useDebounce(uiState.searchQuery, 300);\n\n  // Operation types with enhanced data\n  const operationTypes = useMemo(() => [\n    { value: 'hbl', label: 'Horizontal Boring', color: 'from-blue-500 to-blue-600', icon: FiTool, bgColor: 'bg-blue-100 text-blue-800 border-blue-200' },\n    { value: 'vtl', label: 'Vertical Turning', color: 'from-purple-500 to-purple-600', icon: FiCpu, bgColor: 'bg-purple-100 text-purple-800 border-purple-200' },\n    { value: 'drilling', label: 'Drilling', color: 'from-green-500 to-green-600', icon: FiZap, bgColor: 'bg-green-100 text-green-800 border-green-200' },\n    { value: 'vmc', label: 'Vertical Machining', color: 'from-indigo-500 to-indigo-600', icon: FiTarget, bgColor: 'bg-indigo-100 text-indigo-800 border-indigo-200' },\n    { value: 'grinding', label: 'Grinding', color: 'from-orange-500 to-orange-600', icon: FiTool, bgColor: 'bg-orange-100 text-orange-800 border-orange-200' },\n    { value: 'assembly', label: 'Assembly', color: 'from-indigo-500 to-indigo-600', icon: FiTool, bgColor: 'bg-indigo-100 text-indigo-800 border-indigo-200' },\n    { value: 'painting', label: 'Painting', color: 'from-pink-500 to-pink-600', icon: FiTool, bgColor: 'bg-pink-100 text-pink-800 border-pink-200' },\n    { value: 'packing', label: 'Packing', color: 'from-teal-500 to-teal-600', icon: FiPackage, bgColor: 'bg-teal-100 text-teal-800 border-teal-200' },\n    { value: 'other', label: 'Other', color: 'from-gray-500 to-gray-600', icon: FiTool, bgColor: 'bg-gray-100 text-gray-800 border-gray-200' }\n  ], []);\n\n  const priorities = useMemo(() => [\n    { value: 'high', label: 'High Priority', color: 'from-red-500 to-red-600', bgColor: 'bg-red-100 text-red-800 border-red-200' },\n    { value: 'medium', label: 'Medium Priority', color: 'from-yellow-500 to-yellow-600', bgColor: 'bg-yellow-100 text-yellow-800 border-yellow-200' },\n    { value: 'low', label: 'Low Priority', color: 'from-green-500 to-green-600', bgColor: 'bg-green-100 text-green-800 border-green-200' }\n  ], []);\n\n  const statuses = useMemo(() => [\n    { value: 'pending', label: 'Pending', color: 'from-gray-500 to-gray-600', icon: FiClock, bgColor: 'bg-gray-100 text-gray-800 border-gray-200' },\n    { value: 'in-progress', label: 'In Progress', color: 'from-blue-500 to-blue-600', icon: FiPlay, bgColor: 'bg-blue-100 text-blue-800 border-blue-200' },\n    { value: 'completed', label: 'Completed', color: 'from-green-500 to-green-600', icon: FiCheckCircle, bgColor: 'bg-green-100 text-green-800 border-green-200' },\n    { value: 'cancelled', label: 'Cancelled', color: 'from-red-500 to-red-600', icon: FiX, bgColor: 'bg-red-100 text-red-800 border-red-200' }\n  ], []);\n\n  const [formData, setFormData] = useState({\n    date: new Date().toISOString().split('T')[0],\n    vendors: [{ vendorId: '', bodiesCount: 1 }],\n    operationType: 'hbl',\n    targetLocation: 'VMT Store',\n    notes: '',\n    status: 'pending',\n    priority: 'medium',\n    source: 'manual'\n  });\n\n  // State updater functions\n  const updateState = (updates) => setState(prev => ({ ...prev, ...updates }));\n  const updateUiState = (updates) => setUiState(prev => ({ ...prev, ...updates }));\n\n  // Enhanced error handling\n  const handleError = useCallback((error, context = 'Operation') => {\n    console.error(`${context} error:`, error);\n    updateState({ error: { message: error.message, context } });\n    showError(`${context} failed: ${error.message}`);\n  }, [showError]);\n\n  // Retry mechanism for failed operations\n  const retryOperation = useCallback(async (operation, maxRetries = 3) => {\n    for (let attempt = 1; attempt <= maxRetries; attempt++) {\n      try {\n        return await operation();\n      } catch (error) {\n        if (attempt === maxRetries) throw error;\n        await new Promise(resolve => setTimeout(resolve, 1000 * attempt)); // Exponential backoff\n      }\n    }\n  }, []);\n\n  // Fetch completed operations with enhanced error handling and caching\n  const fetchCompletedOperations = useCallback(async () => {\n    try {\n      const posQuery = query(collection(db, 'purchaseOrders'), limit(1000)); // Limit for performance\n      const snapshot = await retryOperation(() => getDocs(posQuery));\n      \n      const completedOps = [];\n      \n      snapshot.forEach(doc => {\n        const poData = { id: doc.id, ...doc.data() };\n        const operationsStatus = poData.operationsStatus || {};\n        \n        Object.entries(operationsStatus).forEach(([itemIndex, itemOperations]) => {\n          Object.entries(itemOperations).forEach(([operation, status]) => {\n            if (status === 'completed') {\n              const item = poData.items?.[parseInt(itemIndex)] || {};\n              \n              completedOps.push({\n                poId: poData.id,\n                poNumber: poData.poNumber,\n                vendorId: poData.vendorId,\n                vendorName: poData.vendorName || poData.vendor || 'Unknown Vendor',\n                operation: operation,\n                itemIndex: parseInt(itemIndex),\n                itemDescription: item.description || `Item ${parseInt(itemIndex) + 1}`,\n                quantity: item.quantity || 1,\n                unit: item.unit || 'pcs',\n                completedAt: poData.operationsMeta?.[`${itemIndex}_${operation}`]?.completedAt || poData.updatedAt,\n                createdAt: poData.createdAt,\n                vendorTodoCreated: poData.operationsMeta?.[`${itemIndex}_${operation}`]?.vendorTodoCreated || false,\n                vendorTodoId: poData.operationsMeta?.[`${itemIndex}_${operation}`]?.vendorTodoId || null\n              });\n            }\n          });\n        });\n      });\n      \n      updateState({ completedOperations: completedOps });\n      return completedOps;\n    } catch (error) {\n      handleError(error, 'Fetch completed operations');\n      return [];\n    }\n  }, [retryOperation, handleError]);\n\n  // Enhanced auto-create vendor todos with transaction safety\n  const autoCreateVendorTodos = useCallback(async (completedOps) => {\n    if (!completedOps.length) return [];\n\n    try {\n      const batch = writeBatch(db);\n      const createdTodos = [];\n      const opsToUpdate = [];\n      \n      for (const op of completedOps) {\n        if (op.vendorTodoCreated) continue;\n        \n        // Check for existing todo with more specific query\n        const existingTodoQuery = query(\n          collection(db, 'vendorTodos'),\n          where('poId', '==', op.poId),\n          where('operation', '==', op.operation),\n          where('itemIndex', '==', op.itemIndex),\n          where('source', '==', 'statusManager'),\n          limit(1)\n        );\n        \n        const existingSnapshot = await getDocs(existingTodoQuery);\n        \n        if (!existingSnapshot.empty) {\n          opsToUpdate.push({ ...op, vendorTodoId: existingSnapshot.docs[0].id });\n          continue;\n        }\n\n        const dateKey = new Date().toISOString().slice(0, 10);\n        const todoId = `todo_${op.poId}_${op.itemIndex}_${op.operation}_collect_${dateKey}_${Math.random().toString(36).substr(2, 9)}`;\n        const todoRef = doc(db, 'vendorTodos', todoId);\n        \n        const opLower = (op.operation || '').toString().toLowerCase();\n        const allowedOps = ['hbl', 'vtl', 'drilling', 'vmc', 'grinding', 'assembly', 'painting', 'packing', 'other'];\n        const operationType = allowedOps.includes(opLower) ? opLower : 'other';\n\n        const todoData = {\n          id: todoId,\n          date: dateKey,\n          vendors: op.vendorId ? [{ vendorId: op.vendorId, bodiesCount: op.quantity || 1 }] : [],\n          totalBodies: op.quantity || 1,\n          operationType: operationType,\n          targetLocation: 'VMT Store',\n          notes: `Collect material for ${MACHINE_OPERATIONS[op.operation]?.name || op.operation} - ${op.itemDescription} (PO ${op.poNumber})`,\n          status: 'pending',\n          priority: 'high',\n          createdAt: serverTimestamp(),\n          updatedAt: serverTimestamp(),\n          vendorId: op.vendorId || null,\n          vendorName: op.vendorName || null,\n          poId: op.poId,\n          poNumber: op.poNumber,\n          operation: op.operation,\n          itemIndex: op.itemIndex,\n          itemDescription: op.itemDescription,\n          source: 'statusManager',\n          autoGenerated: true,\n          syncVersion: 1 // Version for future compatibility\n        };\n\n        batch.set(todoRef, todoData);\n        createdTodos.push({ id: todoId, ...todoData });\n        opsToUpdate.push({ ...op, vendorTodoId: todoId });\n      }\n      \n      // Update purchase orders\n      for (const op of opsToUpdate) {\n        const poRef = doc(db, 'purchaseOrders', op.poId);\n        const operationKey = `${op.itemIndex}_${op.operation}`;\n        \n        batch.update(poRef, {\n          [`operationsMeta.${operationKey}.vendorTodoCreated`]: true,\n          [`operationsMeta.${operationKey}.vendorTodoId`]: op.vendorTodoId,\n          [`operationsMeta.${operationKey}.updatedAt`]: serverTimestamp(),\n        });\n      }\n      \n      if (createdTodos.length > 0 || opsToUpdate.length > 0) {\n        await retryOperation(() => batch.commit());\n        showSuccess(`Created ${createdTodos.length} new collection tasks`);\n      }\n      \n      return createdTodos;\n    } catch (error) {\n      handleError(error, 'Auto-create vendor todos');\n      throw error;\n    }\n  }, [retryOperation, handleError, showSuccess]);\n\n  // Enhanced data fetching with loading states\n  const fetchData = useCallback(async () => {\n    try {\n      updateState({ loading: true, error: null });\n      \n      // Parallel fetching for better performance\n      const [vendorsSnapshot] = await Promise.all([\n        retryOperation(() => getDocs(collection(db, 'vendors'))),\n      ]);\n\n      const vendorsData = vendorsSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n      updateState({ vendors: vendorsData });\n\n      // Fetch completed operations and auto-create todos\n      const completedOpsData = await fetchCompletedOperations();\n      if (completedOpsData.length > 0) {\n        updateState({ syncing: true });\n        await autoCreateVendorTodos(completedOpsData.filter(op => !op.vendorTodoCreated));\n        updateState({ syncing: false });\n      }\n\n      await fetchTodos();\n    } catch (error) {\n      handleError(error, 'Fetch data');\n    } finally {\n      updateState({ loading: false });\n    }\n  }, [retryOperation, fetchCompletedOperations, autoCreateVendorTodos, handleError]);\n\n  // Real-time listeners with cleanup\n  useEffect(() => {\n    let unsubscribePOs = null;\n    let unsubscribeAutoTodos = null;\n\n    const setupListeners = async () => {\n      try {\n        // Purchase orders listener for real-time updates\n        // Avoid inequality filter on map field (unsupported) which can cause 400 errors\n        const poQuery = query(collection(db, 'purchaseOrders'));\n        unsubscribePOs = onSnapshot(poQuery, \n          (snapshot) => {\n            const newCompletedOps = [];\n            snapshot.docChanges().forEach(change => {\n              if (change.type === 'modified' || change.type === 'added') {\n                const poData = change.doc.data();\n                const operationsStatus = poData.operationsStatus || {};\n                \n                Object.entries(operationsStatus).forEach(([itemIndex, itemOperations]) => {\n                  Object.entries(itemOperations).forEach(([operation, status]) => {\n                    if (status === 'completed') {\n                      const item = poData.items?.[parseInt(itemIndex)] || {};\n                      if (!poData.operationsMeta?.[`${itemIndex}_${operation}`]?.vendorTodoCreated) {\n                        newCompletedOps.push({\n                          poId: change.doc.id,\n                          poNumber: poData.poNumber,\n                          vendorId: poData.vendorId,\n                          vendorName: poData.vendorName || poData.vendor || 'Unknown Vendor',\n                          operation: operation,\n                          itemIndex: parseInt(itemIndex),\n                          itemDescription: item.description || `Item ${parseInt(itemIndex) + 1}`,\n                          quantity: item.quantity || 1,\n                          vendorTodoCreated: false,\n                        });\n                      }\n                    }\n                  });\n                });\n              }\n            });\n\n            if (newCompletedOps.length > 0) {\n              autoCreateVendorTodos(newCompletedOps);\n            }\n          },\n          (error) => handleError(error, 'Purchase orders listener')\n        );\n\n        // Auto-generated todos listener\n        // Auto-generated todos listener\n        // Remove orderBy to avoid composite index requirement that can manifest as 400 in network\n        const autoTodosQuery = query(\n          collection(db, 'vendorTodos'),\n          where('autoGenerated', '==', true),\n          limit(500)\n        );\n        \n        unsubscribeAutoTodos = onSnapshot(autoTodosQuery, \n          (snapshot) => {\n            const autoTodos = snapshot.docs.map(doc => ({\n              id: doc.id,\n              ...doc.data()\n            }));\n            updateState(prev => ({ ...prev, autoGeneratedTodos: autoTodos }));\n          },\n          (error) => handleError(error, 'Auto-todos listener')\n        );\n\n      } catch (error) {\n        handleError(error, 'Setup listeners');\n      }\n    };\n\n    setupListeners();\n\n    return () => {\n      if (unsubscribePOs) unsubscribePOs();\n      if (unsubscribeAutoTodos) unsubscribeAutoTodos();\n    };\n  }, [autoCreateVendorTodos, handleError]);\n\n  // Initial and date-change data load\n  useEffect(() => {\n    fetchData();\n  }, [fetchData, uiState.selectedDate]);\n\n  // Enhanced todos fetching with better error handling\n  const fetchTodos = useCallback(async () => {\n    try {\n      let todosData = [];\n      \n      try {\n        const q = query(\n          collection(db, 'vendorTodos'),\n          where('date', '==', uiState.selectedDate),\n          where('autoGenerated', '==', false),\n          orderBy('createdAt', 'desc'),\n          limit(200)\n        );\n        \n        const snapshot = await getDocs(q);\n        todosData = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n      } catch (error) {\n        if (error.code === 'failed-precondition') {\n          // Fallback: Fetch all and filter client-side\n          const allSnapshot = await getDocs(collection(db, 'vendorTodos'));\n          todosData = allSnapshot.docs\n            .map(doc => ({ id: doc.id, ...doc.data() }))\n            .filter(todo => todo.date === uiState.selectedDate && !todo.autoGenerated)\n            .sort((a, b) => new Date(b.createdAt?.toDate() || 0) - new Date(a.createdAt?.toDate() || 0))\n            .slice(0, 200);\n        } else {\n          throw error;\n        }\n      }\n      \n      updateState(prev => ({ ...prev, todoItems: todosData }));\n    } catch (error) {\n      handleError(error, 'Fetch todos');\n    }\n  }, [uiState.selectedDate, handleError]);\n\n  // Combined todos with search filtering\n  const getCombinedTodos = useCallback(() => {\n    const { viewMode, selectedDate } = uiState;\n    \n    let todos = [];\n    switch (viewMode) {\n      case 'manual':\n        todos = state.todoItems;\n        break;\n      case 'auto':\n        todos = state.autoGeneratedTodos.filter(todo => !selectedDate || todo.date === selectedDate);\n        break;\n      default:\n        const allTodos = [\n          ...state.todoItems,\n          ...state.autoGeneratedTodos.filter(todo => !selectedDate || todo.date === selectedDate)\n        ];\n        // Remove duplicates by ID using Map for better performance\n        todos = Array.from(new Map(allTodos.map(item => [item.id, item])).values());\n    }\n\n    // Apply search filter\n    if (debouncedSearchQuery) {\n      const query = debouncedSearchQuery.toLowerCase();\n      todos = todos.filter(todo => \n        todo.notes?.toLowerCase().includes(query) ||\n        todo.vendorName?.toLowerCase().includes(query) ||\n        todo.poNumber?.toLowerCase().includes(query) ||\n        todo.itemDescription?.toLowerCase().includes(query)\n      );\n    }\n\n    return todos;\n  }, [state.todoItems, state.autoGeneratedTodos, uiState, debouncedSearchQuery]);\n\n  // Helpers for Completed Operations\n  const getOpKey = (op) => `${op.poId}_${op.itemIndex}_${op.operation}`;\n  const parseDate = (d) => {\n    if (!d) return null;\n    try {\n      if (typeof d.toDate === 'function') return d.toDate();\n      return new Date(d);\n    } catch {\n      return null;\n    }\n  };\n  const daysSince = (d) => {\n    const dt = parseDate(d);\n    if (!dt || isNaN(dt.getTime())) return null;\n    const diff = Date.now() - dt.getTime();\n    return Math.floor(diff / (1000 * 60 * 60 * 24));\n  };\n\n  const filteredCompletedOps = useMemo(() => {\n    let list = state.completedOperations || [];\n    if (completedOpsUI.filterOp !== 'all') {\n      list = list.filter(op => (op.operation || '').toLowerCase() === completedOpsUI.filterOp);\n    }\n    if (completedOpsUI.vendorQuery) {\n      const q = completedOpsUI.vendorQuery.toLowerCase();\n      list = list.filter(op => (op.vendorName || '').toLowerCase().includes(q));\n    }\n    return list;\n  }, [state.completedOperations, completedOpsUI.filterOp, completedOpsUI.vendorQuery]);\n\n  const toggleSelectOp = (op) => {\n    const key = getOpKey(op);\n    setCompletedOpsUI(prev => ({\n      ...prev,\n      selectedKeys: prev.selectedKeys.includes(key)\n        ? prev.selectedKeys.filter(k => k !== key)\n        : [...prev.selectedKeys, key]\n    }));\n  };\n\n  const selectAllVisible = () => {\n    const visible = filteredCompletedOps.slice(0, completedOpsUI.visibleCount);\n    const keys = visible.map(getOpKey);\n    setCompletedOpsUI(prev => ({ ...prev, selectedKeys: keys }));\n  };\n\n  const clearCompletedSelection = () => {\n    setCompletedOpsUI(prev => ({ ...prev, selectedKeys: [] }));\n  };\n\n  const handleBulkCreateFromSelected = async () => {\n    if (completedOpsUI.selectedKeys.length === 0) return;\n    try {\n      setCompletedOpsUI(prev => ({ ...prev, creating: true }));\n      const ops = filteredCompletedOps.filter(op => completedOpsUI.selectedKeys.includes(getOpKey(op)) && !op.vendorTodoCreated);\n      if (ops.length === 0) {\n        showSuccess('No new operations to create tasks for');\n        return;\n      }\n      await autoCreateVendorTodos(ops);\n      showSuccess(`Created ${ops.length} collection tasks`);\n      clearCompletedSelection();\n    } catch (error) {\n      handleError(error, 'Bulk create collection tasks');\n    } finally {\n      setCompletedOpsUI(prev => ({ ...prev, creating: false }));\n    }\n  };\n\n  // Filtered todos with memoization for better performance\n  const filteredTodos = useMemo(() => {\n    const todos = getCombinedTodos();\n    \n    return todos.filter(todo => {\n      const statusMatch = uiState.statusFilter === 'all' || todo.status === uiState.statusFilter;\n      const operationMatch = uiState.operationFilter === 'all' || todo.operationType === uiState.operationFilter;\n      \n      return statusMatch && operationMatch;\n    });\n  }, [getCombinedTodos, uiState.statusFilter, uiState.operationFilter]);\n\n  // Enhanced todo operations\n  const handleAddTodo = async (e) => {\n    e.preventDefault();\n    \n    try {\n      const totalBodies = formData.vendors.reduce((sum, vendor) => sum + parseInt(vendor.bodiesCount || 1), 0);\n      \n      const todoData = {\n        ...formData,\n        vendors: formData.vendors.map(vendor => ({\n          ...vendor,\n          vendorName: getVendorName(vendor.vendorId)\n        })),\n        totalBodies,\n        createdAt: serverTimestamp(),\n        updatedAt: serverTimestamp(),\n        autoGenerated: false,\n        source: 'manual'\n      };\n      \n      await retryOperation(() => addDoc(collection(db, 'vendorTodos'), todoData));\n      \n      // Reset form\n      setFormData({\n        date: new Date().toISOString().split('T')[0],\n        vendors: [{ vendorId: '', bodiesCount: 1 }],\n        operationType: 'hbl',\n        targetLocation: 'VMT Store',\n        notes: '',\n        status: 'pending',\n        priority: 'medium',\n        source: 'manual'\n      });\n      \n      updateUiState({ showAddModal: false });\n      fetchTodos();\n      showSuccess('Resource plan added successfully');\n    } catch (error) {\n      handleError(error, 'Add todo');\n    }\n  };\n\n  const handleUpdateTodo = async (todoId, updates) => {\n    try {\n      const todoRef = doc(db, 'vendorTodos', todoId);\n      await retryOperation(() => updateDoc(todoRef, {\n        ...updates,\n        updatedAt: serverTimestamp()\n      }));\n      showSuccess('Todo updated successfully');\n      fetchTodos();\n    } catch (error) {\n      handleError(error, 'Update todo');\n    }\n  };\n\n  // Quick action: Mark as 'Go' (start collection)\n  const handleMarkGo = async (item) => {\n    try {\n      await retryOperation(() => updateDoc(doc(db, 'vendorTodos', item.id), {\n        status: 'in-progress',\n        goAt: serverTimestamp(),\n        updatedAt: serverTimestamp(),\n      }));\n      showSuccess('Marked as going to vendor for pickup');\n      fetchTodos();\n    } catch (error) {\n      handleError(error, 'Mark go');\n    }\n  };\n\n  // Quick action: Mark as 'Picked Up' (complete collection)\n  const handleMarkPickedUp = async (item) => {\n    try {\n      const batch = writeBatch(db);\n\n      // Update the todo\n      batch.update(doc(db, 'vendorTodos', item.id), {\n        status: 'completed',\n        pickedUpAt: serverTimestamp(),\n        updatedAt: serverTimestamp(),\n      });\n\n      // If it's auto-generated from a PO operation, update the PO as well\n      if (item.autoGenerated && item.poId && item.operation && item.itemIndex !== undefined) {\n        const poRef = doc(db, 'purchaseOrders', item.poId);\n        const operationKey = `${item.itemIndex}_${item.operation}`;\n\n        batch.update(poRef, {\n          [`operationsMeta.${operationKey}.materialCollected`]: true,\n          [`operationsMeta.${operationKey}.collectedAt`]: serverTimestamp(),\n          [`operationsMeta.${operationKey}.updatedAt`]: serverTimestamp(),\n        });\n      }\n\n      await retryOperation(() => batch.commit());\n      showSuccess('Marked as picked up and job status updated');\n      fetchTodos();\n    } catch (error) {\n      handleError(error, 'Mark picked up');\n    }\n  };\n\n  // Single delete action\n  const handleDeleteTodo = async (todoId) => {\n    if (!window.confirm('Are you sure you want to delete this todo item?')) {\n      return;\n    }\n\n    try {\n      await retryOperation(() => deleteDoc(doc(db, 'vendorTodos', todoId)));\n      showSuccess('Todo deleted successfully');\n      fetchTodos();\n    } catch (error) {\n      handleError(error, 'Delete todo');\n    }\n  };\n\n  // Create a collection task from a single completed operation (manual button)\n  const handleCreateTodoFromOperation = async (op) => {\n    try {\n      await autoCreateVendorTodos([op]);\n      showSuccess('Collection task created for the completed operation');\n    } catch (error) {\n      handleError(error, 'Create task from operation');\n    }\n  };\n\n  // Bulk operations\n  const handleBulkStatusUpdate = async (newStatus) => {\n    if (state.bulkActionIds.length === 0) return;\n\n    try {\n      const batch = writeBatch(db);\n      state.bulkActionIds.forEach(id => {\n        const todoRef = doc(db, 'vendorTodos', id);\n        batch.update(todoRef, {\n          status: newStatus,\n          updatedAt: serverTimestamp()\n        });\n      });\n\n      await retryOperation(() => batch.commit());\n      showSuccess(`Updated ${state.bulkActionIds.length} items to ${newStatus}`);\n      updateState({ bulkActionIds: [] });\n      updateUiState({ showBulkActions: false });\n      fetchTodos();\n    } catch (error) {\n      handleError(error, 'Bulk status update');\n    }\n  };\n\n  const handleBulkDelete = async () => {\n    if (state.bulkActionIds.length === 0 || !window.confirm(`Are you sure you want to delete ${state.bulkActionIds.length} items?`)) {\n      return;\n    }\n\n    try {\n      const batch = writeBatch(db);\n      state.bulkActionIds.forEach(id => {\n        const todoRef = doc(db, 'vendorTodos', id);\n        batch.delete(todoRef);\n      });\n\n      await retryOperation(() => batch.commit());\n      showSuccess(`Deleted ${state.bulkActionIds.length} items`);\n      updateState({ bulkActionIds: [] });\n      updateUiState({ showBulkActions: false });\n      fetchTodos();\n    } catch (error) {\n      handleError(error, 'Bulk delete');\n    }\n  };\n\n  // Export functionality\n  const handleExport = () => {\n    const data = filteredTodos.map(todo => ({\n      'PO Number': todo.poNumber,\n      'Vendor': todo.vendorName,\n      'Operation': getOperationInfo(todo.operationType).label,\n      'Item Description': todo.itemDescription,\n      'Quantity': todo.totalBodies,\n      'Status': getStatusInfo(todo.status).label,\n      'Priority': getPriorityInfo(todo.priority).label,\n      'Target Location': todo.targetLocation,\n      'Notes': todo.notes,\n      'Created Date': todo.createdAt?.toDate()?.toLocaleDateString() || 'N/A'\n    }));\n\n    const csv = [\n      Object.keys(data[0] || {}).join(','),\n      ...data.map(row => Object.values(row).map(field => `\"${field}\"`).join(','))\n    ].join('\\n');\n\n    const blob = new Blob([csv], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `vendor-todos-${uiState.selectedDate}.csv`;\n    a.click();\n    window.URL.revokeObjectURL(url);\n    \n    showSuccess('Data exported successfully');\n  };\n\n  // Utility functions\n  const getVendorName = (vendorId) => {\n    const vendor = state.vendors.find(v => v.id === vendorId);\n    return vendor ? vendor.name : 'Unknown Vendor';\n  };\n\n  const getStatusInfo = (status) => statuses.find(s => s.value === status) || statuses[0];\n  const getPriorityInfo = (priority) => priorities.find(p => p.value === priority) || priorities[1];\n  const getOperationInfo = (operationType) => operationTypes.find(op => op.value === operationType) || operationTypes[0];\n  const getMachineOperationName = (operation) => MACHINE_OPERATIONS[operation]?.name || operation;\n\n  // Stats calculation\n  const stats = useMemo(() => {\n    const combined = getCombinedTodos();\n    return {\n      totalBodies: combined.reduce((sum, item) => sum + (item.totalBodies || 0), 0),\n      completedItems: combined.filter(item => item.status === 'completed').length,\n      pendingItems: combined.filter(item => item.status === 'pending').length,\n      inProgressItems: combined.filter(item => item.status === 'in-progress').length,\n      cancelledItems: combined.filter(item => item.status === 'cancelled').length,\n      totalItems: combined.length\n    };\n  }, [getCombinedTodos]);\n\n  if (state.error) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 py-8\">\n        <div className=\"max-w-4xl mx-auto\">\n          <ErrorBoundary error={state.error} onRetry={fetchData} />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-8\">\n      {state.loading ? (\n        <LoadingSpinner message=\"Loading vendor collection tasks...\" />\n      ) : (\n        <div className=\"max-w-7xl mx-auto space-y-6 px-4\">\n          {/* Header Section */}\n          <div className=\"bg-white p-6 rounded-xl shadow-sm border border-gray-200\">\n            <div className=\"flex flex-col lg:flex-row justify-between items-start lg:items-center gap-4\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-12 h-12 bg-gradient-to-br from-purple-500 to-indigo-600 rounded-xl flex items-center justify-center\">\n                  <FiTruck className=\"text-white\" size={24} />\n                </div>\n                <div>\n                  <h1 className=\"text-2xl font-bold text-gray-900\">Vendor Material Collection</h1>\n                  <p className=\"text-gray-600\">Manage vendor resource allocation and material collection from completed jobs</p>\n                </div>\n              </div>\n              <QuickActions\n                onSync={async () => {\n                  updateState({ syncing: true });\n                  try {\n                    const ops = await fetchCompletedOperations();\n                    const newOps = ops.filter(op => !op.vendorTodoCreated);\n                    if (newOps.length > 0) {\n                      await autoCreateVendorTodos(newOps);\n                      showSuccess(`Created ${newOps.length} new collection tasks`);\n                    } else {\n                      showSuccess('No new completed operations found');\n                    }\n                  } catch (error) {\n                    handleError(error, 'Sync Completed Jobs');\n                  } finally {\n                    updateState({ syncing: false });\n                  }\n                }}\n                onRefresh={fetchData}\n                onAddManual={() => updateUiState({ showAddModal: true })}\n                onExport={handleExport}\n                isLoading={state.syncing}\n              />\n            </div>\n          </div>\n\n          {/* View Mode Toggle */}\n          <div className=\"bg-white p-4 rounded-xl shadow-sm border border-gray-200\">\n            <div className=\"flex flex-wrap gap-2\">\n              {[\n                { value: 'all', label: 'All Tasks', color: 'bg-indigo-100 text-indigo-700 border-indigo-300' },\n                { value: 'manual', label: 'Manual Plans', color: 'bg-blue-100 text-blue-700 border-blue-300' },\n                { value: 'auto', label: 'Auto-Generated', color: 'bg-green-100 text-green-700 border-green-300' }\n              ].map(mode => (\n                <button\n                  key={mode.value}\n                  onClick={() => updateUiState({ viewMode: mode.value })}\n                  className={`px-4 py-2 rounded-lg font-medium transition-all duration-200 ${\n                    uiState.viewMode === mode.value ? mode.color : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n                  }`}\n                >\n                  {mode.label}\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* Stats Grid */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            <StatsCard\n              title=\"Total Bodies\"\n              value={stats.totalBodies}\n              icon={FiUsers}\n              color=\"from-blue-500 to-indigo-600\"\n              subtitle=\"Across all tasks\"\n            />\n            <StatsCard\n              title=\"Completed\"\n              value={stats.completedItems}\n              icon={FiCheckCircle}\n              color=\"from-green-500 to-emerald-600\"\n              subtitle={`${stats.totalItems > 0 ? Math.round((stats.completedItems / stats.totalItems) * 100) : 0}% completion rate`}\n            />\n            <StatsCard\n              title=\"In Progress\"\n              value={stats.inProgressItems}\n              icon={FiPlay}\n              color=\"from-orange-500 to-amber-600\"\n              subtitle=\"Being processed\"\n            />\n            <StatsCard\n              title=\"Pending\"\n              value={stats.pendingItems}\n              icon={FiClock}\n              color=\"from-red-500 to-rose-600\"\n              subtitle=\"Awaiting action\"\n            />\n          </div>\n\n          {/* Filters Section */}\n          <div className=\"bg-white p-6 rounded-xl shadow-sm border border-gray-200\">\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Search</label>\n                <div className=\"relative\">\n                  <FiSearch className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n                  <input\n                    type=\"text\"\n                    value={uiState.searchQuery}\n                    onChange={(e) => updateUiState({ searchQuery: e.target.value })}\n                    placeholder=\"Search notes, vendor, PO...\"\n                    className=\"w-full pl-10 pr-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n                  />\n                </div>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Date</label>\n                <div className=\"relative\">\n                  <FiCalendar className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n                  <input\n                    type=\"date\"\n                    value={uiState.selectedDate}\n                    onChange={(e) => updateUiState({ selectedDate: e.target.value })}\n                    className=\"w-full pl-10 pr-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n                  />\n                </div>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Status</label>\n                <select\n                  value={uiState.statusFilter}\n                  onChange={(e) => updateUiState({ statusFilter: e.target.value })}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n                >\n                  <option value=\"all\">All Statuses</option>\n                  {statuses.map(status => (\n                    <option key={status.value} value={status.value}>{status.label}</option>\n                  ))}\n                </select>\n              </div>\n              \n              <div className=\"flex items-end space-x-4\">\n                <label className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    checked={uiState.showCompleted}\n                    onChange={(e) => updateUiState({ showCompleted: e.target.checked })}\n                    className=\"rounded border-gray-300 text-indigo-600 focus:ring-indigo-500\"\n                  />\n                  <span className=\"ml-2 text-sm text-gray-700\">Show completed</span>\n                </label>\n              </div>\n            </div>\n          </div>\n\n          {/* Bulk Actions */}\n          {state.bulkActionIds.length > 0 && (\n            <div className=\"bg-yellow-50 border border-yellow-200 rounded-xl p-4\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <FiAlertTriangle className=\"text-yellow-600\" size={20} />\n                  <span className=\"text-yellow-800 font-medium\">\n                    {state.bulkActionIds.length} items selected\n                  </span>\n                </div>\n                <div className=\"flex space-x-2\">\n                  <select\n                    onChange={(e) => handleBulkStatusUpdate(e.target.value)}\n                    className=\"px-3 py-2 border border-yellow-300 rounded-lg bg-white\"\n                  >\n                    <option value=\"\">Update Status</option>\n                    {statuses.map(status => (\n                      <option key={status.value} value={status.value}>{status.label}</option>\n                    ))}\n                  </select>\n                  <button\n                    onClick={handleBulkDelete}\n                    className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors\"\n                  >\n                    Delete Selected\n                  </button>\n                  <button\n                    onClick={() => updateState({ bulkActionIds: [] })}\n                    className=\"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\"\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Todo Items Section */}\n          <div className=\"space-y-6\">\n            {/* Active Todos */}\n            {filteredTodos.filter(t => t.status !== 'completed').length > 0 && (\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n                  <FiActivity className=\"mr-2 text-blue-500\" />\n                  Active Tasks ({filteredTodos.filter(t => t.status !== 'completed').length})\n                </h3>\n                <div className=\"grid gap-4\">\n                  {filteredTodos\n                    .filter(t => t.status !== 'completed')\n                    .map((item) => (\n                      <TodoItem \n                        key={item.id} \n                        item={item} \n                        onEdit={(item) => updateUiState({ editingItem: item })}\n                        onDelete={handleDeleteTodo}\n                        onMarkGo={handleMarkGo}\n                        onMarkPickedUp={handleMarkPickedUp}\n                        getVendorName={getVendorName}\n                        getStatusInfo={getStatusInfo}\n                        getPriorityInfo={getPriorityInfo}\n                        getOperationInfo={getOperationInfo}\n                        onSelect={(id, selected) => {\n                          updateState(prev => ({\n                            bulkActionIds: selected \n                              ? [...prev.bulkActionIds, id]\n                              : prev.bulkActionIds.filter(itemId => itemId !== id)\n                          }));\n                        }}\n                        isSelected={state.bulkActionIds.includes(item.id)}\n                      />\n                    ))}\n                </div>\n              </div>\n            )}\n\n            {/* Completed Todos */}\n            {uiState.showCompleted && filteredTodos.filter(t => t.status === 'completed').length > 0 && (\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n                  <FiCheckCircle className=\"mr-2 text-green-500\" />\n                  Completed ({filteredTodos.filter(t => t.status === 'completed').length})\n                </h3>\n                <div className=\"grid gap-4\">\n                  {filteredTodos\n                    .filter(t => t.status === 'completed')\n                    .map((item) => (\n                      <TodoItem \n                        key={item.id} \n                        item={item} \n                        onEdit={(item) => updateUiState({ editingItem: item })}\n                        onDelete={handleDeleteTodo}\n                        getVendorName={getVendorName}\n                        getStatusInfo={getStatusInfo}\n                        getPriorityInfo={getPriorityInfo}\n                        getOperationInfo={getOperationInfo}\n                        onSelect={(id, selected) => {\n                          updateState(prev => ({\n                            bulkActionIds: selected \n                              ? [...prev.bulkActionIds, id]\n                              : prev.bulkActionIds.filter(itemId => itemId !== id)\n                          }));\n                        }}\n                        isSelected={state.bulkActionIds.includes(item.id)}\n                      />\n                    ))}\n                </div>\n              </div>\n            )}\n\n            {/* Empty State */}\n            {filteredTodos.length === 0 && (\n              <div className=\"text-center py-16 bg-white rounded-xl border border-gray-200\">\n                <FiTruck className=\"mx-auto text-gray-300 mb-4\" size={64} />\n                <h3 className=\"text-xl font-medium text-gray-900 mb-2\">No collection tasks found</h3>\n                <p className=\"text-gray-500 mb-6\">\n                  {uiState.searchQuery \n                    ? 'No tasks match your search criteria.' \n                    : `No ${uiState.viewMode === 'auto' ? 'auto-generated' : uiState.viewMode === 'manual' ? 'manual' : ''} collection tasks found for the selected filters.`\n                  }\n                </p>\n                {uiState.searchQuery && (\n                  <button\n                    onClick={() => updateUiState({ searchQuery: '' })}\n                    className=\"px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors\"\n                  >\n                    Clear Search\n                  </button>\n                )}\n              </div>\n            )}\n          </div>\n\n          {/* Completed Operations Panel */}\n          <div className=\"bg-white p-6 rounded-xl shadow-sm border border-gray-200\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-8 h-8 bg-gradient-to-br from-green-500 to-emerald-600 rounded-xl flex items-center justify-center\">\n                  <FiCheckCircle className=\"text-white\" size={16} />\n                </div>\n                <h3 className=\"text-lg font-semibold text-gray-900\">Completed Operations Ready for Collection</h3>\n                <span className=\"px-3 py-1 bg-green-100 text-green-800 text-sm rounded-full font-medium\">\n                  {filteredCompletedOps.length} operations\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <button\n                  onClick={fetchCompletedOperations}\n                  className=\"flex items-center px-3 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors\"\n                >\n                  <FiRefreshCw size={14} className=\"mr-2\" />\n                  Refresh\n                </button>\n                <button\n                  onClick={selectAllVisible}\n                  className=\"px-3 py-2 bg-indigo-100 text-indigo-700 rounded-lg hover:bg-indigo-200 transition-colors\"\n                >\n                  Select Visible\n                </button>\n                {completedOpsUI.selectedKeys.length > 0 && (\n                  <>\n                    <button\n                      onClick={handleBulkCreateFromSelected}\n                      disabled={completedOpsUI.creating}\n                      className=\"px-3 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50\"\n                    >\n                      Create Selected ({completedOpsUI.selectedKeys.length})\n                    </button>\n                    <button\n                      onClick={clearCompletedSelection}\n                      className=\"px-3 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700\"\n                    >\n                      Clear\n                    </button>\n                  </>\n                )}\n              </div>\n            </div>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Operation</label>\n                <select\n                  value={completedOpsUI.filterOp}\n                  onChange={(e) => setCompletedOpsUI(prev => ({ ...prev, filterOp: e.target.value }))}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                >\n                  <option value=\"all\">All</option>\n                  {operationTypes.map(op => (\n                    <option key={op.value} value={op.value}>{op.label}</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"md:col-span-2\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Vendor</label>\n                <input\n                  type=\"text\"\n                  value={completedOpsUI.vendorQuery}\n                  onChange={(e) => setCompletedOpsUI(prev => ({ ...prev, vendorQuery: e.target.value }))}\n                  placeholder=\"Search vendor name...\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                />\n              </div>\n            </div>\n            \n            {filteredCompletedOps.length > 0 ? (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                {filteredCompletedOps.slice(0, completedOpsUI.visibleCount).map((op, index) => (\n                  <div key={getOpKey(op)} className={`border rounded-lg p-4 transition-all duration-200 ${\n                    op.vendorTodoCreated \n                      ? 'bg-gray-50 border-gray-200' \n                      : 'bg-green-50 border-green-200 hover:bg-green-100'\n                  }`}>\n                    <div className=\"flex justify-between items-start mb-3\">\n                      <div className=\"flex items-center gap-2\">\n                        <input\n                          type=\"checkbox\"\n                          checked={completedOpsUI.selectedKeys.includes(getOpKey(op))}\n                          onChange={() => toggleSelectOp(op)}\n                          disabled={op.vendorTodoCreated}\n                        />\n                        <span className=\"font-medium text-gray-800\">{getMachineOperationName(op.operation)}</span>\n                      </div>\n                      <span className={`text-xs px-2 py-1 rounded-full font-medium ${\n                        op.vendorTodoCreated \n                          ? 'bg-gray-200 text-gray-800' \n                          : 'bg-green-200 text-green-800'\n                      }`}>\n                        {op.vendorTodoCreated ? 'Task Created' : 'Ready for pickup'}\n                      </span>\n                    </div>\n                    <div className=\"space-y-2 text-sm text-gray-700\">\n                      <div className=\"flex justify-between\">\n                        <span>PO:</span>\n                        <span className=\"font-medium\">{op.poNumber}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Item:</span>\n                        <span className=\"font-medium truncate ml-2 max-w-[120px]\">{op.itemDescription}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Vendor:</span>\n                        <span className=\"font-medium\">{op.vendorName}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Qty:</span>\n                        <span className=\"font-medium\">{op.quantity} {op.unit}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Completed:</span>\n                        <span className=\"font-medium\">\n                          {(() => { const d = daysSince(op.completedAt || op.createdAt); return d === null ? 'N/A' : `${d} day${d===1?'':'s'} ago`; })()}\n                        </span>\n                      </div>\n                    </div>\n                    {!op.vendorTodoCreated && (\n                      <button\n                        onClick={() => handleCreateTodoFromOperation(op)}\n                        className=\"mt-3 w-full py-2 bg-green-500 text-white text-sm rounded-lg hover:bg-green-600 transition-colors font-medium\"\n                      >\n                        Create Collection Task\n                      </button>\n                    )}\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"text-center py-8 text-gray-500\">\n                <FiCheckCircle className=\"mx-auto text-gray-300 mb-3\" size={48} />\n                <p className=\"text-lg font-medium text-gray-900 mb-2\">No completed operations</p>\n                <p className=\"text-gray-600\">Completed operations from purchase orders will appear here automatically</p>\n              </div>\n            )}\n            {filteredCompletedOps.length > completedOpsUI.visibleCount && (\n              <div className=\"text-center mt-6\">\n                <button\n                  onClick={() => setCompletedOpsUI(prev => ({ ...prev, visibleCount: prev.visibleCount + 9 }))}\n                  className=\"px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700\"\n                >\n                  Load more ({filteredCompletedOps.length - completedOpsUI.visibleCount} more)\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Add Todo Modal */}\n      {uiState.showAddModal && (\n        <AddTodoModal\n          formData={formData}\n          setFormData={setFormData}\n          vendors={state.vendors}\n          operationTypes={operationTypes}\n          priorities={priorities}\n          statuses={statuses}\n          onAdd={handleAddTodo}\n          onClose={() => updateUiState({ showAddModal: false })}\n          addVendorField={() => {\n            setFormData(prev => ({\n              ...prev,\n              vendors: [...prev.vendors, { vendorId: '', bodiesCount: 1 }]\n            }));\n          }}\n          removeVendorField={(index) => {\n            const updatedVendors = [...formData.vendors];\n            updatedVendors.splice(index, 1);\n            setFormData(prev => ({ ...prev, vendors: updatedVendors }));\n          }}\n          updateVendorField={(index, field, value) => {\n            const updatedVendors = [...formData.vendors];\n            updatedVendors[index][field] = value;\n            setFormData(prev => ({ ...prev, vendors: updatedVendors }));\n          }}\n        />\n      )}\n\n      {/* Edit Todo Modal */}\n      {uiState.editingItem && (\n        <EditTodoModal\n          item={uiState.editingItem}\n          vendors={state.vendors}\n          operationTypes={operationTypes}\n          priorities={priorities}\n          statuses={statuses}\n          onUpdate={handleUpdateTodo}\n          onClose={() => updateUiState({ editingItem: null })}\n        />\n      )}\n    </div>\n  );\n}"],"names":["TodoItem","_ref","item","onEdit","onDelete","onMarkGo","onMarkPickedUp","getVendorName","getStatusInfo","getPriorityInfo","getOperationInfo","status","label","priority","operation","operationType","_jsxs","className","children","_jsx","color","FiMapPin","targetLocation","FiUsers","vendors","map","v","idx","vendorId","bodiesCount","notes","poNumber","itemDescription","onClick","title","FiPlay","FiCheckCircle","FiEdit2","id","FiTrash2","FiClock","date","FiFlag","totalBodies","reduce","s","parseInt","AddTodoModal","formData","setFormData","operationTypes","priorities","statuses","onAdd","onClose","addVendorField","removeVendorField","updateVendorField","onSubmit","type","value","onChange","e","target","required","op","vendor","name","min","placeholder","length","p","EditTodoModal","onUpdate","local","setLocal","useState","Date","toISOString","split","index","field","arr","preventDefault","sum","i","filter","_","MACHINE_OPERATIONS","HBL","icon","FiTool","VTL","FiCpu","Drilling","FiZap","VMC","FiTarget","Grinding","Assembly","Painting","Packing","FiPackage","useDebounce","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","LoadingSpinner","message","ErrorBoundary","_ref2","error","onRetry","FiAlertTriangle","size","StatsCard","_ref3","Icon","subtitle","QuickActions","_ref4","onSync","onRefresh","onAddManual","onExport","isLoading","disabled","FiRefreshCw","FiPlus","FiDownload","VendorTodoList","showSuccess","showError","showWarning","useNotification","state","setState","todoItems","autoGeneratedTodos","completedOperations","loading","syncing","bulkActionIds","uiState","setUiState","showAddModal","editingItem","selectedDate","statusFilter","operationFilter","viewMode","showCompleted","searchQuery","showBulkActions","completedOpsUI","setCompletedOpsUI","filterOp","vendorQuery","selectedKeys","visibleCount","creating","debouncedSearchQuery","useMemo","bgColor","FiX","source","updateState","updates","prev","updateUiState","handleError","useCallback","context","arguments","undefined","console","retryOperation","async","maxRetries","attempt","Promise","resolve","fetchCompletedOperations","posQuery","query","collection","db","limit","snapshot","getDocs","completedOps","forEach","doc","poData","data","operationsStatus","Object","entries","_ref5","itemIndex","itemOperations","_ref6","_poData$items","_poData$operationsMet","_poData$operationsMet2","_poData$operationsMet3","_poData$operationsMet4","_poData$operationsMet5","_poData$operationsMet6","items","push","poId","vendorName","description","quantity","unit","completedAt","operationsMeta","updatedAt","createdAt","vendorTodoCreated","vendorTodoId","autoCreateVendorTodos","batch","writeBatch","createdTodos","opsToUpdate","_MACHINE_OPERATIONS$o","existingTodoQuery","where","existingSnapshot","empty","docs","dateKey","slice","todoId","Math","random","toString","substr","todoRef","opLower","toLowerCase","includes","todoData","serverTimestamp","autoGenerated","syncVersion","set","poRef","operationKey","update","commit","fetchData","vendorsSnapshot","all","vendorsData","completedOpsData","fetchTodos","unsubscribePOs","unsubscribeAutoTodos","poQuery","onSnapshot","newCompletedOps","docChanges","change","_ref7","_ref8","_poData$items2","_poData$operationsMet7","_poData$operationsMet8","autoTodosQuery","autoTodos","setupListeners","todosData","q","orderBy","code","allSnapshot","todo","sort","a","b","_b$createdAt","_a$createdAt","toDate","getCombinedTodos","todos","allTodos","Array","from","Map","values","_todo$notes","_todo$vendorName","_todo$poNumber","_todo$itemDescription","getOpKey","daysSince","d","dt","parseDate","isNaN","getTime","diff","now","floor","filteredCompletedOps","list","clearCompletedSelection","filteredTodos","statusMatch","operationMatch","handleMarkGo","updateDoc","goAt","handleMarkPickedUp","pickedUpAt","handleDeleteTodo","window","confirm","deleteDoc","find","getMachineOperationName","_MACHINE_OPERATIONS$o2","stats","combined","completedItems","pendingItems","inProgressItems","cancelledItems","totalItems","FiTruck","newOps","handleExport","_todo$createdAt","_todo$createdAt$toDat","toLocaleDateString","csv","keys","join","row","blob","Blob","url","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","mode","round","FiSearch","FiCalendar","checked","newStatus","handleBulkStatusUpdate","delete","t","FiActivity","onSelect","selected","itemId","isSelected","selectAllVisible","_Fragment","ops","key","k","toggleSelectOp","handleCreateTodoFromOperation","addDoc","updatedVendors","splice"],"sourceRoot":""}